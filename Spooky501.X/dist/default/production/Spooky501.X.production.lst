

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Nov  7 20:20:23 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	10F220
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     5                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x1C,4
    10  0000                     
    11                           ; Version 2.40
    12                           ; Generated 06/12/2021 GMT
    13                           ; 
    14                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC10F220 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0001                     _TMR0	set	1
    56  0008                     _ADRES	set	8
    57  0006                     _TRISGPIO	set	6
    58  0000                     _OPTION	set	0
    59  0039                     _GO_nDONE	set	57
    60  0038                     _ADON	set	56
    61  0033                     _GP3	set	51
    62  0032                     _GP2	set	50
    63                           
    64                           	psect	cinit
    65  001                     start_initialization:	
    66                           ; #config settings
    67                           
    68  001                     __initialization:
    69  001                     end_of_initialization:	
    70                           ;End of C runtime variable initialization code
    71                           
    72  001                     __end_of__initialization:
    73  001  0064               	clrf	4
    74  002  0A03               	ljmp	_main	;jump to C main() function
    75                           
    76                           	psect	cstackBANK0
    77  010                     __pcstackBANK0:
    78  010                     ?_main:
    79  010                     ??_main:	
    80                           ; 1 bytes @ 0x0
    81                           
    82                           
    83                           ; 1 bytes @ 0x0
    84  010                     	ds	1
    85  011                     main@animationCounter:
    86                           
    87                           ; 1 bytes @ 0x1
    88  011                     	ds	1
    89  012                     main@dutyDelta:
    90                           
    91                           ; 1 bytes @ 0x2
    92  012                     	ds	1
    93  013                     main@duty:
    94                           
    95                           ; 2 bytes @ 0x3
    96  013                     	ds	2
    97                           
    98                           	psect	maintext
    99  003                     __pmaintext:	
   100 ;;
   101 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   102 ;;
   103 ;; *************** function _main *****************
   104 ;; Defined at:
   105 ;;		line 29 in file "main.c"
   106 ;; Parameters:    Size  Location     Type
   107 ;;		None
   108 ;; Auto vars:     Size  Location     Type
   109 ;;  duty            2    3[BANK0 ] int 
   110 ;;  dutyDelta       1    2[BANK0 ] char 
   111 ;;  animationCou    1    1[BANK0 ] unsigned char 
   112 ;; Return value:  Size  Location     Type
   113 ;;                  1   20[None  ] void 
   114 ;; Registers used:
   115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3
   116 ;; Tracked objects:
   117 ;;		On entry : B00/0
   118 ;;		On exit  : 0/0
   119 ;;		Unchanged: 0/0
   120 ;; Data sizes:     COMMON   BANK0
   121 ;;      Params:         0       0
   122 ;;      Locals:         0       4
   123 ;;      Temps:          0       1
   124 ;;      Totals:         0       5
   125 ;;Total ram usage:        5 bytes
   126 ;; This function calls:
   127 ;;		Nothing
   128 ;; This function is called by:
   129 ;;		Startup code after reset
   130 ;; This function uses a non-reentrant model
   131 ;;
   132                           
   133  003                     _main:	
   134                           ;psect for function _main
   135                           
   136  003                     l602:	
   137                           ;incstack = 0
   138                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+3]
   139                           
   140                           
   141                           ;main.c: 34:     OPTION = 0b11010010;
   142  003  0CD2               	movlw	210
   143  004  0002               	option
   144                           
   145                           ;main.c: 35:     TRISGPIO = 0b11111011;
   146  005  0CFB               	movlw	251
   147  006  0006               	tris	6
   148  007                     l604:
   149                           
   150                           ;main.c: 37:     int16_t duty = 0;
   151  007  0073               	clrf	main@duty
   152  008  0074               	clrf	main@duty+1
   153  009                     l606:
   154                           
   155                           ;main.c: 38:     int8_t dutyDelta = 1;
   156  009  0072               	clrf	main@dutyDelta
   157  00A  02B2               	incf	main@dutyDelta,f
   158  00B                     l608:
   159                           
   160                           ;main.c: 39:     uint8_t animationCounter = 0;
   161  00B  0071               	clrf	main@animationCounter
   162  00C                     l610:
   163                           
   164                           ;main.c: 40:     GP2 = 1;
   165  00C  0546               	bsf	6,2	;volatile
   166  00D                     l612:
   167                           
   168                           ;main.c: 43:         if (GP3 == 0 && duty == 50) {
   169  00D  0666               	btfsc	6,3	;volatile
   170  00E  0A10               	goto	u131
   171  00F  0A11               	goto	u130
   172  010                     u131:
   173  010  0A1B               	goto	l618
   174  011                     u130:
   175  011                     l614:
   176  011  0C32               	movlw	50
   177  012  0193               	xorwf	main@duty,w
   178  013  0114               	iorwf	main@duty+1,w
   179  014  0743               	btfss	3,2
   180  015  0A17               	goto	u141
   181  016  0A18               	goto	u140
   182  017                     u141:
   183  017  0A1B               	goto	l618
   184  018                     u140:
   185  018                     l616:
   186                           
   187                           ;main.c: 44:             GP2 = 1;
   188  018  0546               	bsf	6,2	;volatile
   189  019  0003               	sleep	;# 
   190                           
   191                           ;main.c: 46:         } else if (GP3 == 1 && duty == 50){
   192  01A  0A34               	goto	l630
   193  01B                     l618:
   194  01B  0766               	btfss	6,3	;volatile
   195  01C  0A1E               	goto	u151
   196  01D  0A1F               	goto	u150
   197  01E                     u151:
   198  01E  0A34               	goto	l630
   199  01F                     u150:
   200  01F                     l620:
   201  01F  0C32               	movlw	50
   202  020  0193               	xorwf	main@duty,w
   203  021  0114               	iorwf	main@duty+1,w
   204  022  0743               	btfss	3,2
   205  023  0A25               	goto	u161
   206  024  0A26               	goto	u160
   207  025                     u161:
   208  025  0A34               	goto	l630
   209  026                     u160:
   210  026                     l622:
   211                           
   212                           ;main.c: 47:             ADON = 1;
   213  026  0507               	bsf	7,0	;volatile
   214                           
   215                           ;main.c: 48:             GO_nDONE = 1;
   216  027  0527               	bsf	7,1	;volatile
   217  028                     l624:	
   218                           ;main.c: 49:             while(GO_nDONE){};
   219                           
   220  028  0627               	btfsc	7,1	;volatile
   221  029  0A2B               	goto	u171
   222  02A  0A2C               	goto	u170
   223  02B                     u171:
   224  02B  0A28               	goto	l624
   225  02C                     u170:
   226  02C                     l626:
   227                           
   228                           ;main.c: 50:             if (ADRES > 48) {
   229  02C  0C31               	movlw	49
   230  02D  0088               	subwf	8,w	;volatile
   231  02E  0703               	skipc
   232  02F  0A31               	goto	u181
   233  030  0A32               	goto	u180
   234  031                     u181:
   235  031  0A34               	goto	l630
   236  032                     u180:
   237  032                     l628:
   238                           
   239                           ;main.c: 51:                 GP2 = 1;
   240  032  0546               	bsf	6,2	;volatile
   241  033  0003               	sleep	;# 
   242  034                     l630:
   243                           
   244                           ;main.c: 55:         GP2 = TMR0 > duty;
   245  034  0201               	movf	1,w	;volatile
   246  035  003C               	movwf	btemp
   247  036  007D               	clrf	btemp+1
   248  037  0214               	movf	main@duty+1,w
   249  038  003F               	movwf	btemp+3
   250  039  0213               	movf	main@duty,w
   251  03A  003E               	movwf	btemp+2
   252  03B  021F               	movf	wtemp1+1,w
   253  03C  0F80               	xorlw	128
   254  03D  0030               	movwf	??_main
   255  03E  021D               	movf	wtemp0+1,w
   256  03F  0F80               	xorlw	128
   257  040  0090               	subwf	??_main,w
   258  041  0743               	skipz
   259  042  0A45               	goto	u195
   260  043  021C               	movf	wtemp0,w
   261  044  009E               	subwf	wtemp1,w
   262  045                     u195:
   263  045  0703               	skipc
   264  046  0A48               	goto	u191
   265  047  0A4A               	goto	u190
   266  048                     u191:
   267  048  0546               	bsf	6,2	;volatile
   268  049  0A4B               	goto	u204
   269  04A                     u190:
   270  04A  0446               	bcf	6,2	;volatile
   271  04B                     u204:
   272  04B                     l632:
   273                           
   274                           ;main.c: 56:         animationCounter += 4;
   275  04B  0C04               	movlw	4
   276  04C  003F               	movwf	btemp+3
   277  04D  021F               	movf	btemp+3,w
   278  04E  01F1               	addwf	main@animationCounter,f
   279  04F                     l634:
   280                           
   281                           ;main.c: 57:         duty += animationCounter == 0 ? dutyDelta : 0;
   282  04F  0211               	movf	main@animationCounter,w
   283  050  0643               	btfsc	3,2
   284  051  0A53               	goto	u211
   285  052  0A54               	goto	u210
   286  053                     u211:
   287  053  0A55               	goto	l638
   288  054                     u210:
   289  054  0A60               	goto	l640
   290  055                     l638:
   291  055  0212               	movf	main@dutyDelta,w
   292  056  003C               	movwf	btemp
   293  057  007D               	clrf	btemp+1
   294  058  06FC               	btfsc	btemp,7
   295  059  00FD               	decf	btemp+1,f
   296  05A  021C               	movf	wtemp0,w
   297  05B  01F3               	addwf	main@duty,f
   298  05C  0603               	skipnc
   299  05D  02B4               	incf	main@duty+1,f
   300  05E  021D               	movf	wtemp0+1,w
   301  05F  01F4               	addwf	main@duty+1,f
   302  060                     l640:
   303                           
   304                           ;main.c: 58:         if (duty < 50 || duty > 300) {
   305  060  0214               	movf	main@duty+1,w
   306  061  003F               	movwf	btemp+3
   307  062  0213               	movf	main@duty,w
   308  063  003E               	movwf	btemp+2
   309  064  021F               	movf	wtemp1+1,w
   310  065  0F80               	xorlw	128
   311  066  003C               	movwf	btemp
   312  067  0C80               	movlw	128
   313  068  009C               	subwf	btemp,w
   314  069  0743               	skipz
   315  06A  0A6D               	goto	u225
   316  06B  0C32               	movlw	50
   317  06C  009E               	subwf	wtemp1,w
   318  06D                     u225:
   319  06D  0703               	skipc
   320  06E  0A70               	goto	u221
   321  06F  0A71               	goto	u220
   322  070                     u221:
   323  070  0A82               	goto	l644
   324  071                     u220:
   325  071                     l642:
   326  071  0214               	movf	main@duty+1,w
   327  072  003F               	movwf	btemp+3
   328  073  0213               	movf	main@duty,w
   329  074  003E               	movwf	btemp+2
   330  075  021F               	movf	wtemp1+1,w
   331  076  0F80               	xorlw	128
   332  077  003C               	movwf	btemp
   333  078  0C81               	movlw	129
   334  079  009C               	subwf	btemp,w
   335  07A  0743               	skipz
   336  07B  0A7E               	goto	u235
   337  07C  0C2D               	movlw	45
   338  07D  009E               	subwf	wtemp1,w
   339  07E                     u235:
   340  07E  0703               	skipc
   341  07F  0A81               	goto	u231
   342  080  0A82               	goto	u230
   343  081                     u231:
   344  081  0A9E               	goto	l33
   345  082                     u230:
   346  082                     l644:
   347                           
   348                           ;main.c: 59:             dutyDelta = -dutyDelta;
   349  082  0272               	comf	main@dutyDelta,f
   350  083  02B2               	incf	main@dutyDelta,f
   351  084                     l646:
   352                           
   353                           ;main.c: 60:             duty = duty < 50 ? 50 : 300;
   354  084  0214               	movf	main@duty+1,w
   355  085  003F               	movwf	btemp+3
   356  086  0213               	movf	main@duty,w
   357  087  003E               	movwf	btemp+2
   358  088  021F               	movf	wtemp1+1,w
   359  089  0F80               	xorlw	128
   360  08A  003C               	movwf	btemp
   361  08B  0C80               	movlw	128
   362  08C  009C               	subwf	btemp,w
   363  08D  0743               	skipz
   364  08E  0A91               	goto	u245
   365  08F  0C32               	movlw	50
   366  090  009E               	subwf	wtemp1,w
   367  091                     u245:
   368  091  0703               	skipc
   369  092  0A94               	goto	u241
   370  093  0A95               	goto	u240
   371  094                     u241:
   372  094  0A9A               	goto	l650
   373  095                     u240:
   374  095                     l648:
   375  095  0C2C               	movlw	44
   376  096  0033               	movwf	main@duty
   377  097  0C01               	movlw	1
   378  098  0034               	movwf	main@duty+1
   379  099  0A9E               	goto	l33
   380  09A                     l650:
   381  09A  0C32               	movlw	50
   382  09B  0033               	movwf	main@duty
   383  09C  0C00               	movlw	0
   384  09D  0034               	movwf	main@duty+1
   385  09E                     l33:	
   386                           ;main.c: 61:         }
   387                           
   388  09E  0004               	clrwdt	;# 
   389  09F  0A0D               	goto	l612
   390  0A0  0A00               	ljmp	start
   391  0A1                     __end_of_main:
   392  001C                     btemp	set	28	;btemp
   393  001C                     wtemp0	set	28
   394  001E                     wtemp1	set	30
   395  001C                     ttemp0	set	28
   396  001C                     ltemp0	set	28
   397                           
   398                           	psect	idloc
   399                           
   400                           ;Config register IDLOC0 @ 0x100
   401                           ;	unspecified, using   402  0100                     	org	256
   403  0100  0FFF               	dw	4095
   404                           
   405                           ;Config register IDLOC1 @ 0x101
   406                           ;	unspecified, using default values
   407  0101                     	org	257
   408  0101  0FFF               	dw	4095
   409                           
   410                           ;Config register IDLOC2 @ 0x102
   411                           ;	unspecified, using default values
   412  0102                     	org	258
   413  0102  0FFF               	dw	4095
   414                           
   415                           ;Config register IDLOC3 @ 0x103
   416                           ;	unspecified, using default values
   417  0103                     	org	259
   418  0103  0FFF               	dw	4095
   419                           
   420                           	psect	config
   421                           
   422                           ;Config register CONFIG @ 0xFFF
   423                           ;	Internal Oscillator Frequency Select bit
   424                           ;	IOSCFS = 8MHZ, 8 MHz
   425                           ;	Master Clear Pull-up Enable bit
   426                           ;	MCPU = OFF, Pull-up disabled
   427                           ;	Watchdog Timer Enable bit
   428                           ;	WDTE = ON, WDT enabled
   429                           ;	Code protection bit
   430                           ;	CP = OFF, Code protection off
   431                           ;	GP3/MCLR Pin Function Select bit
   432                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
   433  0FFF                     	org	4095
   434  0FFF  0FEF               	dw	4079

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            14      5       5

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     206
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0                E      5       5       3       35.7%
ABS                  0      0       0       4        0.0%
DATA                 0      0       0       5        0.0%
BITBANK0             E      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Nov  7 20:20:23 2022

                     l33 009E                       fsr 0004                      l610 000C  
                    l602 0003                      l620 001F                      l612 000D  
                    l604 0007                      l622 0026                      l630 0034  
                    l614 0011                      l606 0009                      l640 0060  
                    l632 004B                      l624 0028                      l616 0018  
                    l608 000B                      l650 009A                      l642 0071  
                    l634 004F                      l626 002C                      l618 001B  
                    l644 0082                      l628 0032                      l646 0084  
                    l638 0055                      l648 0095                      _GP2 0032  
                    _GP3 0033                      u210 0054                      u130 0011  
                    u211 0053                      u131 0010                      u220 0071  
                    u204 004B                      u140 0018                      u221 0070  
                    u141 0017                      u230 0082                      u150 001F  
                    u231 0081                      u151 001E                      u240 0095  
                    u160 0026                      u241 0094                      u225 006D  
                    u161 0025                      u170 002C                      u235 007E  
                    u171 002B                      u180 0032                      u245 0091  
                    u181 0031                      u190 004A                      u191 0048  
                    u195 0045                     _ADON 0038                     _TMR0 0001  
                   _main 0003                     btemp 001C                     start 0000  
                  ?_main 0010                    _ADRES 0008                    ltemp0 001C  
                  ttemp0 001C                    status 0003                    wtemp0 001C  
                  wtemp1 001E          __initialization 0001             __end_of_main 00A1  
                 ??_main 0010                   _OPTION 0000            main@dutyDelta 0012  
__end_of__initialization 0001               __pmaintext 0003     end_of_initialization 0001  
    start_initialization 0001                ___latbits 0000            __pcstackBANK0 0010  
   main@animationCounter 0011                 _GO_nDONE 0039                 _TRISGPIO 0006  
               main@duty 0013  
