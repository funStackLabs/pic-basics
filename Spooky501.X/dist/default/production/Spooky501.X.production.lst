

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Oct 18 17:33:26 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	10F220
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     5                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x1C,4
    10  0000                     
    11                           ; Version 2.40
    12                           ; Generated 06/12/2021 GMT
    13                           ; 
    14                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC10F220 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0001                     _TMR0	set	1
    56  0006                     _TRISGPIO	set	6
    57  0000                     _OPTION	set	0
    58  0032                     _GP2	set	50
    59  0033                     _GP3	set	51
    60                           
    61                           	psect	cinit
    62  001                     start_initialization:	
    63                           ; #config settings
    64                           
    65  001                     __initialization:
    66  001                     end_of_initialization:	
    67                           ;End of C runtime variable initialization code
    68                           
    69  001                     __end_of__initialization:
    70  001  0064               	clrf	4
    71  002  0A03               	ljmp	_main	;jump to C main() function
    72                           
    73                           	psect	cstackBANK0
    74  010                     __pcstackBANK0:
    75  010                     ?_main:
    76  010                     ??_main:	
    77                           ; 1 bytes @ 0x0
    78                           
    79                           
    80                           ; 1 bytes @ 0x0
    81  010                     	ds	1
    82  011                     main@animationCounter:
    83                           
    84                           ; 1 bytes @ 0x1
    85  011                     	ds	1
    86  012                     main@dutyDelta:
    87                           
    88                           ; 1 bytes @ 0x2
    89  012                     	ds	1
    90  013                     main@duty:
    91                           
    92                           ; 2 bytes @ 0x3
    93  013                     	ds	2
    94                           
    95                           	psect	maintext
    96  003                     __pmaintext:	
    97 ;;
    98 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    99 ;;
   100 ;; *************** function _main *****************
   101 ;; Defined at:
   102 ;;		line 28 in file "main.c"
   103 ;; Parameters:    Size  Location     Type
   104 ;;		None
   105 ;; Auto vars:     Size  Location     Type
   106 ;;  duty            2    3[BANK0 ] int 
   107 ;;  dutyDelta       1    2[BANK0 ] char 
   108 ;;  animationCou    1    1[BANK0 ] unsigned char 
   109 ;; Return value:  Size  Location     Type
   110 ;;                  1   14[None  ] void 
   111 ;; Registers used:
   112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3
   113 ;; Tracked objects:
   114 ;;		On entry : B00/0
   115 ;;		On exit  : 0/0
   116 ;;		Unchanged: 0/0
   117 ;; Data sizes:     COMMON   BANK0
   118 ;;      Params:         0       0
   119 ;;      Locals:         0       4
   120 ;;      Temps:          0       1
   121 ;;      Totals:         0       5
   122 ;;Total ram usage:        5 bytes
   123 ;; This function calls:
   124 ;;		Nothing
   125 ;; This function is called by:
   126 ;;		Startup code after reset
   127 ;; This function uses a non-reentrant model
   128 ;;
   129                           
   130  003                     _main:	
   131                           ;psect for function _main
   132                           
   133  003                     l576:	
   134                           ;incstack = 0
   135                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+3]
   136                           
   137                           
   138                           ;main.c: 32:     OPTION = 0b11010010;
   139  003  0CD2               	movlw	210
   140  004  0002               	option
   141                           
   142                           ;main.c: 33:     TRISGPIO = 0b11111011;
   143  005  0CFB               	movlw	251
   144  006  0006               	tris	6
   145  007                     l578:
   146                           
   147                           ;main.c: 35:     int16_t duty = 0;
   148  007  0073               	clrf	main@duty
   149  008  0074               	clrf	main@duty+1
   150  009                     l580:
   151                           
   152                           ;main.c: 36:     int8_t dutyDelta = 1;
   153  009  0072               	clrf	main@dutyDelta
   154  00A  02B2               	incf	main@dutyDelta,f
   155  00B                     l582:
   156                           
   157                           ;main.c: 37:     uint8_t animationCounter = 0;
   158  00B  0071               	clrf	main@animationCounter
   159  00C                     l584:
   160                           
   161                           ;main.c: 40:         if (GP3 == 0 && duty == 50) {
   162  00C  0666               	btfsc	6,3	;volatile
   163  00D  0A0F               	goto	u91
   164  00E  0A10               	goto	u90
   165  00F                     u91:
   166  00F  0A19               	goto	l590
   167  010                     u90:
   168  010                     l586:
   169  010  0C32               	movlw	50
   170  011  0193               	xorwf	main@duty,w
   171  012  0114               	iorwf	main@duty+1,w
   172  013  0743               	btfss	3,2
   173  014  0A16               	goto	u101
   174  015  0A17               	goto	u100
   175  016                     u101:
   176  016  0A19               	goto	l590
   177  017                     u100:
   178  017                     l588:
   179                           
   180                           ;main.c: 41:             GP2 = 1;
   181  017  0546               	bsf	6,2	;volatile
   182  018  0003               	sleep	;# 
   183  019                     l590:
   184                           
   185                           ;main.c: 45:         GP2 = TMR0 > duty;
   186  019  0201               	movf	1,w	;volatile
   187  01A  003C               	movwf	btemp
   188  01B  007D               	clrf	btemp+1
   189  01C  0214               	movf	main@duty+1,w
   190  01D  003F               	movwf	btemp+3
   191  01E  0213               	movf	main@duty,w
   192  01F  003E               	movwf	btemp+2
   193  020  021F               	movf	wtemp1+1,w
   194  021  0F80               	xorlw	128
   195  022  0030               	movwf	??_main
   196  023  021D               	movf	wtemp0+1,w
   197  024  0F80               	xorlw	128
   198  025  0090               	subwf	??_main,w
   199  026  0743               	skipz
   200  027  0A2A               	goto	u115
   201  028  021C               	movf	wtemp0,w
   202  029  009E               	subwf	wtemp1,w
   203  02A                     u115:
   204  02A  0703               	skipc
   205  02B  0A2D               	goto	u111
   206  02C  0A2F               	goto	u110
   207  02D                     u111:
   208  02D  0546               	bsf	6,2	;volatile
   209  02E  0A30               	goto	u124
   210  02F                     u110:
   211  02F  0446               	bcf	6,2	;volatile
   212  030                     u124:
   213  030                     l592:
   214                           
   215                           ;main.c: 46:         animationCounter += 4;
   216  030  0C04               	movlw	4
   217  031  003F               	movwf	btemp+3
   218  032  021F               	movf	btemp+3,w
   219  033  01F1               	addwf	main@animationCounter,f
   220  034                     l594:
   221                           
   222                           ;main.c: 47:         duty += animationCounter == 0 ? dutyDelta : 0;
   223  034  0211               	movf	main@animationCounter,w
   224  035  0643               	btfsc	3,2
   225  036  0A38               	goto	u131
   226  037  0A39               	goto	u130
   227  038                     u131:
   228  038  0A3A               	goto	l598
   229  039                     u130:
   230  039  0A45               	goto	l600
   231  03A                     l598:
   232  03A  0212               	movf	main@dutyDelta,w
   233  03B  003C               	movwf	btemp
   234  03C  007D               	clrf	btemp+1
   235  03D  06FC               	btfsc	btemp,7
   236  03E  00FD               	decf	btemp+1,f
   237  03F  021C               	movf	wtemp0,w
   238  040  01F3               	addwf	main@duty,f
   239  041  0603               	skipnc
   240  042  02B4               	incf	main@duty+1,f
   241  043  021D               	movf	wtemp0+1,w
   242  044  01F4               	addwf	main@duty+1,f
   243  045                     l600:
   244                           
   245                           ;main.c: 48:         if (duty < 50 || duty > 300) {
   246  045  0214               	movf	main@duty+1,w
   247  046  003F               	movwf	btemp+3
   248  047  0213               	movf	main@duty,w
   249  048  003E               	movwf	btemp+2
   250  049  021F               	movf	wtemp1+1,w
   251  04A  0F80               	xorlw	128
   252  04B  003C               	movwf	btemp
   253  04C  0C80               	movlw	128
   254  04D  009C               	subwf	btemp,w
   255  04E  0743               	skipz
   256  04F  0A52               	goto	u145
   257  050  0C32               	movlw	50
   258  051  009E               	subwf	wtemp1,w
   259  052                     u145:
   260  052  0703               	skipc
   261  053  0A55               	goto	u141
   262  054  0A56               	goto	u140
   263  055                     u141:
   264  055  0A67               	goto	l604
   265  056                     u140:
   266  056                     l602:
   267  056  0214               	movf	main@duty+1,w
   268  057  003F               	movwf	btemp+3
   269  058  0213               	movf	main@duty,w
   270  059  003E               	movwf	btemp+2
   271  05A  021F               	movf	wtemp1+1,w
   272  05B  0F80               	xorlw	128
   273  05C  003C               	movwf	btemp
   274  05D  0C81               	movlw	129
   275  05E  009C               	subwf	btemp,w
   276  05F  0743               	skipz
   277  060  0A63               	goto	u155
   278  061  0C2D               	movlw	45
   279  062  009E               	subwf	wtemp1,w
   280  063                     u155:
   281  063  0703               	skipc
   282  064  0A66               	goto	u151
   283  065  0A67               	goto	u150
   284  066                     u151:
   285  066  0A83               	goto	l21
   286  067                     u150:
   287  067                     l604:
   288                           
   289                           ;main.c: 49:             dutyDelta = -dutyDelta;
   290  067  0272               	comf	main@dutyDelta,f
   291  068  02B2               	incf	main@dutyDelta,f
   292  069                     l606:
   293                           
   294                           ;main.c: 50:             duty = duty < 50 ? 50 : 300;
   295  069  0214               	movf	main@duty+1,w
   296  06A  003F               	movwf	btemp+3
   297  06B  0213               	movf	main@duty,w
   298  06C  003E               	movwf	btemp+2
   299  06D  021F               	movf	wtemp1+1,w
   300  06E  0F80               	xorlw	128
   301  06F  003C               	movwf	btemp
   302  070  0C80               	movlw	128
   303  071  009C               	subwf	btemp,w
   304  072  0743               	skipz
   305  073  0A76               	goto	u165
   306  074  0C32               	movlw	50
   307  075  009E               	subwf	wtemp1,w
   308  076                     u165:
   309  076  0703               	skipc
   310  077  0A79               	goto	u161
   311  078  0A7A               	goto	u160
   312  079                     u161:
   313  079  0A7F               	goto	l610
   314  07A                     u160:
   315  07A                     l608:
   316  07A  0C2C               	movlw	44
   317  07B  0033               	movwf	main@duty
   318  07C  0C01               	movlw	1
   319  07D  0034               	movwf	main@duty+1
   320  07E  0A83               	goto	l21
   321  07F                     l610:
   322  07F  0C32               	movlw	50
   323  080  0033               	movwf	main@duty
   324  081  0C00               	movlw	0
   325  082  0034               	movwf	main@duty+1
   326  083                     l21:	
   327                           ;main.c: 51:         }
   328                           
   329  083  0004               	clrwdt	;# 
   330  084  0A0C               	goto	l584
   331  085  0A00               	ljmp	start
   332  086                     __end_of_main:
   333  001C                     btemp	set	28	;btemp
   334  001C                     wtemp0	set	28
   335  001E                     wtemp1	set	30
   336  001C                     ttemp0	set	28
   337  001C                     ltemp0	set	28
   338                           
   339                           	psect	idloc
   340                           
   341                           ;Config register IDLOC0 @ 0x100
   342                           ;	unspecified, using   343  0100                     	org	256
   344  0100  0FFF               	dw	4095
   345                           
   346                           ;Config register IDLOC1 @ 0x101
   347                           ;	unspecified, using default values
   348  0101                     	org	257
   349  0101  0FFF               	dw	4095
   350                           
   351                           ;Config register IDLOC2 @ 0x102
   352                           ;	unspecified, using default values
   353  0102                     	org	258
   354  0102  0FFF               	dw	4095
   355                           
   356                           ;Config register IDLOC3 @ 0x103
   357                           ;	unspecified, using default values
   358  0103                     	org	259
   359  0103  0FFF               	dw	4095
   360                           
   361                           	psect	config
   362                           
   363                           ;Config register CONFIG @ 0xFFF
   364                           ;	Internal Oscillator Frequency Select bit
   365                           ;	IOSCFS = 8MHZ, 8 MHz
   366                           ;	Master Clear Pull-up Enable bit
   367                           ;	MCPU = OFF, Pull-up disabled
   368                           ;	Watchdog Timer Enable bit
   369                           ;	WDTE = ON, WDT enabled
   370                           ;	Code protection bit
   371                           ;	CP = OFF, Code protection off
   372                           ;	GP3/MCLR Pin Function Select bit
   373                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
   374  0FFF                     	org	4095
   375  0FFF  0FEF               	dw	4079

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            14      5       5

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     184
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0                E      5       5       3       35.7%
ABS                  0      0       0       4        0.0%
DATA                 0      0       0       5        0.0%
BITBANK0             E      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Oct 18 17:33:26 2022

                     l21 0083                       u90 0010                       u91 000F  
                     fsr 0004                      l600 0045                      l610 007F  
                    l602 0056                      l604 0067                      l606 0069  
                    l608 007A                      l580 0009                      l590 0019  
                    l582 000B                      l592 0030                      l584 000C  
                    l576 0003                      l594 0034                      l586 0010  
                    l578 0007                      l588 0017                      l598 003A  
                    _GP2 0032                      _GP3 0033                      u100 0017  
                    u101 0016                      u110 002F                      u111 002D  
                    u130 0039                      u131 0038                      u115 002A  
                    u140 0056                      u124 0030                      u141 0055  
                    u150 0067                      u151 0066                      u160 007A  
                    u161 0079                      u145 0052                      u155 0063  
                    u165 0076                     _TMR0 0001                     _main 0003  
                   btemp 001C                     start 0000                    ?_main 0010  
                  ltemp0 001C                    ttemp0 001C                    status 0003  
                  wtemp0 001C                    wtemp1 001E          __initialization 0001  
           __end_of_main 0086                   ??_main 0010                   _OPTION 0000  
          main@dutyDelta 0012  __end_of__initialization 0001               __pmaintext 0003  
   end_of_initialization 0001      start_initialization 0001                ___latbits 0000  
          __pcstackBANK0 0010     main@animationCounter 0011                 _TRISGPIO 0006  
               main@duty 0013  
