

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Oct  2 14:00:27 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48  0000                     
    49                           ; Version 2.35
    50                           ; Generated 05/05/2021 GMT
    51                           ; 
    52                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F45K20 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	mediumconst
    86  007E04                     __pmediumconst:
    87                           	callstack 0
    88  007E04  00                 	db	0
    89  007E05                     _Font:
    90                           	callstack 0
    91  007E05  00                 	db	0
    92  007E06  00                 	db	0
    93  007E07  00                 	db	0
    94  007E08  00                 	db	0
    95  007E09  00                 	db	0
    96  007E0A  00                 	db	0
    97  007E0B  00                 	db	0
    98  007E0C  5F                 	db	95
    99  007E0D  00                 	db	0
   100  007E0E  00                 	db	0
   101  007E0F  00                 	db	0
   102  007E10  07                 	db	7
   103  007E11  00                 	db	0
   104  007E12  07                 	db	7
   105  007E13  00                 	db	0
   106  007E14  14                 	db	20
   107  007E15  7F                 	db	127
   108  007E16  14                 	db	20
   109  007E17  7F                 	db	127
   110  007E18  14                 	db	20
   111  007E19  24                 	db	36
   112  007E1A  2A                 	db	42
   113  007E1B  7F                 	db	127
   114  007E1C  2A                 	db	42
   115  007E1D  12                 	db	18
   116  007E1E  23                 	db	35
   117  007E1F  13                 	db	19
   118  007E20  08                 	db	8
   119  007E21  64                 	db	100
   120  007E22  62                 	db	98
   121  007E23  36                 	db	54
   122  007E24  49                 	db	73
   123  007E25  56                 	db	86
   124  007E26  20                 	db	32
   125  007E27  50                 	db	80
   126  007E28  00                 	db	0
   127  007E29  08                 	db	8
   128  007E2A  07                 	db	7
   129  007E2B  03                 	db	3
   130  007E2C  00                 	db	0
   131  007E2D  00                 	db	0
   132  007E2E  1C                 	db	28
   133  007E2F  22                 	db	34
   134  007E30  41                 	db	65
   135  007E31  00                 	db	0
   136  007E32  00                 	db	0
   137  007E33  41                 	db	65
   138  007E34  22                 	db	34
   139  007E35  1C                 	db	28
   140  007E36  00                 	db	0
   141  007E37  2A                 	db	42
   142  007E38  1C                 	db	28
   143  007E39  7F                 	db	127
   144  007E3A  1C                 	db	28
   145  007E3B  2A                 	db	42
   146  007E3C  08                 	db	8
   147  007E3D  08                 	db	8
   148  007E3E  3E                 	db	62
   149  007E3F  08                 	db	8
   150  007E40  08                 	db	8
   151  007E41  00                 	db	0
   152  007E42  80                 	db	128
   153  007E43  70                 	db	112
   154  007E44  30                 	db	48
   155  007E45  00                 	db	0
   156  007E46  08                 	db	8
   157  007E47  08                 	db	8
   158  007E48  08                 	db	8
   159  007E49  08                 	db	8
   160  007E4A  08                 	db	8
   161  007E4B  00                 	db	0
   162  007E4C  00                 	db	0
   163  007E4D  60                 	db	96
   164  007E4E  60                 	db	96
   165  007E4F  00                 	db	0
   166  007E50  20                 	db	32
   167  007E51  10                 	db	16
   168  007E52  08                 	db	8
   169  007E53  04                 	db	4
   170  007E54  02                 	db	2
   171  007E55  3E                 	db	62
   172  007E56  51                 	db	81
   173  007E57  49                 	db	73
   174  007E58  45                 	db	69
   175  007E59  3E                 	db	62
   176  007E5A  00                 	db	0
   177  007E5B  42                 	db	66
   178  007E5C  7F                 	db	127
   179  007E5D  40                 	db	64
   180  007E5E  00                 	db	0
   181  007E5F  72                 	db	114
   182  007E60  49                 	db	73
   183  007E61  49                 	db	73
   184  007E62  49                 	db	73
   185  007E63  46                 	db	70
   186  007E64  21                 	db	33
   187  007E65  41                 	db	65
   188  007E66  49                 	db	73
   189  007E67  4D                 	db	77
   190  007E68  33                 	db	51
   191  007E69  18                 	db	24
   192  007E6A  14                 	db	20
   193  007E6B  12                 	db	18
   194  007E6C  7F                 	db	127
   195  007E6D  10                 	db	16
   196  007E6E  27                 	db	39
   197  007E6F  45                 	db	69
   198  007E70  45                 	db	69
   199  007E71  45                 	db	69
   200  007E72  39                 	db	57
   201  007E73  3C                 	db	60
   202  007E74  4A                 	db	74
   203  007E75  49                 	db	73
   204  007E76  49                 	db	73
   205  007E77  31                 	db	49
   206  007E78  41                 	db	65
   207  007E79  21                 	db	33
   208  007E7A  11                 	db	17
   209  007E7B  09                 	db	9
   210  007E7C  07                 	db	7
   211  007E7D  36                 	db	54
   212  007E7E  49                 	db	73
   213  007E7F  49                 	db	73
   214  007E80  49                 	db	73
   215  007E81  36                 	db	54
   216  007E82  46                 	db	70
   217  007E83  49                 	db	73
   218  007E84  49                 	db	73
   219  007E85  29                 	db	41
   220  007E86  1E                 	db	30
   221  007E87  00                 	db	0
   222  007E88  00                 	db	0
   223  007E89  14                 	db	20
   224  007E8A  00                 	db	0
   225  007E8B  00                 	db	0
   226  007E8C  00                 	db	0
   227  007E8D  40                 	db	64
   228  007E8E  34                 	db	52
   229  007E8F  00                 	db	0
   230  007E90  00                 	db	0
   231  007E91  00                 	db	0
   232  007E92  08                 	db	8
   233  007E93  14                 	db	20
   234  007E94  22                 	db	34
   235  007E95  41                 	db	65
   236  007E96  14                 	db	20
   237  007E97  14                 	db	20
   238  007E98  14                 	db	20
   239  007E99  14                 	db	20
   240  007E9A  14                 	db	20
   241  007E9B  00                 	db	0
   242  007E9C  41                 	db	65
   243  007E9D  22                 	db	34
   244  007E9E  14                 	db	20
   245  007E9F  08                 	db	8
   246  007EA0  02                 	db	2
   247  007EA1  01                 	db	1
   248  007EA2  59                 	db	89
   249  007EA3  09                 	db	9
   250  007EA4  06                 	db	6
   251  007EA5  3E                 	db	62
   252  007EA6  41                 	db	65
   253  007EA7  5D                 	db	93
   254  007EA8  59                 	db	89
   255  007EA9  4E                 	db	78
   256  007EAA  7C                 	db	124
   257  007EAB  12                 	db	18
   258  007EAC  11                 	db	17
   259  007EAD  12                 	db	18
   260  007EAE  7C                 	db	124
   261  007EAF  7F                 	db	127
   262  007EB0  49                 	db	73
   263  007EB1  49                 	db	73
   264  007EB2  49                 	db	73
   265  007EB3  36                 	db	54
   266  007EB4  3E                 	db	62
   267  007EB5  41                 	db	65
   268  007EB6  41                 	db	65
   269  007EB7  41                 	db	65
   270  007EB8  22                 	db	34
   271  007EB9  7F                 	db	127
   272  007EBA  41                 	db	65
   273  007EBB  41                 	db	65
   274  007EBC  41                 	db	65
   275  007EBD  3E                 	db	62
   276  007EBE  7F                 	db	127
   277  007EBF  49                 	db	73
   278  007EC0  49                 	db	73
   279  007EC1  49                 	db	73
   280  007EC2  41                 	db	65
   281  007EC3  7F                 	db	127
   282  007EC4  09                 	db	9
   283  007EC5  09                 	db	9
   284  007EC6  09                 	db	9
   285  007EC7  01                 	db	1
   286  007EC8  3E                 	db	62
   287  007EC9  41                 	db	65
   288  007ECA  41                 	db	65
   289  007ECB  51                 	db	81
   290  007ECC  73                 	db	115
   291  007ECD  7F                 	db	127
   292  007ECE  08                 	db	8
   293  007ECF  08                 	db	8
   294  007ED0  08                 	db	8
   295  007ED1  7F                 	db	127
   296  007ED2  00                 	db	0
   297  007ED3  41                 	db	65
   298  007ED4  7F                 	db	127
   299  007ED5  41                 	db	65
   300  007ED6  00                 	db	0
   301  007ED7  20                 	db	32
   302  007ED8  40                 	db	64
   303  007ED9  41                 	db	65
   304  007EDA  3F                 	db	63
   305  007EDB  01                 	db	1
   306  007EDC  7F                 	db	127
   307  007EDD  08                 	db	8
   308  007EDE  14                 	db	20
   309  007EDF  22                 	db	34
   310  007EE0  41                 	db	65
   311  007EE1  7F                 	db	127
   312  007EE2  40                 	db	64
   313  007EE3  40                 	db	64
   314  007EE4  40                 	db	64
   315  007EE5  40                 	db	64
   316  007EE6  7F                 	db	127
   317  007EE7  02                 	db	2
   318  007EE8  1C                 	db	28
   319  007EE9  02                 	db	2
   320  007EEA  7F                 	db	127
   321  007EEB  7F                 	db	127
   322  007EEC  04                 	db	4
   323  007EED  08                 	db	8
   324  007EEE  10                 	db	16
   325  007EEF  7F                 	db	127
   326  007EF0  3E                 	db	62
   327  007EF1  41                 	db	65
   328  007EF2  41                 	db	65
   329  007EF3  41                 	db	65
   330  007EF4  3E                 	db	62
   331  007EF5  7F                 	db	127
   332  007EF6  09                 	db	9
   333  007EF7  09                 	db	9
   334  007EF8  09                 	db	9
   335  007EF9  06                 	db	6
   336  007EFA  3E                 	db	62
   337  007EFB  41                 	db	65
   338  007EFC  51                 	db	81
   339  007EFD  21                 	db	33
   340  007EFE  5E                 	db	94
   341  007EFF  7F                 	db	127
   342  007F00  09                 	db	9
   343  007F01  19                 	db	25
   344  007F02  29                 	db	41
   345  007F03  46                 	db	70
   346  007F04                     __end_of_Font:
   347                           	callstack 0
   348  007F04                     _Font2:
   349                           	callstack 0
   350  007F04  26                 	db	38
   351  007F05  49                 	db	73
   352  007F06  49                 	db	73
   353  007F07  49                 	db	73
   354  007F08  32                 	db	50
   355  007F09  03                 	db	3
   356  007F0A  01                 	db	1
   357  007F0B  7F                 	db	127
   358  007F0C  01                 	db	1
   359  007F0D  03                 	db	3
   360  007F0E  3F                 	db	63
   361  007F0F  40                 	db	64
   362  007F10  40                 	db	64
   363  007F11  40                 	db	64
   364  007F12  3F                 	db	63
   365  007F13  1F                 	db	31
   366  007F14  20                 	db	32
   367  007F15  40                 	db	64
   368  007F16  20                 	db	32
   369  007F17  1F                 	db	31
   370  007F18  3F                 	db	63
   371  007F19  40                 	db	64
   372  007F1A  38                 	db	56
   373  007F1B  40                 	db	64
   374  007F1C  3F                 	db	63
   375  007F1D  63                 	db	99
   376  007F1E  14                 	db	20
   377  007F1F  08                 	db	8
   378  007F20  14                 	db	20
   379  007F21  63                 	db	99
   380  007F22  03                 	db	3
   381  007F23  04                 	db	4
   382  007F24  78                 	db	120
   383  007F25  04                 	db	4
   384  007F26  03                 	db	3
   385  007F27  61                 	db	97
   386  007F28  59                 	db	89
   387  007F29  49                 	db	73
   388  007F2A  4D                 	db	77
   389  007F2B  43                 	db	67
   390  007F2C  00                 	db	0
   391  007F2D  7F                 	db	127
   392  007F2E  41                 	db	65
   393  007F2F  41                 	db	65
   394  007F30  41                 	db	65
   395  007F31  02                 	db	2
   396  007F32  04                 	db	4
   397  007F33  08                 	db	8
   398  007F34  10                 	db	16
   399  007F35  20                 	db	32
   400  007F36  00                 	db	0
   401  007F37  41                 	db	65
   402  007F38  41                 	db	65
   403  007F39  41                 	db	65
   404  007F3A  7F                 	db	127
   405  007F3B  04                 	db	4
   406  007F3C  02                 	db	2
   407  007F3D  01                 	db	1
   408  007F3E  02                 	db	2
   409  007F3F  04                 	db	4
   410  007F40  40                 	db	64
   411  007F41  40                 	db	64
   412  007F42  40                 	db	64
   413  007F43  40                 	db	64
   414  007F44  40                 	db	64
   415  007F45  00                 	db	0
   416  007F46  03                 	db	3
   417  007F47  07                 	db	7
   418  007F48  08                 	db	8
   419  007F49  00                 	db	0
   420  007F4A  20                 	db	32
   421  007F4B  54                 	db	84
   422  007F4C  54                 	db	84
   423  007F4D  78                 	db	120
   424  007F4E  40                 	db	64
   425  007F4F  7F                 	db	127
   426  007F50  28                 	db	40
   427  007F51  44                 	db	68
   428  007F52  44                 	db	68
   429  007F53  38                 	db	56
   430  007F54  38                 	db	56
   431  007F55  44                 	db	68
   432  007F56  44                 	db	68
   433  007F57  44                 	db	68
   434  007F58  28                 	db	40
   435  007F59  38                 	db	56
   436  007F5A  44                 	db	68
   437  007F5B  44                 	db	68
   438  007F5C  28                 	db	40
   439  007F5D  7F                 	db	127
   440  007F5E  38                 	db	56
   441  007F5F  54                 	db	84
   442  007F60  54                 	db	84
   443  007F61  54                 	db	84
   444  007F62  18                 	db	24
   445  007F63  00                 	db	0
   446  007F64  08                 	db	8
   447  007F65  7E                 	db	126
   448  007F66  09                 	db	9
   449  007F67  02                 	db	2
   450  007F68  18                 	db	24
   451  007F69  A4                 	db	164
   452  007F6A  A4                 	db	164
   453  007F6B  9C                 	db	156
   454  007F6C  78                 	db	120
   455  007F6D  7F                 	db	127
   456  007F6E  08                 	db	8
   457  007F6F  04                 	db	4
   458  007F70  04                 	db	4
   459  007F71  78                 	db	120
   460  007F72  00                 	db	0
   461  007F73  44                 	db	68
   462  007F74  7D                 	db	125
   463  007F75  40                 	db	64
   464  007F76  00                 	db	0
   465  007F77  20                 	db	32
   466  007F78  40                 	db	64
   467  007F79  40                 	db	64
   468  007F7A  3D                 	db	61
   469  007F7B  00                 	db	0
   470  007F7C  7F                 	db	127
   471  007F7D  10                 	db	16
   472  007F7E  28                 	db	40
   473  007F7F  44                 	db	68
   474  007F80  00                 	db	0
   475  007F81  00                 	db	0
   476  007F82  41                 	db	65
   477  007F83  7F                 	db	127
   478  007F84  40                 	db	64
   479  007F85  00                 	db	0
   480  007F86  7C                 	db	124
   481  007F87  04                 	db	4
   482  007F88  78                 	db	120
   483  007F89  04                 	db	4
   484  007F8A  78                 	db	120
   485  007F8B  7C                 	db	124
   486  007F8C  08                 	db	8
   487  007F8D  04                 	db	4
   488  007F8E  04                 	db	4
   489  007F8F  78                 	db	120
   490  007F90  38                 	db	56
   491  007F91  44                 	db	68
   492  007F92  44                 	db	68
   493  007F93  44                 	db	68
   494  007F94  38                 	db	56
   495  007F95  FC                 	db	252
   496  007F96  18                 	db	24
   497  007F97  24                 	db	36
   498  007F98  24                 	db	36
   499  007F99  18                 	db	24
   500  007F9A  18                 	db	24
   501  007F9B  24                 	db	36
   502  007F9C  24                 	db	36
   503  007F9D  18                 	db	24
   504  007F9E  FC                 	db	252
   505  007F9F  7C                 	db	124
   506  007FA0  08                 	db	8
   507  007FA1  04                 	db	4
   508  007FA2  04                 	db	4
   509  007FA3  08                 	db	8
   510  007FA4  48                 	db	72
   511  007FA5  54                 	db	84
   512  007FA6  54                 	db	84
   513  007FA7  54                 	db	84
   514  007FA8  24                 	db	36
   515  007FA9  04                 	db	4
   516  007FAA  04                 	db	4
   517  007FAB  3F                 	db	63
   518  007FAC  44                 	db	68
   519  007FAD  24                 	db	36
   520  007FAE  3C                 	db	60
   521  007FAF  40                 	db	64
   522  007FB0  40                 	db	64
   523  007FB1  20                 	db	32
   524  007FB2  7C                 	db	124
   525  007FB3  1C                 	db	28
   526  007FB4  20                 	db	32
   527  007FB5  40                 	db	64
   528  007FB6  20                 	db	32
   529  007FB7  1C                 	db	28
   530  007FB8  3C                 	db	60
   531  007FB9  40                 	db	64
   532  007FBA  30                 	db	48
   533  007FBB  40                 	db	64
   534  007FBC  3C                 	db	60
   535  007FBD  44                 	db	68
   536  007FBE  28                 	db	40
   537  007FBF  10                 	db	16
   538  007FC0  28                 	db	40
   539  007FC1  44                 	db	68
   540  007FC2  4C                 	db	76
   541  007FC3  90                 	db	144
   542  007FC4  90                 	db	144
   543  007FC5  90                 	db	144
   544  007FC6  7C                 	db	124
   545  007FC7  44                 	db	68
   546  007FC8  64                 	db	100
   547  007FC9  54                 	db	84
   548  007FCA  4C                 	db	76
   549  007FCB  44                 	db	68
   550  007FCC  00                 	db	0
   551  007FCD  08                 	db	8
   552  007FCE  36                 	db	54
   553  007FCF  41                 	db	65
   554  007FD0  00                 	db	0
   555  007FD1  00                 	db	0
   556  007FD2  00                 	db	0
   557  007FD3  77                 	db	119
   558  007FD4  00                 	db	0
   559  007FD5  00                 	db	0
   560  007FD6  00                 	db	0
   561  007FD7  41                 	db	65
   562  007FD8  36                 	db	54
   563  007FD9  08                 	db	8
   564  007FDA  00                 	db	0
   565  007FDB  02                 	db	2
   566  007FDC  01                 	db	1
   567  007FDD  02                 	db	2
   568  007FDE  04                 	db	4
   569  007FDF  02                 	db	2
   570  007FE0                     __end_of_Font2:
   571                           	callstack 0
   572  007FE0                     _spi_configuration:
   573                           	callstack 0
   574  007FE0  00                 	db	0
   575  007FE1  40                 	db	64
   576  007FE2  01                 	db	1
   577  007FE3  00                 	db	0
   578  007FE4                     __end_of_spi_configuration:
   579                           	callstack 0
   580  007FE4                     _FRM_CNT:
   581                           	callstack 0
   582  007FE4  01                 	db	1
   583  007FE5  2C                 	db	44
   584  007FE6  2D                 	db	45
   585  007FE7                     __end_of_FRM_CNT:
   586                           	callstack 0
   587  007FE7  5000               	dw	20480
   588  007FE9                     __end_of_TFTST_PIXEL_COUNT:
   589                           	callstack 0
   590  007FE9  80                 	db	128
   591  007FEA                     __end_of_TFTST_HEIGHT:
   592                           	callstack 0
   593  007FEA  A0                 	db	160
   594  007FEB                     __end_of_TFTST_WIDTH:
   595                           	callstack 0
   596  0000                     _T2CON	set	4042
   597  0000                     _PR2	set	4043
   598  0000                     _SSPBUF	set	4041
   599  0000                     _SSPADD	set	4040
   600  0000                     _TRISD	set	3989
   601  0000                     _TRISC	set	3988
   602  0000                     _TRISB	set	3987
   603  0000                     _LATC	set	3979
   604  0000                     _LATB	set	3978
   605  0000                     _LATDbits	set	3980
   606  0000                     _T2CONbits	set	4042
   607  0000                     _SSPCON1bits	set	4038
   608  0000                     _TRISCbits	set	3988
   609  0000                     _WPUB	set	3964
   610  0000                     _ANSEL	set	3966
   611  0000                     _LATA	set	3977
   612  0000                     _LATD	set	3980
   613  0000                     _LATE	set	3981
   614  0000                     _OSCTUNE	set	3995
   615  0000                     _OSCCON	set	4051
   616  0000                     _INTCON2bits	set	4081
   617  0000                     _PIR1bits	set	3998
   618  0000                     _SSPCON2	set	4037
   619  0000                     _SSPCON1	set	4038
   620  0000                     _SSPSTAT	set	4039
   621  0000                     _TRISA	set	3986
   622  0000                     _TRISE	set	3990
   623  0000                     _ANSELH	set	3967
   624  0000                     _INTCONbits	set	4082
   625  0000                     _TMR2	set	4044
   626  007FEB                     STR_1:
   627  007FEB  66                 	db	102	;'f'
   628  007FEC  75                 	db	117	;'u'
   629  007FED  6E                 	db	110	;'n'
   630  007FEE  53                 	db	83	;'S'
   631  007FEF  74                 	db	116	;'t'
   632  007FF0  61                 	db	97	;'a'
   633  007FF1  63                 	db	99	;'c'
   634  007FF2  6B                 	db	107	;'k'
   635  007FF3  4C                 	db	76	;'L'
   636  007FF4  61                 	db	97	;'a'
   637  007FF5  62                 	db	98	;'b'
   638  007FF6  73                 	db	115	;'s'
   639  007FF7  00                 	db	0
   640  007FF8                     STR_2:
   641  007FF8  49                 	db	73	;'I'
   642  007FF9  44                 	db	68	;'D'
   643  007FFA  3A                 	db	58	;':'
   644  007FFB  25                 	db	37
   645  007FFC  64                 	db	100	;'d'
   646  007FFD  00                 	db	0
   647  007FFE  00                 	db	0	; dummy byte at the end
   648  0000                     
   649                           ; #config settings
   650                           
   651                           	psect	cinit
   652  006A44                     __pcinit:
   653                           	callstack 0
   654  006A44                     start_initialization:
   655                           	callstack 0
   656  006A44                     __initialization:
   657                           	callstack 0
   658                           
   659                           ; Clear objects allocated to BANK0 (42 bytes)
   660  006A44  EE00  F060         	lfsr	0,__pbssBANK0
   661  006A48  0E2A               	movlw	42
   662  006A4A                     clear_0:
   663  006A4A  6AEE               	clrf	postinc0,c
   664  006A4C  06E8               	decf	wreg,f,c
   665  006A4E  E1FD               	bnz	clear_0
   666                           
   667                           ; Clear objects allocated to COMRAM (2 bytes)
   668  006A50  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   669  006A52  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   670  006A54                     end_of_initialization:
   671                           	callstack 0
   672  006A54                     __end_of__initialization:
   673                           	callstack 0
   674  006A54  0E00               	movlw	low (__Lmediumconst shr (0+16))
   675  006A56  6EF8               	movwf	tblptru,c
   676  006A58  0100               	movlb	0
   677  006A5A  EFD9  F034         	goto	_main	;jump to C main() function
   678                           
   679                           	psect	bssCOMRAM
   680  00005E                     __pbssCOMRAM:
   681                           	callstack 0
   682  00005E                     _flags:
   683                           	callstack 0
   684  00005E                     	ds	2
   685                           
   686                           	psect	bssBANK0
   687  000060                     __pbssBANK0:
   688                           	callstack 0
   689  000060                     _nout:
   690                           	callstack 0
   691  000060                     	ds	2
   692  000062                     _width:
   693                           	callstack 0
   694  000062                     	ds	2
   695  000064                     _prec:
   696                           	callstack 0
   697  000064                     	ds	2
   698  000066                     _dbuf:
   699                           	callstack 0
   700  000066                     	ds	32
   701  000086                     	ds	4
   702                           
   703                           	psect	cstackBANK0
   704  00008A                     __pcstackBANK0:
   705                           	callstack 0
   706  00008A                     sprintf@ap:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x0
   710  00008A                     	ds	2
   711  00008C                     sprintf@f:
   712                           	callstack 0
   713                           
   714                           ; 11 bytes @ 0x2
   715  00008C                     	ds	11
   716  000097                     demoAnimated@idString:
   717                           	callstack 0
   718                           
   719                           ; 8 bytes @ 0xD
   720  000097                     	ds	8
   721  00009F                     demoAnimated@id:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x15
   725  00009F                     	ds	1
   726  0000A0                     demoAnimated@deltaY:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x16
   730  0000A0                     	ds	1
   731  0000A1                     demoAnimated@bgColor:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x17
   735  0000A1                     	ds	2
   736  0000A3                     demoAnimated@y:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x19
   740  0000A3                     	ds	1
   741                           
   742                           	psect	cstackCOMRAM
   743  000001                     __pcstackCOMRAM:
   744                           	callstack 0
   745  000001                     ??_SPI_Open:
   746  000001                     ?_strlen:
   747                           	callstack 0
   748  000001                     ?___aodiv:
   749                           	callstack 0
   750  000001                     ?___aomod:
   751                           	callstack 0
   752  000001                     SPI_ExchangeByte@data:
   753                           	callstack 0
   754  000001                     fputc@c:
   755                           	callstack 0
   756  000001                     strlen@s:
   757                           	callstack 0
   758  000001                     ___aodiv@dividend:
   759                           	callstack 0
   760  000001                     ___aomod@dividend:
   761                           	callstack 0
   762                           
   763                           ; 8 bytes @ 0x0
   764  000001                     	ds	1
   765  000002                     SPI_Open@spiUniqueConfiguration:
   766                           	callstack 0
   767  000002                     tftstWriteCommand@cmd_:
   768                           	callstack 0
   769  000002                     tftstWriteData@data_:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0x1
   773  000002                     	ds	1
   774  000003                     ??_tftstInit:
   775  000003                     tftstReadId@id1:
   776                           	callstack 0
   777  000003                     tftstSetWindow@xEnd:
   778                           	callstack 0
   779  000003                     tftstWriteColor@color:
   780                           	callstack 0
   781  000003                     fputc@fp:
   782                           	callstack 0
   783  000003                     strlen@a:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x2
   787  000003                     	ds	1
   788  000004                     tftstSetWindow@yStart:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x3
   792  000004                     	ds	1
   793  000005                     ??_fputc:
   794  000005                     tftstSetWindow@yEnd:
   795                           	callstack 0
   796                           
   797                           ; 1 bytes @ 0x4
   798  000005                     	ds	1
   799  000006                     tftstSetWindow@xStart:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0x5
   803  000006                     	ds	1
   804  000007                     tftstDrawPixel@y:
   805                           	callstack 0
   806  000007                     tftstDrawHorizontalLine@y:
   807                           	callstack 0
   808  000007                     tftstFillRect@y:
   809                           	callstack 0
   810  000007                     tftstFillScreen@color:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x6
   814  000007                     	ds	1
   815  000008                     tftstDrawHorizontalLine@width:
   816                           	callstack 0
   817  000008                     tftstFillRect@w:
   818                           	callstack 0
   819  000008                     tftstDrawPixel@color:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x7
   823  000008                     	ds	1
   824  000009                     tftstFillRect@h:
   825                           	callstack 0
   826  000009                     tftstFillScreen@counter:
   827                           	callstack 0
   828  000009                     tftstDrawHorizontalLine@color:
   829                           	callstack 0
   830  000009                     ___aodiv@divisor:
   831                           	callstack 0
   832  000009                     ___aomod@divisor:
   833                           	callstack 0
   834                           
   835                           ; 8 bytes @ 0x8
   836  000009                     	ds	1
   837  00000A                     tftstDrawPixel@x:
   838                           	callstack 0
   839  00000A                     tftstFillRect@color:
   840                           	callstack 0
   841  00000A                     fputs@s:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x9
   845  00000A                     	ds	1
   846  00000B                     tftstDrawHorizontalLine@w:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0xA
   850  00000B                     	ds	1
   851  00000C                     ??_tftstFillRect:
   852  00000C                     tftstDrawHorizontalLine@x:
   853                           	callstack 0
   854  00000C                     fputs@fp:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0xB
   858  00000C                     	ds	2
   859  00000E                     tftstFillRect@i:
   860                           	callstack 0
   861  00000E                     fputs@c:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0xD
   865  00000E                     	ds	1
   866  00000F                     tftstFillRect@j:
   867                           	callstack 0
   868  00000F                     fputs@i:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0xE
   872  00000F                     	ds	1
   873  000010                     tftstFillRect@x:
   874                           	callstack 0
   875                           
   876                           ; 1 bytes @ 0xF
   877  000010                     	ds	1
   878  000011                     ?_pad:
   879                           	callstack 0
   880  000011                     tftstDrawChar@y:
   881                           	callstack 0
   882  000011                     ___aodiv@counter:
   883                           	callstack 0
   884  000011                     ___aomod@counter:
   885                           	callstack 0
   886  000011                     pad@fp:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x10
   890  000011                     	ds	1
   891  000012                     tftstDrawChar@c:
   892                           	callstack 0
   893  000012                     ___aodiv@sign:
   894                           	callstack 0
   895  000012                     ___aomod@sign:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x11
   899  000012                     	ds	1
   900  000013                     ?_abs:
   901                           	callstack 0
   902  000013                     tftstDrawChar@color:
   903                           	callstack 0
   904  000013                     pad@buf:
   905                           	callstack 0
   906  000013                     abs@a:
   907                           	callstack 0
   908  000013                     ___aodiv@quotient:
   909                           	callstack 0
   910                           
   911                           ; 8 bytes @ 0x12
   912  000013                     	ds	2
   913  000015                     ??_abs:
   914  000015                     tftstDrawChar@bg:
   915                           	callstack 0
   916  000015                     pad@p:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x14
   920  000015                     	ds	2
   921  000017                     ??_pad:
   922  000017                     tftstDrawChar@size:
   923                           	callstack 0
   924                           
   925                           ; 1 bytes @ 0x16
   926  000017                     	ds	1
   927  000018                     ??_tftstDrawChar:
   928  000018                     pad@i:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x17
   932  000018                     	ds	2
   933  00001A                     pad@w:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x19
   937  00001A                     	ds	2
   938  00001C                     ?_dtoa:
   939                           	callstack 0
   940  00001C                     dtoa@fp:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x1B
   944  00001C                     	ds	2
   945  00001E                     tftstDrawChar@line:
   946                           	callstack 0
   947  00001E                     dtoa@d:
   948                           	callstack 0
   949                           
   950                           ; 8 bytes @ 0x1D
   951  00001E                     	ds	1
   952  00001F                     tftstDrawChar@x:
   953                           	callstack 0
   954                           
   955                           ; 1 bytes @ 0x1E
   956  00001F                     	ds	1
   957  000020                     tftstDrawChar@j:
   958                           	callstack 0
   959                           
   960                           ; 1 bytes @ 0x1F
   961  000020                     	ds	1
   962  000021                     tftstDrawChar@i:
   963                           	callstack 0
   964                           
   965                           ; 1 bytes @ 0x20
   966  000021                     	ds	1
   967  000022                     tftstDrawText@y:
   968                           	callstack 0
   969                           
   970                           ; 1 bytes @ 0x21
   971  000022                     	ds	1
   972  000023                     tftstDrawText@_text:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x22
   976  000023                     	ds	2
   977  000025                     tftstDrawText@color:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x24
   981  000025                     	ds	1
   982  000026                     ??_dtoa:
   983                           
   984                           ; 1 bytes @ 0x25
   985  000026                     	ds	1
   986  000027                     tftstDrawText@bg:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x26
   990  000027                     	ds	2
   991  000029                     tftstDrawText@size:
   992                           	callstack 0
   993                           
   994                           ; 1 bytes @ 0x28
   995  000029                     	ds	1
   996  00002A                     ??_tftstDrawText:
   997                           
   998                           ; 1 bytes @ 0x29
   999  00002A                     	ds	2
  1000  00002C                     tftstDrawText@textsize:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x2B
  1004  00002C                     	ds	2
  1005  00002E                     tftstDrawText@x:
  1006                           	callstack 0
  1007  00002E                     _dtoa$1100:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x2D
  1011  00002E                     	ds	1
  1012  00002F                     tftstDrawText@i:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x2E
  1016  00002F                     	ds	1
  1017  000030                     dtoa@p:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x2F
  1021  000030                     	ds	1
  1022  000031                     tftstDrawText@cursor_y:
  1023                           	callstack 0
  1024                           
  1025                           ; 1 bytes @ 0x30
  1026  000031                     	ds	1
  1027  000032                     tftstDrawText@cursor_x:
  1028                           	callstack 0
  1029  000032                     dtoa@w:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x31
  1033  000032                     	ds	2
  1034  000034                     dtoa@s:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x33
  1038  000034                     	ds	2
  1039  000036                     dtoa@n:
  1040                           	callstack 0
  1041                           
  1042                           ; 8 bytes @ 0x35
  1043  000036                     	ds	8
  1044  00003E                     dtoa@i:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x3D
  1048  00003E                     	ds	2
  1049  000040                     ?_vfpfcnvrt:
  1050                           	callstack 0
  1051  000040                     vfpfcnvrt@fp:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x3F
  1055  000040                     	ds	2
  1056  000042                     vfpfcnvrt@fmt:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x41
  1060  000042                     	ds	2
  1061  000044                     vfpfcnvrt@ap:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x43
  1065  000044                     	ds	2
  1066  000046                     ??_vfpfcnvrt:
  1067                           
  1068                           ; 1 bytes @ 0x45
  1069  000046                     	ds	2
  1070  000048                     vfpfcnvrt@ll:
  1071                           	callstack 0
  1072                           
  1073                           ; 8 bytes @ 0x47
  1074  000048                     	ds	8
  1075  000050                     ?_vfprintf:
  1076                           	callstack 0
  1077  000050                     vfprintf@fp:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x4F
  1081  000050                     	ds	2
  1082  000052                     vfprintf@fmt:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x51
  1086  000052                     	ds	2
  1087  000054                     vfprintf@ap:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x53
  1091  000054                     	ds	2
  1092  000056                     vfprintf@cfmt:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x55
  1096  000056                     	ds	2
  1097  000058                     ?_sprintf:
  1098                           	callstack 0
  1099  000058                     sprintf@s:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x57
  1103  000058                     	ds	2
  1104  00005A                     sprintf@fmt:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x59
  1108  00005A                     	ds	4
  1109  00005E                     
  1110                           ; 1 bytes @ 0x5D
  1111 ;;
  1112 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1113 ;;
  1114 ;; *************** function _main *****************
  1115 ;; Defined at:
  1116 ;;		line 101 in file "main.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1130 ;;      Params:         0       0       0       0       0       0       0
  1131 ;;      Locals:         0       0       0       0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0
  1133 ;;      Totals:         0       0       0       0       0       0       0
  1134 ;;Total ram usage:        0 bytes
  1135 ;; Hardware stack levels required when called: 9
  1136 ;; This function calls:
  1137 ;;		_SYSTEM_Initialize
  1138 ;;		_demoAnimated
  1139 ;; This function is called by:
  1140 ;;		Startup code after reset
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text0
  1145  0069B2                     __ptext0:
  1146                           	callstack 0
  1147  0069B2                     _main:
  1148                           	callstack 22
  1149  0069B2                     
  1150                           ;main.c: 103:     SYSTEM_Initialize();
  1151  0069B2  ECFF  F034         	call	_SYSTEM_Initialize	;wreg free
  1152  0069B6                     
  1153                           ;main.c: 121:     demoAnimated();
  1154  0069B6  ECC6  F037         	call	_demoAnimated	;wreg free
  1155  0069BA  EF00  F000         	goto	start
  1156  0069BE                     __end_of_main:
  1157                           	callstack 0
  1158                           
  1159 ;; *************** function _demoAnimated *****************
  1160 ;; Defined at:
  1161 ;;		line 48 in file "main.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;		None
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  idString        8   13[BANK0 ] unsigned char [8]
  1166 ;;  id              1   21[BANK0 ] unsigned char 
  1167 ;;  bgColor         2   23[BANK0 ] unsigned short 
  1168 ;;  y               1   25[BANK0 ] unsigned char 
  1169 ;;  deltaY          1   22[BANK0 ] char 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1179 ;;      Params:         0       0       0       0       0       0       0
  1180 ;;      Locals:         0      13       0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0
  1182 ;;      Totals:         0      13       0       0       0       0       0
  1183 ;;Total ram usage:       13 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; Hardware stack levels required when called: 8
  1186 ;; This function calls:
  1187 ;;		_SPI_Open
  1188 ;;		_sprintf
  1189 ;;		_tftstDrawHorizontalLine
  1190 ;;		_tftstDrawText
  1191 ;;		_tftstFillScreen
  1192 ;;		_tftstInit
  1193 ;;		_tftstReadId
  1194 ;; This function is called by:
  1195 ;;		_main
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text1
  1200  006F8C                     __ptext1:
  1201                           	callstack 0
  1202  006F8C                     _demoAnimated:
  1203                           	callstack 22
  1204  006F8C                     
  1205                           ;main.c: 49:     uint16_t bgColor = 0x0000;
  1206  006F8C  0E00               	movlw	0
  1207  006F8E  0100               	movlb	0	; () banked
  1208  006F90  6FA2               	movwf	(demoAnimated@bgColor+1)& (0+255),b
  1209  006F92  0E00               	movlw	0
  1210  006F94  6FA1               	movwf	demoAnimated@bgColor& (0+255),b
  1211  006F96                     
  1212                           ; BSR set to: 0
  1213  006F96  8E8C               	bsf	140,7,c	;volatile
  1214  006F98                     
  1215                           ; BSR set to: 0
  1216                           ;main.c: 51:     SPI_Open(0);
  1217  006F98  0E00               	movlw	0
  1218  006F9A  ECB4  F036         	call	_SPI_Open
  1219  006F9E                     
  1220                           ;main.c: 52:     tftstInit();
  1221  006F9E  EC92  F03D         	call	_tftstInit	;wreg free
  1222  006FA2                     
  1223                           ;main.c: 53:     tftstFillScreen(bgColor);
  1224  006FA2  0E00               	movlw	0
  1225  006FA4  6E08               	movwf	(tftstFillScreen@color+1)^0,c
  1226  006FA6  0E00               	movlw	0
  1227  006FA8  6E07               	movwf	tftstFillScreen@color^0,c
  1228  006FAA  ECDD  F035         	call	_tftstFillScreen	;wreg free
  1229  006FAE                     
  1230                           ;main.c: 55:     uint8_t y = 0;
  1231  006FAE  0E00               	movlw	0
  1232  006FB0  0100               	movlb	0	; () banked
  1233  006FB2  6FA3               	movwf	demoAnimated@y& (0+255),b
  1234  006FB4                     
  1235                           ; BSR set to: 0
  1236                           ;main.c: 56:     int8_t deltaY = 1;
  1237  006FB4  0E01               	movlw	1
  1238  006FB6  6FA0               	movwf	demoAnimated@deltaY& (0+255),b
  1239  006FB8                     l2528:
  1240                           
  1241                           ;main.c: 60:         tftstDrawHorizontalLine(6, y - 1, 160, bgColor);
  1242  006FB8  0100               	movlb	0	; () banked
  1243  006FBA  05A3               	decf	demoAnimated@y& (0+255),w,b
  1244  006FBC  6E07               	movwf	tftstDrawHorizontalLine@y^0,c
  1245  006FBE  0EA0               	movlw	160
  1246  006FC0  6E08               	movwf	tftstDrawHorizontalLine@width^0,c
  1247  006FC2  C0A1  F009         	movff	demoAnimated@bgColor,tftstDrawHorizontalLine@color
  1248  006FC6  C0A2  F00A         	movff	demoAnimated@bgColor+1,tftstDrawHorizontalLine@color+1
  1249  006FCA  0E06               	movlw	6
  1250  006FCC  EC59  F035         	call	_tftstDrawHorizontalLine
  1251  006FD0                     
  1252                           ;main.c: 61:         tftstDrawText(6, y, "funStackLabs", 0x07E0, bgColor, 2);
  1253  006FD0  C0A3  F022         	movff	demoAnimated@y,tftstDrawText@y
  1254  006FD4  0EEB               	movlw	low STR_1
  1255  006FD6  6E23               	movwf	tftstDrawText@_text^0,c
  1256  006FD8  0E7F               	movlw	high STR_1
  1257  006FDA  6E24               	movwf	(tftstDrawText@_text+1)^0,c
  1258  006FDC  0E07               	movlw	7
  1259  006FDE  6E26               	movwf	(tftstDrawText@color+1)^0,c
  1260  006FE0  0EE0               	movlw	224
  1261  006FE2  6E25               	movwf	tftstDrawText@color^0,c
  1262  006FE4  C0A1  F027         	movff	demoAnimated@bgColor,tftstDrawText@bg
  1263  006FE8  C0A2  F028         	movff	demoAnimated@bgColor+1,tftstDrawText@bg+1
  1264  006FEC  0E02               	movlw	2
  1265  006FEE  6E29               	movwf	tftstDrawText@size^0,c
  1266  006FF0  0E06               	movlw	6
  1267  006FF2  EC46  F038         	call	_tftstDrawText
  1268  006FF6                     
  1269                           ;main.c: 62:         tftstDrawHorizontalLine(6, y + 14, 160, bgColor);
  1270  006FF6  0100               	movlb	0	; () banked
  1271  006FF8  51A3               	movf	demoAnimated@y& (0+255),w,b
  1272  006FFA  0F0E               	addlw	14
  1273  006FFC  6E07               	movwf	tftstDrawHorizontalLine@y^0,c
  1274  006FFE  0EA0               	movlw	160
  1275  007000  6E08               	movwf	tftstDrawHorizontalLine@width^0,c
  1276  007002  C0A1  F009         	movff	demoAnimated@bgColor,tftstDrawHorizontalLine@color
  1277  007006  C0A2  F00A         	movff	demoAnimated@bgColor+1,tftstDrawHorizontalLine@color+1
  1278  00700A  0E06               	movlw	6
  1279  00700C  EC59  F035         	call	_tftstDrawHorizontalLine
  1280  007010                     
  1281                           ;main.c: 63:         y += deltaY;
  1282  007010  0100               	movlb	0	; () banked
  1283  007012  51A0               	movf	demoAnimated@deltaY& (0+255),w,b
  1284  007014  27A3               	addwf	demoAnimated@y& (0+255),f,b
  1285  007016                     
  1286                           ; BSR set to: 0
  1287                           ;main.c: 64:         if (y == 0 || y == 114) {
  1288  007016  51A3               	movf	demoAnimated@y& (0+255),w,b
  1289  007018  B4D8               	btfsc	status,2,c
  1290  00701A  EF11  F038         	goto	u1491
  1291  00701E  EF13  F038         	goto	u1490
  1292  007022                     u1491:
  1293  007022  EF1C  F038         	goto	l2540
  1294  007026                     u1490:
  1295  007026                     
  1296                           ; BSR set to: 0
  1297  007026  0E72               	movlw	114
  1298  007028  19A3               	xorwf	demoAnimated@y& (0+255),w,b
  1299  00702A  A4D8               	btfss	status,2,c
  1300  00702C  EF1A  F038         	goto	u1501
  1301  007030  EF1C  F038         	goto	u1500
  1302  007034                     u1501:
  1303  007034  EF1F  F038         	goto	l2544
  1304  007038                     u1500:
  1305  007038                     l2540:
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;main.c: 65:             deltaY = -deltaY;
  1309  007038  6DA0               	negf	demoAnimated@deltaY& (0+255),b
  1310  00703A                     
  1311                           ; BSR set to: 0
  1312                           ;main.c: 66:             y += deltaY;
  1313  00703A  51A0               	movf	demoAnimated@deltaY& (0+255),w,b
  1314  00703C  27A3               	addwf	demoAnimated@y& (0+255),f,b
  1315  00703E                     l2544:
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;main.c: 68:         uint8_t id = tftstReadId();
  1319  00703E  EC15  F035         	call	_tftstReadId	;wreg free
  1320  007042  0100               	movlb	0	; () banked
  1321  007044  6F9F               	movwf	demoAnimated@id& (0+255),b
  1322  007046                     
  1323                           ; BSR set to: 0
  1324                           ;main.c: 69:         char idString [8];;main.c: 70:         sprintf(idString, "ID:%d", i
      +                          d);
  1325  007046  0E97               	movlw	low demoAnimated@idString
  1326  007048  6E58               	movwf	sprintf@s^0,c
  1327  00704A  0E00               	movlw	high demoAnimated@idString
  1328  00704C  6E59               	movwf	(sprintf@s+1)^0,c
  1329  00704E  0EF8               	movlw	low STR_2
  1330  007050  6E5A               	movwf	sprintf@fmt^0,c
  1331  007052  0E7F               	movlw	high STR_2
  1332  007054  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1333  007056  C09F  F05C         	movff	demoAnimated@id,?_sprintf+4
  1334  00705A  6A5D               	clrf	(?_sprintf+5)^0,c
  1335  00705C  EC27  F036         	call	_sprintf	;wreg free
  1336  007060                     
  1337                           ;main.c: 72:         if (id != 124) {
  1338  007060  0E7C               	movlw	124
  1339  007062  0100               	movlb	0	; () banked
  1340  007064  199F               	xorwf	demoAnimated@id& (0+255),w,b
  1341  007066  B4D8               	btfsc	status,2,c
  1342  007068  EF38  F038         	goto	u1511
  1343  00706C  EF3A  F038         	goto	u1510
  1344  007070                     u1511:
  1345  007070  EF42  F038         	goto	l311
  1346  007074                     u1510:
  1347  007074                     
  1348                           ; BSR set to: 0
  1349                           ;main.c: 73:             tftstInit();
  1350  007074  EC92  F03D         	call	_tftstInit	;wreg free
  1351  007078                     
  1352                           ;main.c: 74:             tftstFillScreen(bgColor);
  1353  007078  C0A1  F007         	movff	demoAnimated@bgColor,tftstFillScreen@color
  1354  00707C  C0A2  F008         	movff	demoAnimated@bgColor+1,tftstFillScreen@color+1
  1355  007080  ECDD  F035         	call	_tftstFillScreen	;wreg free
  1356  007084                     l311:
  1357  007084  0004               	clrwdt		;# 
  1358  007086  EFDC  F037         	goto	l2528
  1359  00708A  0012               	return		;funcret
  1360  00708C                     __end_of_demoAnimated:
  1361                           	callstack 0
  1362                           
  1363 ;; *************** function _tftstReadId *****************
  1364 ;; Defined at:
  1365 ;;		line 32 in file "./tftst.h"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;		None
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  id1             1    2[COMRAM] unsigned char 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      unsigned char 
  1372 ;; Registers used:
  1373 ;;		wreg, status,2, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1379 ;;      Params:         0       0       0       0       0       0       0
  1380 ;;      Locals:         1       0       0       0       0       0       0
  1381 ;;      Temps:          0       0       0       0       0       0       0
  1382 ;;      Totals:         1       0       0       0       0       0       0
  1383 ;;Total ram usage:        1 bytes
  1384 ;; Hardware stack levels used: 1
  1385 ;; Hardware stack levels required when called: 2
  1386 ;; This function calls:
  1387 ;;		_SPI_ExchangeByte
  1388 ;;		_tftstWriteData
  1389 ;; This function is called by:
  1390 ;;		_demoAnimated
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text2
  1395  006A2A                     __ptext2:
  1396                           	callstack 0
  1397  006A2A                     _tftstReadId:
  1398                           	callstack 27
  1399  006A2A  948C               	bcf	140,2,c	;volatile
  1400  006A2C                     
  1401                           ;./tftst.h: 34:     tftstWriteData(0xDA);
  1402  006A2C  0EDA               	movlw	218
  1403  006A2E  ECD4  F034         	call	_tftstWriteData
  1404  006A32  8A94               	bsf	148,5,c	;volatile
  1405  006A34  848C               	bsf	140,2,c	;volatile
  1406  006A36                     
  1407                           ;./tftst.h: 37:     uint8_t id1 = SPI_ExchangeByte(0);
  1408  006A36  0E00               	movlw	0
  1409  006A38  EC08  F035         	call	_SPI_ExchangeByte
  1410  006A3C  6E03               	movwf	tftstReadId@id1^0,c
  1411  006A3E  9A94               	bcf	148,5,c	;volatile
  1412  006A40                     
  1413                           ;./tftst.h: 39:     return id1;
  1414  006A40  5003               	movf	tftstReadId@id1^0,w,c
  1415  006A42  0012               	return		;funcret
  1416  006A44                     __end_of_tftstReadId:
  1417                           	callstack 0
  1418                           
  1419 ;; *************** function _tftstInit *****************
  1420 ;; Defined at:
  1421 ;;		line 172 in file "./tftst.h"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1435 ;;      Params:         0       0       0       0       0       0       0
  1436 ;;      Locals:         0       0       0       0       0       0       0
  1437 ;;      Temps:          2       0       0       0       0       0       0
  1438 ;;      Totals:         2       0       0       0       0       0       0
  1439 ;;Total ram usage:        2 bytes
  1440 ;; Hardware stack levels used: 1
  1441 ;; Hardware stack levels required when called: 2
  1442 ;; This function calls:
  1443 ;;		_tftstWriteCommand
  1444 ;;		_tftstWriteData
  1445 ;; This function is called by:
  1446 ;;		_demoAnimated
  1447 ;;		_demoSimple
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text3
  1452  007B24                     __ptext3:
  1453                           	callstack 0
  1454  007B24                     _tftstInit:
  1455                           	callstack 27
  1456  007B24  928C               	bcf	140,1,c	;volatile
  1457  007B26                     
  1458                           ;./tftst.h: 174:     _delay((unsigned long)((100)*(32000000/4000.0)));
  1459  007B26  0E05               	movlw	5
  1460  007B28  6E04               	movwf	(??_tftstInit+1)^0,c
  1461  007B2A  0E0F               	movlw	15
  1462  007B2C  6E03               	movwf	??_tftstInit^0,c
  1463  007B2E  0EF1               	movlw	241
  1464  007B30                     u1557:
  1465  007B30  2EE8               	decfsz	wreg,f,c
  1466  007B32  D7FE               	bra	u1557
  1467  007B34  2E03               	decfsz	??_tftstInit^0,f,c
  1468  007B36  D7FC               	bra	u1557
  1469  007B38  2E04               	decfsz	(??_tftstInit+1)^0,f,c
  1470  007B3A  D7FA               	bra	u1557
  1471  007B3C  F000               	nop	
  1472  007B3E  828C               	bsf	140,1,c	;volatile
  1473  007B40                     
  1474                           ;./tftst.h: 176:     _delay((unsigned long)((100)*(32000000/4000.0)));
  1475  007B40  0E05               	movlw	5
  1476  007B42  6E04               	movwf	(??_tftstInit+1)^0,c
  1477  007B44  0E0F               	movlw	15
  1478  007B46  6E03               	movwf	??_tftstInit^0,c
  1479  007B48  0EF1               	movlw	241
  1480  007B4A                     u1567:
  1481  007B4A  2EE8               	decfsz	wreg,f,c
  1482  007B4C  D7FE               	bra	u1567
  1483  007B4E  2E03               	decfsz	??_tftstInit^0,f,c
  1484  007B50  D7FC               	bra	u1567
  1485  007B52  2E04               	decfsz	(??_tftstInit+1)^0,f,c
  1486  007B54  D7FA               	bra	u1567
  1487  007B56  F000               	nop	
  1488  007B58  908C               	bcf	140,0,c	;volatile
  1489  007B5A                     
  1490                           ;./tftst.h: 179:     tftstWriteCommand(0x01);
  1491  007B5A  0E01               	movlw	1
  1492  007B5C  ECDF  F034         	call	_tftstWriteCommand
  1493  007B60                     
  1494                           ;./tftst.h: 180:     _delay((unsigned long)((100)*(32000000/4000.0)));
  1495  007B60  0E05               	movlw	5
  1496  007B62  6E04               	movwf	(??_tftstInit+1)^0,c
  1497  007B64  0E0F               	movlw	15
  1498  007B66  6E03               	movwf	??_tftstInit^0,c
  1499  007B68  0EF1               	movlw	241
  1500  007B6A                     u1577:
  1501  007B6A  2EE8               	decfsz	wreg,f,c
  1502  007B6C  D7FE               	bra	u1577
  1503  007B6E  2E03               	decfsz	??_tftstInit^0,f,c
  1504  007B70  D7FC               	bra	u1577
  1505  007B72  2E04               	decfsz	(??_tftstInit+1)^0,f,c
  1506  007B74  D7FA               	bra	u1577
  1507  007B76  F000               	nop	
  1508                           
  1509                           ;./tftst.h: 181:     tftstWriteCommand(0x11);
  1510  007B78  0E11               	movlw	17
  1511  007B7A  ECDF  F034         	call	_tftstWriteCommand
  1512  007B7E                     
  1513                           ;./tftst.h: 182:     _delay((unsigned long)((100)*(32000000/4000.0)));
  1514  007B7E  0E05               	movlw	5
  1515  007B80  6E04               	movwf	(??_tftstInit+1)^0,c
  1516  007B82  0E0F               	movlw	15
  1517  007B84  6E03               	movwf	??_tftstInit^0,c
  1518  007B86  0EF1               	movlw	241
  1519  007B88                     u1587:
  1520  007B88  2EE8               	decfsz	wreg,f,c
  1521  007B8A  D7FE               	bra	u1587
  1522  007B8C  2E03               	decfsz	??_tftstInit^0,f,c
  1523  007B8E  D7FC               	bra	u1587
  1524  007B90  2E04               	decfsz	(??_tftstInit+1)^0,f,c
  1525  007B92  D7FA               	bra	u1587
  1526  007B94  F000               	nop	
  1527  007B96                     
  1528                           ;./tftst.h: 184:     tftstWriteCommand(0xB1);
  1529  007B96  0EB1               	movlw	177
  1530  007B98  ECDF  F034         	call	_tftstWriteCommand
  1531  007B9C                     
  1532                           ;./tftst.h: 185:     tftstWriteData(FRM_CNT[0]);
  1533  007B9C  0EE4               	movlw	low _FRM_CNT
  1534  007B9E  6EF6               	movwf	tblptrl,c
  1535  007BA0                     	if	1	;There is more than 1 active tblptr byte
  1536  007BA0  0E7F               	movlw	high _FRM_CNT
  1537  007BA2  6EF7               	movwf	tblptrh,c
  1538  007BA4                     	endif
  1539  007BA4                     	if	0	;There are less than 3 active tblptr bytes
  1540  007BA4                     	endif
  1541  007BA4  0008               	tblrd		*
  1542  007BA6  50F5               	movf	tablat,w,c
  1543  007BA8  ECD4  F034         	call	_tftstWriteData
  1544  007BAC                     
  1545                           ;./tftst.h: 186:     tftstWriteData(FRM_CNT[1]);
  1546  007BAC  0EE5               	movlw	low (_FRM_CNT+1)
  1547  007BAE  6EF6               	movwf	tblptrl,c
  1548  007BB0  0E7F               	movlw	high (_FRM_CNT+1)
  1549  007BB2  6EF7               	movwf	tblptrh,c
  1550  007BB4                     	if	0	;tblptru may be non-zero
  1551  007BB4                     	endif
  1552  007BB4                     	if	0	;tblptru may be non-zero
  1553  007BB4                     	endif
  1554  007BB4  0008               	tblrd		*
  1555  007BB6  50F5               	movf	tablat,w,c
  1556  007BB8  ECD4  F034         	call	_tftstWriteData
  1557  007BBC                     
  1558                           ;./tftst.h: 187:     tftstWriteData(FRM_CNT[2]);
  1559  007BBC  0EE6               	movlw	low (_FRM_CNT+2)
  1560  007BBE  6EF6               	movwf	tblptrl,c
  1561  007BC0  0E7F               	movlw	high (_FRM_CNT+2)
  1562  007BC2  6EF7               	movwf	tblptrh,c
  1563  007BC4                     	if	0	;tblptru may be non-zero
  1564  007BC4                     	endif
  1565  007BC4                     	if	0	;tblptru may be non-zero
  1566  007BC4                     	endif
  1567  007BC4  0008               	tblrd		*
  1568  007BC6  50F5               	movf	tablat,w,c
  1569  007BC8  ECD4  F034         	call	_tftstWriteData
  1570  007BCC                     
  1571                           ;./tftst.h: 188:     tftstWriteCommand(0xB2);
  1572  007BCC  0EB2               	movlw	178
  1573  007BCE  ECDF  F034         	call	_tftstWriteCommand
  1574  007BD2                     
  1575                           ;./tftst.h: 189:     tftstWriteData(FRM_CNT[0]);
  1576  007BD2  0EE4               	movlw	low _FRM_CNT
  1577  007BD4  6EF6               	movwf	tblptrl,c
  1578  007BD6                     	if	1	;There is more than 1 active tblptr byte
  1579  007BD6  0E7F               	movlw	high _FRM_CNT
  1580  007BD8  6EF7               	movwf	tblptrh,c
  1581  007BDA                     	endif
  1582  007BDA                     	if	0	;There are less than 3 active tblptr bytes
  1583  007BDA                     	endif
  1584  007BDA  0008               	tblrd		*
  1585  007BDC  50F5               	movf	tablat,w,c
  1586  007BDE  ECD4  F034         	call	_tftstWriteData
  1587  007BE2                     
  1588                           ;./tftst.h: 190:     tftstWriteData(FRM_CNT[1]);
  1589  007BE2  0EE5               	movlw	low (_FRM_CNT+1)
  1590  007BE4  6EF6               	movwf	tblptrl,c
  1591  007BE6  0E7F               	movlw	high (_FRM_CNT+1)
  1592  007BE8  6EF7               	movwf	tblptrh,c
  1593  007BEA                     	if	0	;tblptru may be non-zero
  1594  007BEA                     	endif
  1595  007BEA                     	if	0	;tblptru may be non-zero
  1596  007BEA                     	endif
  1597  007BEA  0008               	tblrd		*
  1598  007BEC  50F5               	movf	tablat,w,c
  1599  007BEE  ECD4  F034         	call	_tftstWriteData
  1600  007BF2                     
  1601                           ;./tftst.h: 191:     tftstWriteData(FRM_CNT[2]);
  1602  007BF2  0EE6               	movlw	low (_FRM_CNT+2)
  1603  007BF4  6EF6               	movwf	tblptrl,c
  1604  007BF6  0E7F               	movlw	high (_FRM_CNT+2)
  1605  007BF8  6EF7               	movwf	tblptrh,c
  1606  007BFA                     	if	0	;tblptru may be non-zero
  1607  007BFA                     	endif
  1608  007BFA                     	if	0	;tblptru may be non-zero
  1609  007BFA                     	endif
  1610  007BFA  0008               	tblrd		*
  1611  007BFC  50F5               	movf	tablat,w,c
  1612  007BFE  ECD4  F034         	call	_tftstWriteData
  1613  007C02                     
  1614                           ;./tftst.h: 192:     tftstWriteCommand(0xB3);
  1615  007C02  0EB3               	movlw	179
  1616  007C04  ECDF  F034         	call	_tftstWriteCommand
  1617  007C08                     
  1618                           ;./tftst.h: 193:     tftstWriteData(FRM_CNT[0]);
  1619  007C08  0EE4               	movlw	low _FRM_CNT
  1620  007C0A  6EF6               	movwf	tblptrl,c
  1621  007C0C                     	if	1	;There is more than 1 active tblptr byte
  1622  007C0C  0E7F               	movlw	high _FRM_CNT
  1623  007C0E  6EF7               	movwf	tblptrh,c
  1624  007C10                     	endif
  1625  007C10                     	if	0	;There are less than 3 active tblptr bytes
  1626  007C10                     	endif
  1627  007C10  0008               	tblrd		*
  1628  007C12  50F5               	movf	tablat,w,c
  1629  007C14  ECD4  F034         	call	_tftstWriteData
  1630  007C18                     
  1631                           ;./tftst.h: 194:     tftstWriteData(FRM_CNT[1]);
  1632  007C18  0EE5               	movlw	low (_FRM_CNT+1)
  1633  007C1A  6EF6               	movwf	tblptrl,c
  1634  007C1C  0E7F               	movlw	high (_FRM_CNT+1)
  1635  007C1E  6EF7               	movwf	tblptrh,c
  1636  007C20                     	if	0	;tblptru may be non-zero
  1637  007C20                     	endif
  1638  007C20                     	if	0	;tblptru may be non-zero
  1639  007C20                     	endif
  1640  007C20  0008               	tblrd		*
  1641  007C22  50F5               	movf	tablat,w,c
  1642  007C24  ECD4  F034         	call	_tftstWriteData
  1643  007C28                     
  1644                           ;./tftst.h: 195:     tftstWriteData(FRM_CNT[2]);
  1645  007C28  0EE6               	movlw	low (_FRM_CNT+2)
  1646  007C2A  6EF6               	movwf	tblptrl,c
  1647  007C2C  0E7F               	movlw	high (_FRM_CNT+2)
  1648  007C2E  6EF7               	movwf	tblptrh,c
  1649  007C30                     	if	0	;tblptru may be non-zero
  1650  007C30                     	endif
  1651  007C30                     	if	0	;tblptru may be non-zero
  1652  007C30                     	endif
  1653  007C30  0008               	tblrd		*
  1654  007C32  50F5               	movf	tablat,w,c
  1655  007C34  ECD4  F034         	call	_tftstWriteData
  1656  007C38                     
  1657                           ;./tftst.h: 197:     tftstWriteCommand(0xB4);
  1658  007C38  0EB4               	movlw	180
  1659  007C3A  ECDF  F034         	call	_tftstWriteCommand
  1660  007C3E                     
  1661                           ;./tftst.h: 198:     tftstWriteData(0x07);
  1662  007C3E  0E07               	movlw	7
  1663  007C40  ECD4  F034         	call	_tftstWriteData
  1664  007C44                     
  1665                           ;./tftst.h: 199:     tftstWriteCommand(0xC0);
  1666  007C44  0EC0               	movlw	192
  1667  007C46  ECDF  F034         	call	_tftstWriteCommand
  1668  007C4A                     
  1669                           ;./tftst.h: 200:     tftstWriteData(0xA2);
  1670  007C4A  0EA2               	movlw	162
  1671  007C4C  ECD4  F034         	call	_tftstWriteData
  1672  007C50                     
  1673                           ;./tftst.h: 201:     tftstWriteData(0x02);
  1674  007C50  0E02               	movlw	2
  1675  007C52  ECD4  F034         	call	_tftstWriteData
  1676  007C56                     
  1677                           ;./tftst.h: 202:     tftstWriteData(0x84);
  1678  007C56  0E84               	movlw	132
  1679  007C58  ECD4  F034         	call	_tftstWriteData
  1680  007C5C                     
  1681                           ;./tftst.h: 203:     tftstWriteCommand(0xC1);
  1682  007C5C  0EC1               	movlw	193
  1683  007C5E  ECDF  F034         	call	_tftstWriteCommand
  1684  007C62                     
  1685                           ;./tftst.h: 204:     tftstWriteData(0xC5);
  1686  007C62  0EC5               	movlw	197
  1687  007C64  ECD4  F034         	call	_tftstWriteData
  1688  007C68                     
  1689                           ;./tftst.h: 205:     tftstWriteCommand(0xC2);
  1690  007C68  0EC2               	movlw	194
  1691  007C6A  ECDF  F034         	call	_tftstWriteCommand
  1692  007C6E                     
  1693                           ;./tftst.h: 206:     tftstWriteData(0x0A);
  1694  007C6E  0E0A               	movlw	10
  1695  007C70  ECD4  F034         	call	_tftstWriteData
  1696  007C74                     
  1697                           ;./tftst.h: 207:     tftstWriteData(0x00);
  1698  007C74  0E00               	movlw	0
  1699  007C76  ECD4  F034         	call	_tftstWriteData
  1700  007C7A                     
  1701                           ;./tftst.h: 208:     tftstWriteCommand(0xC3);
  1702  007C7A  0EC3               	movlw	195
  1703  007C7C  ECDF  F034         	call	_tftstWriteCommand
  1704  007C80                     
  1705                           ;./tftst.h: 209:     tftstWriteData(0x8A);
  1706  007C80  0E8A               	movlw	138
  1707  007C82  ECD4  F034         	call	_tftstWriteData
  1708  007C86                     
  1709                           ;./tftst.h: 210:     tftstWriteData(0x2A);
  1710  007C86  0E2A               	movlw	42
  1711  007C88  ECD4  F034         	call	_tftstWriteData
  1712  007C8C                     
  1713                           ;./tftst.h: 211:     tftstWriteCommand(0xC4);
  1714  007C8C  0EC4               	movlw	196
  1715  007C8E  ECDF  F034         	call	_tftstWriteCommand
  1716  007C92                     
  1717                           ;./tftst.h: 212:     tftstWriteData(0x8A);
  1718  007C92  0E8A               	movlw	138
  1719  007C94  ECD4  F034         	call	_tftstWriteData
  1720  007C98                     
  1721                           ;./tftst.h: 213:     tftstWriteData(0xEE);
  1722  007C98  0EEE               	movlw	238
  1723  007C9A  ECD4  F034         	call	_tftstWriteData
  1724  007C9E                     
  1725                           ;./tftst.h: 214:     tftstWriteCommand(0xC5);
  1726  007C9E  0EC5               	movlw	197
  1727  007CA0  ECDF  F034         	call	_tftstWriteCommand
  1728  007CA4                     
  1729                           ;./tftst.h: 215:     tftstWriteData(0x0E);
  1730  007CA4  0E0E               	movlw	14
  1731  007CA6  ECD4  F034         	call	_tftstWriteData
  1732  007CAA                     
  1733                           ;./tftst.h: 216:     tftstWriteCommand(0x20);
  1734  007CAA  0E20               	movlw	32
  1735  007CAC  ECDF  F034         	call	_tftstWriteCommand
  1736  007CB0                     
  1737                           ;./tftst.h: 217:     tftstWriteCommand(0x36);
  1738  007CB0  0E36               	movlw	54
  1739  007CB2  ECDF  F034         	call	_tftstWriteCommand
  1740  007CB6                     
  1741                           ;./tftst.h: 218:     tftstWriteData(0b01100000);
  1742  007CB6  0E60               	movlw	96
  1743  007CB8  ECD4  F034         	call	_tftstWriteData
  1744  007CBC                     
  1745                           ;./tftst.h: 220:     tftstWriteCommand(0x3A);
  1746  007CBC  0E3A               	movlw	58
  1747  007CBE  ECDF  F034         	call	_tftstWriteCommand
  1748  007CC2                     
  1749                           ;./tftst.h: 221:     tftstWriteData(0x05);
  1750  007CC2  0E05               	movlw	5
  1751  007CC4  ECD4  F034         	call	_tftstWriteData
  1752  007CC8                     
  1753                           ;./tftst.h: 223:     tftstWriteCommand(0x2A);
  1754  007CC8  0E2A               	movlw	42
  1755  007CCA  ECDF  F034         	call	_tftstWriteCommand
  1756  007CCE                     
  1757                           ;./tftst.h: 224:     tftstWriteData(0x00);
  1758  007CCE  0E00               	movlw	0
  1759  007CD0  ECD4  F034         	call	_tftstWriteData
  1760  007CD4                     
  1761                           ;./tftst.h: 225:     tftstWriteData(0x00);
  1762  007CD4  0E00               	movlw	0
  1763  007CD6  ECD4  F034         	call	_tftstWriteData
  1764  007CDA                     
  1765                           ;./tftst.h: 226:     tftstWriteData(0x00);
  1766  007CDA  0E00               	movlw	0
  1767  007CDC  ECD4  F034         	call	_tftstWriteData
  1768  007CE0                     
  1769                           ;./tftst.h: 227:     tftstWriteData(0x7F);
  1770  007CE0  0E7F               	movlw	127
  1771  007CE2  ECD4  F034         	call	_tftstWriteData
  1772  007CE6                     
  1773                           ;./tftst.h: 228:     tftstWriteCommand(0x2B);
  1774  007CE6  0E2B               	movlw	43
  1775  007CE8  ECDF  F034         	call	_tftstWriteCommand
  1776  007CEC                     
  1777                           ;./tftst.h: 229:     tftstWriteData(0x00);
  1778  007CEC  0E00               	movlw	0
  1779  007CEE  ECD4  F034         	call	_tftstWriteData
  1780  007CF2                     
  1781                           ;./tftst.h: 230:     tftstWriteData(0x00);
  1782  007CF2  0E00               	movlw	0
  1783  007CF4  ECD4  F034         	call	_tftstWriteData
  1784  007CF8                     
  1785                           ;./tftst.h: 231:     tftstWriteData(0x00);
  1786  007CF8  0E00               	movlw	0
  1787  007CFA  ECD4  F034         	call	_tftstWriteData
  1788  007CFE                     
  1789                           ;./tftst.h: 232:     tftstWriteData(0x9F);
  1790  007CFE  0E9F               	movlw	159
  1791  007D00  ECD4  F034         	call	_tftstWriteData
  1792  007D04                     
  1793                           ;./tftst.h: 234:     tftstWriteCommand(0xE0);
  1794  007D04  0EE0               	movlw	224
  1795  007D06  ECDF  F034         	call	_tftstWriteCommand
  1796  007D0A                     
  1797                           ;./tftst.h: 235:     tftstWriteData(0x02);
  1798  007D0A  0E02               	movlw	2
  1799  007D0C  ECD4  F034         	call	_tftstWriteData
  1800  007D10                     
  1801                           ;./tftst.h: 236:     tftstWriteData(0x1C);
  1802  007D10  0E1C               	movlw	28
  1803  007D12  ECD4  F034         	call	_tftstWriteData
  1804  007D16                     
  1805                           ;./tftst.h: 237:     tftstWriteData(0x07);
  1806  007D16  0E07               	movlw	7
  1807  007D18  ECD4  F034         	call	_tftstWriteData
  1808  007D1C                     
  1809                           ;./tftst.h: 238:     tftstWriteData(0x12);
  1810  007D1C  0E12               	movlw	18
  1811  007D1E  ECD4  F034         	call	_tftstWriteData
  1812  007D22                     
  1813                           ;./tftst.h: 239:     tftstWriteData(0x37);
  1814  007D22  0E37               	movlw	55
  1815  007D24  ECD4  F034         	call	_tftstWriteData
  1816  007D28                     
  1817                           ;./tftst.h: 240:     tftstWriteData(0x32);
  1818  007D28  0E32               	movlw	50
  1819  007D2A  ECD4  F034         	call	_tftstWriteData
  1820  007D2E                     
  1821                           ;./tftst.h: 241:     tftstWriteData(0x29);
  1822  007D2E  0E29               	movlw	41
  1823  007D30  ECD4  F034         	call	_tftstWriteData
  1824  007D34                     
  1825                           ;./tftst.h: 242:     tftstWriteData(0x2D);
  1826  007D34  0E2D               	movlw	45
  1827  007D36  ECD4  F034         	call	_tftstWriteData
  1828  007D3A                     
  1829                           ;./tftst.h: 243:     tftstWriteData(0x29);
  1830  007D3A  0E29               	movlw	41
  1831  007D3C  ECD4  F034         	call	_tftstWriteData
  1832  007D40                     
  1833                           ;./tftst.h: 244:     tftstWriteData(0x25);
  1834  007D40  0E25               	movlw	37
  1835  007D42  ECD4  F034         	call	_tftstWriteData
  1836  007D46                     
  1837                           ;./tftst.h: 245:     tftstWriteData(0x2B);
  1838  007D46  0E2B               	movlw	43
  1839  007D48  ECD4  F034         	call	_tftstWriteData
  1840  007D4C                     
  1841                           ;./tftst.h: 246:     tftstWriteData(0x39);
  1842  007D4C  0E39               	movlw	57
  1843  007D4E  ECD4  F034         	call	_tftstWriteData
  1844  007D52                     
  1845                           ;./tftst.h: 247:     tftstWriteData(0x00);
  1846  007D52  0E00               	movlw	0
  1847  007D54  ECD4  F034         	call	_tftstWriteData
  1848  007D58                     
  1849                           ;./tftst.h: 248:     tftstWriteData(0x01);
  1850  007D58  0E01               	movlw	1
  1851  007D5A  ECD4  F034         	call	_tftstWriteData
  1852  007D5E                     
  1853                           ;./tftst.h: 249:     tftstWriteData(0x03);
  1854  007D5E  0E03               	movlw	3
  1855  007D60  ECD4  F034         	call	_tftstWriteData
  1856  007D64                     
  1857                           ;./tftst.h: 250:     tftstWriteData(0x10);
  1858  007D64  0E10               	movlw	16
  1859  007D66  ECD4  F034         	call	_tftstWriteData
  1860  007D6A                     
  1861                           ;./tftst.h: 251:     tftstWriteCommand(0xE1);
  1862  007D6A  0EE1               	movlw	225
  1863  007D6C  ECDF  F034         	call	_tftstWriteCommand
  1864  007D70                     
  1865                           ;./tftst.h: 252:     tftstWriteData(0x03);
  1866  007D70  0E03               	movlw	3
  1867  007D72  ECD4  F034         	call	_tftstWriteData
  1868  007D76                     
  1869                           ;./tftst.h: 253:     tftstWriteData(0x1D);
  1870  007D76  0E1D               	movlw	29
  1871  007D78  ECD4  F034         	call	_tftstWriteData
  1872  007D7C                     
  1873                           ;./tftst.h: 254:     tftstWriteData(0x07);
  1874  007D7C  0E07               	movlw	7
  1875  007D7E  ECD4  F034         	call	_tftstWriteData
  1876  007D82                     
  1877                           ;./tftst.h: 255:     tftstWriteData(0x06);
  1878  007D82  0E06               	movlw	6
  1879  007D84  ECD4  F034         	call	_tftstWriteData
  1880  007D88                     
  1881                           ;./tftst.h: 256:     tftstWriteData(0x2E);
  1882  007D88  0E2E               	movlw	46
  1883  007D8A  ECD4  F034         	call	_tftstWriteData
  1884  007D8E                     
  1885                           ;./tftst.h: 257:     tftstWriteData(0x2C);
  1886  007D8E  0E2C               	movlw	44
  1887  007D90  ECD4  F034         	call	_tftstWriteData
  1888  007D94                     
  1889                           ;./tftst.h: 258:     tftstWriteData(0x29);
  1890  007D94  0E29               	movlw	41
  1891  007D96  ECD4  F034         	call	_tftstWriteData
  1892  007D9A                     
  1893                           ;./tftst.h: 259:     tftstWriteData(0x2D);
  1894  007D9A  0E2D               	movlw	45
  1895  007D9C  ECD4  F034         	call	_tftstWriteData
  1896  007DA0                     
  1897                           ;./tftst.h: 260:     tftstWriteData(0x2E);
  1898  007DA0  0E2E               	movlw	46
  1899  007DA2  ECD4  F034         	call	_tftstWriteData
  1900  007DA6                     
  1901                           ;./tftst.h: 261:     tftstWriteData(0x2E);
  1902  007DA6  0E2E               	movlw	46
  1903  007DA8  ECD4  F034         	call	_tftstWriteData
  1904  007DAC                     
  1905                           ;./tftst.h: 262:     tftstWriteData(0x37);
  1906  007DAC  0E37               	movlw	55
  1907  007DAE  ECD4  F034         	call	_tftstWriteData
  1908  007DB2                     
  1909                           ;./tftst.h: 263:     tftstWriteData(0x3F);
  1910  007DB2  0E3F               	movlw	63
  1911  007DB4  ECD4  F034         	call	_tftstWriteData
  1912  007DB8                     
  1913                           ;./tftst.h: 264:     tftstWriteData(0x00);
  1914  007DB8  0E00               	movlw	0
  1915  007DBA  ECD4  F034         	call	_tftstWriteData
  1916  007DBE                     
  1917                           ;./tftst.h: 265:     tftstWriteData(0x00);
  1918  007DBE  0E00               	movlw	0
  1919  007DC0  ECD4  F034         	call	_tftstWriteData
  1920  007DC4                     
  1921                           ;./tftst.h: 266:     tftstWriteData(0x02);
  1922  007DC4  0E02               	movlw	2
  1923  007DC6  ECD4  F034         	call	_tftstWriteData
  1924  007DCA                     
  1925                           ;./tftst.h: 267:     tftstWriteData(0x10);
  1926  007DCA  0E10               	movlw	16
  1927  007DCC  ECD4  F034         	call	_tftstWriteData
  1928  007DD0                     
  1929                           ;./tftst.h: 268:     tftstWriteCommand(0x13);
  1930  007DD0  0E13               	movlw	19
  1931  007DD2  ECDF  F034         	call	_tftstWriteCommand
  1932  007DD6                     
  1933                           ;./tftst.h: 269:     _delay((unsigned long)((10)*(32000000/4000.0)));
  1934  007DD6  0E68               	movlw	104
  1935  007DD8  6E03               	movwf	??_tftstInit^0,c
  1936  007DDA  0EE4               	movlw	228
  1937  007DDC                     u1597:
  1938  007DDC  2EE8               	decfsz	wreg,f,c
  1939  007DDE  D7FE               	bra	u1597
  1940  007DE0  2E03               	decfsz	??_tftstInit^0,f,c
  1941  007DE2  D7FC               	bra	u1597
  1942  007DE4  F000 F000          	nop2	
  1943  007DE8                     
  1944                           ;./tftst.h: 270:     tftstWriteCommand(0x29);
  1945  007DE8  0E29               	movlw	41
  1946  007DEA  ECDF  F034         	call	_tftstWriteCommand
  1947  007DEE                     
  1948                           ;./tftst.h: 271:     _delay((unsigned long)((10)*(32000000/4000.0)));
  1949  007DEE  0E68               	movlw	104
  1950  007DF0  6E03               	movwf	??_tftstInit^0,c
  1951  007DF2  0EE4               	movlw	228
  1952  007DF4                     u1607:
  1953  007DF4  2EE8               	decfsz	wreg,f,c
  1954  007DF6  D7FE               	bra	u1607
  1955  007DF8  2E03               	decfsz	??_tftstInit^0,f,c
  1956  007DFA  D7FC               	bra	u1607
  1957  007DFC  F000 F000          	nop2	
  1958  007E00  8E8C               	bsf	140,7,c	;volatile
  1959  007E02  0012               	return		;funcret
  1960  007E04                     __end_of_tftstInit:
  1961                           	callstack 0
  1962                           
  1963 ;; *************** function _tftstFillScreen *****************
  1964 ;; Defined at:
  1965 ;;		line 72 in file "./tftst.h"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  color           2    6[COMRAM] unsigned short 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  counter         2    8[COMRAM] unsigned short 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2, status,0, cstack
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1979 ;;      Params:         2       0       0       0       0       0       0
  1980 ;;      Locals:         2       0       0       0       0       0       0
  1981 ;;      Temps:          0       0       0       0       0       0       0
  1982 ;;      Totals:         4       0       0       0       0       0       0
  1983 ;;Total ram usage:        4 bytes
  1984 ;; Hardware stack levels used: 1
  1985 ;; Hardware stack levels required when called: 3
  1986 ;; This function calls:
  1987 ;;		_tftstSetWindow
  1988 ;;		_tftstWriteColor
  1989 ;; This function is called by:
  1990 ;;		_demoAnimated
  1991 ;;		_demoSimple
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text4
  1996  006BBA                     __ptext4:
  1997                           	callstack 0
  1998  006BBA                     _tftstFillScreen:
  1999                           	callstack 26
  2000  006BBA                     
  2001                           ;./tftst.h: 73:     uint16_t counter = TFTST_PIXEL_COUNT;
  2002  006BBA  0E50               	movlw	80
  2003  006BBC  6E0A               	movwf	(tftstFillScreen@counter+1)^0,c
  2004  006BBE  0E00               	movlw	0
  2005  006BC0  6E09               	movwf	tftstFillScreen@counter^0,c
  2006  006BC2                     
  2007                           ;./tftst.h: 74:     tftstSetWindow(0, TFTST_WIDTH, 0, TFTST_HEIGHT);
  2008  006BC2  0EA0               	movlw	160
  2009  006BC4  6E03               	movwf	tftstSetWindow@xEnd^0,c
  2010  006BC6  0E00               	movlw	0
  2011  006BC8  6E04               	movwf	tftstSetWindow@yStart^0,c
  2012  006BCA  0E80               	movlw	128
  2013  006BCC  6E05               	movwf	tftstSetWindow@yEnd^0,c
  2014  006BCE  0E00               	movlw	0
  2015  006BD0  ECBA  F035         	call	_tftstSetWindow
  2016                           
  2017                           ;./tftst.h: 75:     while (counter--) {
  2018  006BD4  EFF2  F035         	goto	l2266
  2019  006BD8                     l2264:
  2020                           
  2021                           ;./tftst.h: 76:         tftstWriteColor(color);
  2022  006BD8  C007  F003         	movff	tftstFillScreen@color,tftstWriteColor@color
  2023  006BDC  C008  F004         	movff	tftstFillScreen@color+1,tftstWriteColor@color+1
  2024  006BE0  ECEE  F034         	call	_tftstWriteColor	;wreg free
  2025  006BE4                     l2266:
  2026                           
  2027                           ;./tftst.h: 75:     while (counter--) {
  2028  006BE4  0609               	decf	tftstFillScreen@counter^0,f,c
  2029  006BE6  A0D8               	btfss	status,0,c
  2030  006BE8  060A               	decf	(tftstFillScreen@counter+1)^0,f,c
  2031  006BEA  2809               	incf	tftstFillScreen@counter^0,w,c
  2032  006BEC  E106               	bnz	u1411
  2033  006BEE  280A               	incf	(tftstFillScreen@counter+1)^0,w,c
  2034  006BF0  A4D8               	btfss	status,2,c
  2035  006BF2  EFFD  F035         	goto	u1411
  2036  006BF6  EFFF  F035         	goto	u1410
  2037  006BFA                     u1411:
  2038  006BFA  EFEC  F035         	goto	l2264
  2039  006BFE                     u1410:
  2040  006BFE  0012               	return		;funcret
  2041  006C00                     __end_of_tftstFillScreen:
  2042                           	callstack 0
  2043                           
  2044 ;; *************** function _tftstDrawText *****************
  2045 ;; Defined at:
  2046 ;;		line 142 in file "./tftst.h"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  x               1    wreg     unsigned char 
  2049 ;;  y               1   33[COMRAM] unsigned char 
  2050 ;;  _text           2   34[COMRAM] PTR unsigned char 
  2051 ;;		 -> STR_3(13), STR_1(13), 
  2052 ;;  color           2   36[COMRAM] unsigned short 
  2053 ;;  bg              2   38[COMRAM] unsigned short 
  2054 ;;  size            1   40[COMRAM] unsigned char 
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;  x               1   45[COMRAM] unsigned char 
  2057 ;;  i               2   46[COMRAM] unsigned short 
  2058 ;;  textsize        2   43[COMRAM] unsigned short 
  2059 ;;  cursor_x        1   49[COMRAM] unsigned char 
  2060 ;;  cursor_y        1   48[COMRAM] unsigned char 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2070 ;;      Params:         8       0       0       0       0       0       0
  2071 ;;      Locals:         7       0       0       0       0       0       0
  2072 ;;      Temps:          2       0       0       0       0       0       0
  2073 ;;      Totals:        17       0       0       0       0       0       0
  2074 ;;Total ram usage:       17 bytes
  2075 ;; Hardware stack levels used: 1
  2076 ;; Hardware stack levels required when called: 5
  2077 ;; This function calls:
  2078 ;;		_strlen
  2079 ;;		_tftstDrawChar
  2080 ;; This function is called by:
  2081 ;;		_demoAnimated
  2082 ;;		_demoSimple
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           	psect	text5
  2087  00708C                     __ptext5:
  2088                           	callstack 0
  2089  00708C                     _tftstDrawText:
  2090                           	callstack 24
  2091                           
  2092                           ;incstack = 0
  2093                           ;tftstDrawText@x stored from wreg
  2094  00708C  6E2E               	movwf	tftstDrawText@x^0,c
  2095  00708E                     
  2096                           ;./tftst.h: 143:     uint8_t cursor_x, cursor_y;;./tftst.h: 144:     uint16_t textsize, 
      +                          i;;./tftst.h: 145:     cursor_x = x, cursor_y = y;
  2097  00708E  C02E  F032         	movff	tftstDrawText@x,tftstDrawText@cursor_x
  2098  007092  C022  F031         	movff	tftstDrawText@y,tftstDrawText@cursor_y
  2099  007096                     
  2100                           ;./tftst.h: 146:     textsize = strlen(_text);
  2101  007096  C023  F001         	movff	tftstDrawText@_text,strlen@s
  2102  00709A  C024  F002         	movff	tftstDrawText@_text+1,strlen@s+1
  2103  00709E  EC00  F036         	call	_strlen	;wreg free
  2104  0070A2  C001  F02C         	movff	?_strlen,tftstDrawText@textsize
  2105  0070A6  C002  F02D         	movff	?_strlen+1,tftstDrawText@textsize+1
  2106  0070AA                     
  2107                           ;./tftst.h: 147:     for (i = 0; i < textsize; i++) {
  2108  0070AA  0E00               	movlw	0
  2109  0070AC  6E30               	movwf	(tftstDrawText@i+1)^0,c
  2110  0070AE  0E00               	movlw	0
  2111  0070B0  6E2F               	movwf	tftstDrawText@i^0,c
  2112  0070B2  EFC8  F038         	goto	l2316
  2113  0070B6                     l2292:
  2114                           
  2115                           ;./tftst.h: 148:         if (((cursor_x + size * 5) > TFTST_WIDTH)) {
  2116  0070B6  5029               	movf	tftstDrawText@size^0,w,c
  2117  0070B8  0D05               	mullw	5
  2118  0070BA  CFF3 F02A          	movff	prodl,??_tftstDrawText
  2119  0070BE  CFF4 F02B          	movff	prodh,??_tftstDrawText+1
  2120  0070C2  5032               	movf	tftstDrawText@cursor_x^0,w,c
  2121  0070C4  262A               	addwf	??_tftstDrawText^0,f,c
  2122  0070C6  0E00               	movlw	0
  2123  0070C8  222B               	addwfc	(??_tftstDrawText+1)^0,f,c
  2124  0070CA  BE2B               	btfsc	(??_tftstDrawText+1)^0,7,c
  2125  0070CC  EF71  F038         	goto	u1441
  2126  0070D0  502B               	movf	(??_tftstDrawText+1)^0,w,c
  2127  0070D2  E109               	bnz	u1440
  2128  0070D4  0EA1               	movlw	161
  2129  0070D6  5C2A               	subwf	??_tftstDrawText^0,w,c
  2130  0070D8  A0D8               	btfss	status,0,c
  2131  0070DA  EF71  F038         	goto	u1441
  2132  0070DE  EF73  F038         	goto	u1440
  2133  0070E2                     u1441:
  2134  0070E2  EF9B  F038         	goto	l2306
  2135  0070E6                     u1440:
  2136  0070E6                     
  2137                           ;./tftst.h: 149:             cursor_x = 0;
  2138  0070E6  0E00               	movlw	0
  2139  0070E8  6E32               	movwf	tftstDrawText@cursor_x^0,c
  2140  0070EA                     
  2141                           ;./tftst.h: 150:             cursor_y = cursor_y + size * 7 + 3;
  2142  0070EA  5029               	movf	tftstDrawText@size^0,w,c
  2143  0070EC  0D07               	mullw	7
  2144  0070EE  50F3               	movf	243,w,c
  2145  0070F0  2431               	addwf	tftstDrawText@cursor_y^0,w,c
  2146  0070F2  0F03               	addlw	3
  2147  0070F4  6E31               	movwf	tftstDrawText@cursor_y^0,c
  2148  0070F6                     
  2149                           ;./tftst.h: 151:             if (cursor_y > TFTST_HEIGHT) cursor_y = TFTST_HEIGHT;
  2150  0070F6  0E80               	movlw	128
  2151  0070F8  6431               	cpfsgt	tftstDrawText@cursor_y^0,c
  2152  0070FA  EF81  F038         	goto	u1451
  2153  0070FE  EF83  F038         	goto	u1450
  2154  007102                     u1451:
  2155  007102  EF85  F038         	goto	l2302
  2156  007106                     u1450:
  2157  007106  0E80               	movlw	128
  2158  007108  6E31               	movwf	tftstDrawText@cursor_y^0,c
  2159  00710A                     l2302:
  2160                           
  2161                           ;./tftst.h: 152:             if (_text[i] == 0x20) goto _skip;
  2162  00710A  502F               	movf	tftstDrawText@i^0,w,c
  2163  00710C  2423               	addwf	tftstDrawText@_text^0,w,c
  2164  00710E  6E2A               	movwf	??_tftstDrawText^0,c
  2165  007110  5030               	movf	(tftstDrawText@i+1)^0,w,c
  2166  007112  2024               	addwfc	(tftstDrawText@_text+1)^0,w,c
  2167  007114  6E2B               	movwf	(??_tftstDrawText+1)^0,c
  2168  007116  C02A  FFF6         	movff	??_tftstDrawText,tblptrl
  2169  00711A  C02B  FFF7         	movff	??_tftstDrawText+1,tblptrh
  2170  00711E                     	if	0	;tblptru may be non-zero
  2171  00711E                     	endif
  2172  00711E                     	if	0	;tblptru may be non-zero
  2173  00711E                     	endif
  2174  00711E  0008               	tblrd		*
  2175  007120  50F5               	movf	tablat,w,c
  2176  007122  0A20               	xorlw	32
  2177  007124  A4D8               	btfss	status,2,c
  2178  007126  EF97  F038         	goto	u1461
  2179  00712A  EF99  F038         	goto	u1460
  2180  00712E                     u1461:
  2181  00712E  EF9B  F038         	goto	l2306
  2182  007132                     u1460:
  2183  007132  EFC6  F038         	goto	l2314
  2184  007136                     l2306:
  2185                           
  2186                           ;./tftst.h: 154:         tftstDrawChar(cursor_x, cursor_y, _text[i], color, bg, size);
  2187  007136  C031  F011         	movff	tftstDrawText@cursor_y,tftstDrawChar@y
  2188  00713A  502F               	movf	tftstDrawText@i^0,w,c
  2189  00713C  2423               	addwf	tftstDrawText@_text^0,w,c
  2190  00713E  6E2A               	movwf	??_tftstDrawText^0,c
  2191  007140  5030               	movf	(tftstDrawText@i+1)^0,w,c
  2192  007142  2024               	addwfc	(tftstDrawText@_text+1)^0,w,c
  2193  007144  6E2B               	movwf	(??_tftstDrawText+1)^0,c
  2194  007146  C02A  FFF6         	movff	??_tftstDrawText,tblptrl
  2195  00714A  C02B  FFF7         	movff	??_tftstDrawText+1,tblptrh
  2196  00714E                     	if	0	;tblptru may be non-zero
  2197  00714E                     	endif
  2198  00714E                     	if	0	;tblptru may be non-zero
  2199  00714E                     	endif
  2200  00714E  0008               	tblrd		*
  2201  007150  CFF5 F012          	movff	tablat,tftstDrawChar@c
  2202  007154  C025  F013         	movff	tftstDrawText@color,tftstDrawChar@color
  2203  007158  C026  F014         	movff	tftstDrawText@color+1,tftstDrawChar@color+1
  2204  00715C  C027  F015         	movff	tftstDrawText@bg,tftstDrawChar@bg
  2205  007160  C028  F016         	movff	tftstDrawText@bg+1,tftstDrawChar@bg+1
  2206  007164  C029  F017         	movff	tftstDrawText@size,tftstDrawChar@size
  2207  007168  5032               	movf	tftstDrawText@cursor_x^0,w,c
  2208  00716A  EC24  F03B         	call	_tftstDrawChar
  2209  00716E                     
  2210                           ;./tftst.h: 155:         cursor_x = cursor_x + size * 6;
  2211  00716E  5029               	movf	tftstDrawText@size^0,w,c
  2212  007170  0D06               	mullw	6
  2213  007172  50F3               	movf	243,w,c
  2214  007174  2432               	addwf	tftstDrawText@cursor_x^0,w,c
  2215  007176  6E32               	movwf	tftstDrawText@cursor_x^0,c
  2216  007178                     
  2217                           ;./tftst.h: 156:         if (cursor_x > TFTST_WIDTH) cursor_x = TFTST_WIDTH;
  2218  007178  0EA0               	movlw	160
  2219  00717A  6432               	cpfsgt	tftstDrawText@cursor_x^0,c
  2220  00717C  EFC2  F038         	goto	u1471
  2221  007180  EFC4  F038         	goto	u1470
  2222  007184                     u1471:
  2223  007184  EFC6  F038         	goto	l2314
  2224  007188                     u1470:
  2225  007188  0EA0               	movlw	160
  2226  00718A  6E32               	movwf	tftstDrawText@cursor_x^0,c
  2227  00718C                     l2314:
  2228                           
  2229                           ;./tftst.h: 159:     }
  2230  00718C  4A2F               	infsnz	tftstDrawText@i^0,f,c
  2231  00718E  2A30               	incf	(tftstDrawText@i+1)^0,f,c
  2232  007190                     l2316:
  2233  007190  502C               	movf	tftstDrawText@textsize^0,w,c
  2234  007192  5C2F               	subwf	tftstDrawText@i^0,w,c
  2235  007194  502D               	movf	(tftstDrawText@textsize+1)^0,w,c
  2236  007196  5830               	subwfb	(tftstDrawText@i+1)^0,w,c
  2237  007198  A0D8               	btfss	status,0,c
  2238  00719A  EFD1  F038         	goto	u1481
  2239  00719E  EFD3  F038         	goto	u1480
  2240  0071A2                     u1481:
  2241  0071A2  EF5B  F038         	goto	l2292
  2242  0071A6                     u1480:
  2243  0071A6  0012               	return		;funcret
  2244  0071A8                     __end_of_tftstDrawText:
  2245                           	callstack 0
  2246                           
  2247 ;; *************** function _tftstDrawChar *****************
  2248 ;; Defined at:
  2249 ;;		line 117 in file "./tftst.h"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  x               1    wreg     unsigned char 
  2252 ;;  y               1   16[COMRAM] unsigned char 
  2253 ;;  c               1   17[COMRAM] unsigned char 
  2254 ;;  color           2   18[COMRAM] unsigned short 
  2255 ;;  bg              2   20[COMRAM] unsigned short 
  2256 ;;  size            1   22[COMRAM] unsigned char 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  x               1   30[COMRAM] unsigned char 
  2259 ;;  line            1   29[COMRAM] unsigned char 
  2260 ;;  i               1   32[COMRAM] char 
  2261 ;;  j               1   31[COMRAM] char 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2271 ;;      Params:         7       0       0       0       0       0       0
  2272 ;;      Locals:         4       0       0       0       0       0       0
  2273 ;;      Temps:          6       0       0       0       0       0       0
  2274 ;;      Totals:        17       0       0       0       0       0       0
  2275 ;;Total ram usage:       17 bytes
  2276 ;; Hardware stack levels used: 1
  2277 ;; Hardware stack levels required when called: 4
  2278 ;; This function calls:
  2279 ;;		_tftstDrawPixel
  2280 ;;		_tftstFillRect
  2281 ;; This function is called by:
  2282 ;;		_tftstDrawText
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text6
  2287  007648                     __ptext6:
  2288                           	callstack 0
  2289  007648                     _tftstDrawChar:
  2290                           	callstack 24
  2291                           
  2292                           ;incstack = 0
  2293                           ;tftstDrawChar@x stored from wreg
  2294  007648  6E1F               	movwf	tftstDrawChar@x^0,c
  2295  00764A                     
  2296                           ;./tftst.h: 118:     int8_t i, j;;./tftst.h: 119:     if ((x >= TFTST_WIDTH) || (y >= TF
      +                          TST_HEIGHT))
  2297  00764A  0EA0               	movlw	160
  2298  00764C  601F               	cpfslt	tftstDrawChar@x^0,c
  2299  00764E  EF2B  F03B         	goto	u1271
  2300  007652  EF2D  F03B         	goto	u1270
  2301  007656                     u1271:
  2302  007656  EF22  F03C         	goto	l251
  2303  00765A                     u1270:
  2304  00765A  0E7F               	movlw	127
  2305  00765C  6411               	cpfsgt	tftstDrawChar@y^0,c
  2306  00765E  EF33  F03B         	goto	u1281
  2307  007662  EF35  F03B         	goto	u1280
  2308  007666                     u1281:
  2309  007666  EF37  F03B         	goto	l2176
  2310  00766A                     u1280:
  2311  00766A  EF22  F03C         	goto	l251
  2312  00766E                     l2176:
  2313                           
  2314                           ;./tftst.h: 121:     if (size < 1) size = 1;
  2315  00766E  5017               	movf	tftstDrawChar@size^0,w,c
  2316  007670  A4D8               	btfss	status,2,c
  2317  007672  EF3D  F03B         	goto	u1291
  2318  007676  EF3F  F03B         	goto	u1290
  2319  00767A                     u1291:
  2320  00767A  EF41  F03B         	goto	l2180
  2321  00767E                     u1290:
  2322  00767E  0E01               	movlw	1
  2323  007680  6E17               	movwf	tftstDrawChar@size^0,c
  2324  007682                     l2180:
  2325                           
  2326                           ;./tftst.h: 122:     if ((c < ' ') || (c > '~'))
  2327  007682  0E1F               	movlw	31
  2328  007684  6412               	cpfsgt	tftstDrawChar@c^0,c
  2329  007686  EF47  F03B         	goto	u1301
  2330  00768A  EF49  F03B         	goto	u1300
  2331  00768E                     u1301:
  2332  00768E  EF51  F03B         	goto	l2184
  2333  007692                     u1300:
  2334  007692  0E7E               	movlw	126
  2335  007694  6412               	cpfsgt	tftstDrawChar@c^0,c
  2336  007696  EF4F  F03B         	goto	u1311
  2337  00769A  EF51  F03B         	goto	u1310
  2338  00769E                     u1311:
  2339  00769E  EF53  F03B         	goto	l253
  2340  0076A2                     u1310:
  2341  0076A2                     l2184:
  2342                           
  2343                           ;./tftst.h: 123:         c = '?';
  2344  0076A2  0E3F               	movlw	63
  2345  0076A4  6E12               	movwf	tftstDrawChar@c^0,c
  2346  0076A6                     l253:
  2347                           
  2348                           ;./tftst.h: 124:     for (i = 0; i < 5; i++) {
  2349  0076A6  0E00               	movlw	0
  2350  0076A8  6E21               	movwf	tftstDrawChar@i^0,c
  2351  0076AA                     l2190:
  2352                           
  2353                           ;./tftst.h: 125:         uint8_t line;;./tftst.h: 126:         if (c < 'S')
  2354  0076AA  0E53               	movlw	83
  2355  0076AC  6012               	cpfslt	tftstDrawChar@c^0,c
  2356  0076AE  EF5B  F03B         	goto	u1321
  2357  0076B2  EF5D  F03B         	goto	u1320
  2358  0076B6                     u1321:
  2359  0076B6  EF81  F03B         	goto	l2194
  2360  0076BA                     u1320:
  2361  0076BA                     
  2362                           ;./tftst.h: 127:             line = Font[(c - 32)*5 + i];
  2363  0076BA  0E60               	movlw	96
  2364  0076BC  6E18               	movwf	??_tftstDrawChar^0,c
  2365  0076BE  0EFF               	movlw	255
  2366  0076C0  6E19               	movwf	(??_tftstDrawChar+1)^0,c
  2367  0076C2  C021  F01A         	movff	tftstDrawChar@i,??_tftstDrawChar+2
  2368  0076C6  6A1B               	clrf	(??_tftstDrawChar+3)^0,c
  2369  0076C8  BE1A               	btfsc	(??_tftstDrawChar+2)^0,7,c
  2370  0076CA  061B               	decf	(??_tftstDrawChar+3)^0,f,c
  2371  0076CC  5012               	movf	tftstDrawChar@c^0,w,c
  2372  0076CE  0D05               	mullw	5
  2373  0076D0  0E05               	movlw	low _Font
  2374  0076D2  6E1C               	movwf	(??_tftstDrawChar+4)^0,c
  2375  0076D4  0E7E               	movlw	high _Font
  2376  0076D6  6E1D               	movwf	(??_tftstDrawChar+5)^0,c
  2377  0076D8  50F3               	movf	243,w,c
  2378  0076DA  261C               	addwf	(??_tftstDrawChar+4)^0,f,c
  2379  0076DC  50F4               	movf	244,w,c
  2380  0076DE  221D               	addwfc	(??_tftstDrawChar+5)^0,f,c
  2381  0076E0  501A               	movf	(??_tftstDrawChar+2)^0,w,c
  2382  0076E2  261C               	addwf	(??_tftstDrawChar+4)^0,f,c
  2383  0076E4  501B               	movf	(??_tftstDrawChar+3)^0,w,c
  2384  0076E6  221D               	addwfc	(??_tftstDrawChar+5)^0,f,c
  2385  0076E8  5018               	movf	??_tftstDrawChar^0,w,c
  2386  0076EA  261C               	addwf	(??_tftstDrawChar+4)^0,f,c
  2387  0076EC  5019               	movf	(??_tftstDrawChar+1)^0,w,c
  2388  0076EE  221D               	addwfc	(??_tftstDrawChar+5)^0,f,c
  2389  0076F0  C01C  FFF6         	movff	??_tftstDrawChar+4,tblptrl
  2390  0076F4  C01D  FFF7         	movff	??_tftstDrawChar+5,tblptrh
  2391  0076F8                     	if	0	;tblptru may be non-zero
  2392  0076F8                     	endif
  2393  0076F8                     	if	0	;tblptru may be non-zero
  2394  0076F8                     	endif
  2395  0076F8  0008               	tblrd		*
  2396  0076FA  CFF5 F01E          	movff	tablat,tftstDrawChar@line
  2397  0076FE  EFA3  F03B         	goto	l2196
  2398  007702                     l2194:
  2399                           
  2400                           ;./tftst.h: 129:             line = Font2[(c - 'S')*5 + i];
  2401  007702  0E61               	movlw	97
  2402  007704  6E18               	movwf	??_tftstDrawChar^0,c
  2403  007706  0EFE               	movlw	254
  2404  007708  6E19               	movwf	(??_tftstDrawChar+1)^0,c
  2405  00770A  C021  F01A         	movff	tftstDrawChar@i,??_tftstDrawChar+2
  2406  00770E  6A1B               	clrf	(??_tftstDrawChar+3)^0,c
  2407  007710  BE1A               	btfsc	(??_tftstDrawChar+2)^0,7,c
  2408  007712  061B               	decf	(??_tftstDrawChar+3)^0,f,c
  2409  007714  5012               	movf	tftstDrawChar@c^0,w,c
  2410  007716  0D05               	mullw	5
  2411  007718  0E04               	movlw	low _Font2
  2412  00771A  6E1C               	movwf	(??_tftstDrawChar+4)^0,c
  2413  00771C  0E7F               	movlw	high _Font2
  2414  00771E  6E1D               	movwf	(??_tftstDrawChar+5)^0,c
  2415  007720  50F3               	movf	243,w,c
  2416  007722  261C               	addwf	(??_tftstDrawChar+4)^0,f,c
  2417  007724  50F4               	movf	244,w,c
  2418  007726  221D               	addwfc	(??_tftstDrawChar+5)^0,f,c
  2419  007728  501A               	movf	(??_tftstDrawChar+2)^0,w,c
  2420  00772A  261C               	addwf	(??_tftstDrawChar+4)^0,f,c
  2421  00772C  501B               	movf	(??_tftstDrawChar+3)^0,w,c
  2422  00772E  221D               	addwfc	(??_tftstDrawChar+5)^0,f,c
  2423  007730  5018               	movf	??_tftstDrawChar^0,w,c
  2424  007732  261C               	addwf	(??_tftstDrawChar+4)^0,f,c
  2425  007734  5019               	movf	(??_tftstDrawChar+1)^0,w,c
  2426  007736  221D               	addwfc	(??_tftstDrawChar+5)^0,f,c
  2427  007738  C01C  FFF6         	movff	??_tftstDrawChar+4,tblptrl
  2428  00773C  C01D  FFF7         	movff	??_tftstDrawChar+5,tblptrh
  2429  007740                     	if	0	;tblptru may be non-zero
  2430  007740                     	endif
  2431  007740                     	if	0	;tblptru may be non-zero
  2432  007740                     	endif
  2433  007740  0008               	tblrd		*
  2434  007742  CFF5 F01E          	movff	tablat,tftstDrawChar@line
  2435  007746                     l2196:
  2436                           
  2437                           ;./tftst.h: 130:         for (j = 0; j < 7; j++, line >>= 1) {
  2438  007746  0E00               	movlw	0
  2439  007748  6E20               	movwf	tftstDrawChar@j^0,c
  2440  00774A                     l260:
  2441                           
  2442                           ;./tftst.h: 131:             if (line & 0x01) {
  2443  00774A  A01E               	btfss	tftstDrawChar@line^0,0,c
  2444  00774C  EFAA  F03B         	goto	u1331
  2445  007750  EFAC  F03B         	goto	u1330
  2446  007754                     u1331:
  2447  007754  EFD6  F03B         	goto	l2208
  2448  007758                     u1330:
  2449  007758                     
  2450                           ;./tftst.h: 132:                 if (size == 1) tftstDrawPixel(x + i, y + j, color);
  2451  007758  0417               	decf	tftstDrawChar@size^0,w,c
  2452  00775A  A4D8               	btfss	status,2,c
  2453  00775C  EFB2  F03B         	goto	u1341
  2454  007760  EFB4  F03B         	goto	u1340
  2455  007764                     u1341:
  2456  007764  EFC1  F03B         	goto	l2206
  2457  007768                     u1340:
  2458  007768  5020               	movf	tftstDrawChar@j^0,w,c
  2459  00776A  2411               	addwf	tftstDrawChar@y^0,w,c
  2460  00776C  6E07               	movwf	tftstDrawPixel@y^0,c
  2461  00776E  C013  F008         	movff	tftstDrawChar@color,tftstDrawPixel@color
  2462  007772  C014  F009         	movff	tftstDrawChar@color+1,tftstDrawPixel@color+1
  2463  007776  5021               	movf	tftstDrawChar@i^0,w,c
  2464  007778  241F               	addwf	tftstDrawChar@x^0,w,c
  2465  00777A  EC2F  F035         	call	_tftstDrawPixel
  2466  00777E  EF0A  F03C         	goto	l2216
  2467  007782                     l2206:
  2468  007782  5020               	movf	tftstDrawChar@j^0,w,c
  2469  007784  0217               	mulwf	tftstDrawChar@size^0,c
  2470  007786  50F3               	movf	243,w,c
  2471  007788  2411               	addwf	tftstDrawChar@y^0,w,c
  2472  00778A  6E07               	movwf	tftstFillRect@y^0,c
  2473  00778C  C017  F008         	movff	tftstDrawChar@size,tftstFillRect@w
  2474  007790  C017  F009         	movff	tftstDrawChar@size,tftstFillRect@h
  2475  007794  C013  F00A         	movff	tftstDrawChar@color,tftstFillRect@color
  2476  007798  C014  F00B         	movff	tftstDrawChar@color+1,tftstFillRect@color+1
  2477  00779C  5021               	movf	tftstDrawChar@i^0,w,c
  2478  00779E  0217               	mulwf	tftstDrawChar@size^0,c
  2479  0077A0  50F3               	movf	243,w,c
  2480  0077A2  241F               	addwf	tftstDrawChar@x^0,w,c
  2481  0077A4  EC81  F036         	call	_tftstFillRect
  2482  0077A8  EF0A  F03C         	goto	l2216
  2483  0077AC                     l2208:
  2484  0077AC  5013               	movf	tftstDrawChar@color^0,w,c
  2485  0077AE  1815               	xorwf	tftstDrawChar@bg^0,w,c
  2486  0077B0  E109               	bnz	u1350
  2487  0077B2  5014               	movf	(tftstDrawChar@color+1)^0,w,c
  2488  0077B4  1816               	xorwf	(tftstDrawChar@bg+1)^0,w,c
  2489  0077B6  B4D8               	btfsc	status,2,c
  2490  0077B8  EFE0  F03B         	goto	u1351
  2491  0077BC  EFE2  F03B         	goto	u1350
  2492  0077C0                     u1351:
  2493  0077C0  EF0A  F03C         	goto	l2216
  2494  0077C4                     u1350:
  2495  0077C4                     
  2496                           ;./tftst.h: 135:                 if (size == 1) tftstDrawPixel(x + i, y + j, bg);
  2497  0077C4  0417               	decf	tftstDrawChar@size^0,w,c
  2498  0077C6  A4D8               	btfss	status,2,c
  2499  0077C8  EFE8  F03B         	goto	u1361
  2500  0077CC  EFEA  F03B         	goto	u1360
  2501  0077D0                     u1361:
  2502  0077D0  EFF7  F03B         	goto	l2214
  2503  0077D4                     u1360:
  2504  0077D4  5020               	movf	tftstDrawChar@j^0,w,c
  2505  0077D6  2411               	addwf	tftstDrawChar@y^0,w,c
  2506  0077D8  6E07               	movwf	tftstDrawPixel@y^0,c
  2507  0077DA  C015  F008         	movff	tftstDrawChar@bg,tftstDrawPixel@color
  2508  0077DE  C016  F009         	movff	tftstDrawChar@bg+1,tftstDrawPixel@color+1
  2509  0077E2  5021               	movf	tftstDrawChar@i^0,w,c
  2510  0077E4  241F               	addwf	tftstDrawChar@x^0,w,c
  2511  0077E6  EC2F  F035         	call	_tftstDrawPixel
  2512  0077EA  EF0A  F03C         	goto	l2216
  2513  0077EE                     l2214:
  2514  0077EE  5020               	movf	tftstDrawChar@j^0,w,c
  2515  0077F0  0217               	mulwf	tftstDrawChar@size^0,c
  2516  0077F2  50F3               	movf	243,w,c
  2517  0077F4  2411               	addwf	tftstDrawChar@y^0,w,c
  2518  0077F6  6E07               	movwf	tftstFillRect@y^0,c
  2519  0077F8  C017  F008         	movff	tftstDrawChar@size,tftstFillRect@w
  2520  0077FC  C017  F009         	movff	tftstDrawChar@size,tftstFillRect@h
  2521  007800  C015  F00A         	movff	tftstDrawChar@bg,tftstFillRect@color
  2522  007804  C016  F00B         	movff	tftstDrawChar@bg+1,tftstFillRect@color+1
  2523  007808  5021               	movf	tftstDrawChar@i^0,w,c
  2524  00780A  0217               	mulwf	tftstDrawChar@size^0,c
  2525  00780C  50F3               	movf	243,w,c
  2526  00780E  241F               	addwf	tftstDrawChar@x^0,w,c
  2527  007810  EC81  F036         	call	_tftstFillRect
  2528  007814                     l2216:
  2529                           
  2530                           ;./tftst.h: 138:         }
  2531  007814  2A20               	incf	tftstDrawChar@j^0,f,c
  2532  007816  90D8               	bcf	status,0,c
  2533  007818  321E               	rrcf	tftstDrawChar@line^0,f,c
  2534  00781A  5020               	movf	tftstDrawChar@j^0,w,c
  2535  00781C  0A80               	xorlw	128
  2536  00781E  0F79               	addlw	-135
  2537  007820  A0D8               	btfss	status,0,c
  2538  007822  EF15  F03C         	goto	u1371
  2539  007826  EF17  F03C         	goto	u1370
  2540  00782A                     u1371:
  2541  00782A  EFA5  F03B         	goto	l260
  2542  00782E                     u1370:
  2543  00782E                     
  2544                           ;./tftst.h: 139:     }
  2545  00782E  2A21               	incf	tftstDrawChar@i^0,f,c
  2546  007830  5021               	movf	tftstDrawChar@i^0,w,c
  2547  007832  0A80               	xorlw	128
  2548  007834  0F7B               	addlw	-133
  2549  007836  A0D8               	btfss	status,0,c
  2550  007838  EF20  F03C         	goto	u1381
  2551  00783C  EF22  F03C         	goto	u1380
  2552  007840                     u1381:
  2553  007840  EF55  F03B         	goto	l2190
  2554  007844                     u1380:
  2555  007844                     l251:
  2556  007844  0012               	return		;funcret
  2557  007846                     __end_of_tftstDrawChar:
  2558                           	callstack 0
  2559                           
  2560 ;; *************** function _tftstFillRect *****************
  2561 ;; Defined at:
  2562 ;;		line 101 in file "./tftst.h"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  x               1    wreg     unsigned char 
  2565 ;;  y               1    6[COMRAM] unsigned char 
  2566 ;;  w               1    7[COMRAM] unsigned char 
  2567 ;;  h               1    8[COMRAM] unsigned char 
  2568 ;;  color           2    9[COMRAM] unsigned short 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  x               1   15[COMRAM] unsigned char 
  2571 ;;  j               1   14[COMRAM] unsigned char 
  2572 ;;  i               1   13[COMRAM] unsigned char 
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		wreg, status,2, status,0, cstack
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2582 ;;      Params:         5       0       0       0       0       0       0
  2583 ;;      Locals:         3       0       0       0       0       0       0
  2584 ;;      Temps:          2       0       0       0       0       0       0
  2585 ;;      Totals:        10       0       0       0       0       0       0
  2586 ;;Total ram usage:       10 bytes
  2587 ;; Hardware stack levels used: 1
  2588 ;; Hardware stack levels required when called: 3
  2589 ;; This function calls:
  2590 ;;		_tftstSetWindow
  2591 ;;		_tftstWriteColor
  2592 ;; This function is called by:
  2593 ;;		_tftstDrawChar
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           	psect	text7
  2598  006D02                     __ptext7:
  2599                           	callstack 0
  2600  006D02                     _tftstFillRect:
  2601                           	callstack 24
  2602                           
  2603                           ;incstack = 0
  2604                           ;tftstFillRect@x stored from wreg
  2605  006D02  6E10               	movwf	tftstFillRect@x^0,c
  2606  006D04                     
  2607                           ;./tftst.h: 102:     tftstSetWindow(x, x + w - 1, y, y + h - 1);
  2608  006D04  5010               	movf	tftstFillRect@x^0,w,c
  2609  006D06  2408               	addwf	tftstFillRect@w^0,w,c
  2610  006D08  6E0C               	movwf	??_tftstFillRect^0,c
  2611  006D0A  040C               	decf	??_tftstFillRect^0,w,c
  2612  006D0C  6E03               	movwf	tftstSetWindow@xEnd^0,c
  2613  006D0E  C007  F004         	movff	tftstFillRect@y,tftstSetWindow@yStart
  2614  006D12  5007               	movf	tftstFillRect@y^0,w,c
  2615  006D14  2409               	addwf	tftstFillRect@h^0,w,c
  2616  006D16  6E0D               	movwf	(??_tftstFillRect+1)^0,c
  2617  006D18  040D               	decf	(??_tftstFillRect+1)^0,w,c
  2618  006D1A  6E05               	movwf	tftstSetWindow@yEnd^0,c
  2619  006D1C  5010               	movf	tftstFillRect@x^0,w,c
  2620  006D1E  ECBA  F035         	call	_tftstSetWindow
  2621  006D22                     
  2622                           ;./tftst.h: 103:     for(uint8_t i = 0; i < w ; i++){
  2623  006D22  0E00               	movlw	0
  2624  006D24  6E0E               	movwf	tftstFillRect@i^0,c
  2625  006D26  EFAA  F036         	goto	l2128
  2626  006D2A                     l2118:
  2627                           
  2628                           ;./tftst.h: 104:         for(uint8_t j = 0; j < h ; j++){
  2629  006D2A  0E00               	movlw	0
  2630  006D2C  6E0F               	movwf	tftstFillRect@j^0,c
  2631  006D2E  EFA0  F036         	goto	l2124
  2632  006D32                     l2120:
  2633                           
  2634                           ;./tftst.h: 105:             tftstWriteColor(color);
  2635  006D32  C00A  F003         	movff	tftstFillRect@color,tftstWriteColor@color
  2636  006D36  C00B  F004         	movff	tftstFillRect@color+1,tftstWriteColor@color+1
  2637  006D3A  ECEE  F034         	call	_tftstWriteColor	;wreg free
  2638  006D3E                     
  2639                           ;./tftst.h: 106:         }
  2640  006D3E  2A0F               	incf	tftstFillRect@j^0,f,c
  2641  006D40                     l2124:
  2642  006D40  5009               	movf	tftstFillRect@h^0,w,c
  2643  006D42  5C0F               	subwf	tftstFillRect@j^0,w,c
  2644  006D44  A0D8               	btfss	status,0,c
  2645  006D46  EFA7  F036         	goto	u1211
  2646  006D4A  EFA9  F036         	goto	u1210
  2647  006D4E                     u1211:
  2648  006D4E  EF99  F036         	goto	l2120
  2649  006D52                     u1210:
  2650  006D52                     
  2651                           ;./tftst.h: 107:     }
  2652  006D52  2A0E               	incf	tftstFillRect@i^0,f,c
  2653  006D54                     l2128:
  2654  006D54  5008               	movf	tftstFillRect@w^0,w,c
  2655  006D56  5C0E               	subwf	tftstFillRect@i^0,w,c
  2656  006D58  A0D8               	btfss	status,0,c
  2657  006D5A  EFB1  F036         	goto	u1221
  2658  006D5E  EFB3  F036         	goto	u1220
  2659  006D62                     u1221:
  2660  006D62  EF95  F036         	goto	l2118
  2661  006D66                     u1220:
  2662  006D66  0012               	return		;funcret
  2663  006D68                     __end_of_tftstFillRect:
  2664                           	callstack 0
  2665                           
  2666 ;; *************** function _tftstDrawPixel *****************
  2667 ;; Defined at:
  2668 ;;		line 80 in file "./tftst.h"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  x               1    wreg     unsigned char 
  2671 ;;  y               1    6[COMRAM] unsigned char 
  2672 ;;  color           2    7[COMRAM] unsigned short 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  x               1    9[COMRAM] unsigned char 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, status,0, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2684 ;;      Params:         3       0       0       0       0       0       0
  2685 ;;      Locals:         1       0       0       0       0       0       0
  2686 ;;      Temps:          0       0       0       0       0       0       0
  2687 ;;      Totals:         4       0       0       0       0       0       0
  2688 ;;Total ram usage:        4 bytes
  2689 ;; Hardware stack levels used: 1
  2690 ;; Hardware stack levels required when called: 3
  2691 ;; This function calls:
  2692 ;;		_tftstSetWindow
  2693 ;;		_tftstWriteColor
  2694 ;; This function is called by:
  2695 ;;		_tftstDrawChar
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text8
  2700  006A5E                     __ptext8:
  2701                           	callstack 0
  2702  006A5E                     _tftstDrawPixel:
  2703                           	callstack 24
  2704                           
  2705                           ;incstack = 0
  2706                           ;tftstDrawPixel@x stored from wreg
  2707  006A5E  6E0A               	movwf	tftstDrawPixel@x^0,c
  2708  006A60                     
  2709                           ;./tftst.h: 81:     tftstSetWindow(x, x + 1, y, y + 1);
  2710  006A60  280A               	incf	tftstDrawPixel@x^0,w,c
  2711  006A62  6E03               	movwf	tftstSetWindow@xEnd^0,c
  2712  006A64  C007  F004         	movff	tftstDrawPixel@y,tftstSetWindow@yStart
  2713  006A68  2807               	incf	tftstDrawPixel@y^0,w,c
  2714  006A6A  6E05               	movwf	tftstSetWindow@yEnd^0,c
  2715  006A6C  500A               	movf	tftstDrawPixel@x^0,w,c
  2716  006A6E  ECBA  F035         	call	_tftstSetWindow
  2717                           
  2718                           ;./tftst.h: 82:     tftstWriteColor(color);
  2719  006A72  C008  F003         	movff	tftstDrawPixel@color,tftstWriteColor@color
  2720  006A76  C009  F004         	movff	tftstDrawPixel@color+1,tftstWriteColor@color+1
  2721  006A7A  ECEE  F034         	call	_tftstWriteColor	;wreg free
  2722  006A7E  0012               	return		;funcret
  2723  006A80                     __end_of_tftstDrawPixel:
  2724                           	callstack 0
  2725                           
  2726 ;; *************** function _tftstDrawHorizontalLine *****************
  2727 ;; Defined at:
  2728 ;;		line 85 in file "./tftst.h"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  x               1    wreg     unsigned char 
  2731 ;;  y               1    6[COMRAM] unsigned char 
  2732 ;;  width           1    7[COMRAM] unsigned char 
  2733 ;;  color           2    8[COMRAM] unsigned short 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  x               1   11[COMRAM] unsigned char 
  2736 ;;  w               1   10[COMRAM] unsigned char 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      void 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2, status,0, cstack
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2746 ;;      Params:         4       0       0       0       0       0       0
  2747 ;;      Locals:         2       0       0       0       0       0       0
  2748 ;;      Temps:          0       0       0       0       0       0       0
  2749 ;;      Totals:         6       0       0       0       0       0       0
  2750 ;;Total ram usage:        6 bytes
  2751 ;; Hardware stack levels used: 1
  2752 ;; Hardware stack levels required when called: 3
  2753 ;; This function calls:
  2754 ;;		_tftstSetWindow
  2755 ;;		_tftstWriteColor
  2756 ;; This function is called by:
  2757 ;;		_demoAnimated
  2758 ;;		_tftstDrawRect
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text9
  2763  006AB2                     __ptext9:
  2764                           	callstack 0
  2765  006AB2                     _tftstDrawHorizontalLine:
  2766                           	callstack 26
  2767                           
  2768                           ;incstack = 0
  2769                           ;tftstDrawHorizontalLine@x stored from wreg
  2770  006AB2  6E0C               	movwf	tftstDrawHorizontalLine@x^0,c
  2771  006AB4                     
  2772                           ;./tftst.h: 86:     tftstSetWindow(x, x + width, y, y);
  2773  006AB4  500C               	movf	tftstDrawHorizontalLine@x^0,w,c
  2774  006AB6  2408               	addwf	tftstDrawHorizontalLine@width^0,w,c
  2775  006AB8  6E03               	movwf	tftstSetWindow@xEnd^0,c
  2776  006ABA  C007  F004         	movff	tftstDrawHorizontalLine@y,tftstSetWindow@yStart
  2777  006ABE  C007  F005         	movff	tftstDrawHorizontalLine@y,tftstSetWindow@yEnd
  2778  006AC2  500C               	movf	tftstDrawHorizontalLine@x^0,w,c
  2779  006AC4  ECBA  F035         	call	_tftstSetWindow
  2780  006AC8                     
  2781                           ;./tftst.h: 87:     uint8_t w = width;
  2782  006AC8  C008  F00B         	movff	tftstDrawHorizontalLine@width,tftstDrawHorizontalLine@w
  2783                           
  2784                           ;./tftst.h: 88:     while (w--) {
  2785  006ACC  EF6E  F035         	goto	l2274
  2786  006AD0                     l2272:
  2787                           
  2788                           ;./tftst.h: 89:         tftstWriteColor(color);
  2789  006AD0  C009  F003         	movff	tftstDrawHorizontalLine@color,tftstWriteColor@color
  2790  006AD4  C00A  F004         	movff	tftstDrawHorizontalLine@color+1,tftstWriteColor@color+1
  2791  006AD8  ECEE  F034         	call	_tftstWriteColor	;wreg free
  2792  006ADC                     l2274:
  2793                           
  2794                           ;./tftst.h: 88:     while (w--) {
  2795  006ADC  060B               	decf	tftstDrawHorizontalLine@w^0,f,c
  2796  006ADE  280B               	incf	tftstDrawHorizontalLine@w^0,w,c
  2797  006AE0  A4D8               	btfss	status,2,c
  2798  006AE2  EF75  F035         	goto	u1421
  2799  006AE6  EF77  F035         	goto	u1420
  2800  006AEA                     u1421:
  2801  006AEA  EF68  F035         	goto	l2272
  2802  006AEE                     u1420:
  2803  006AEE  0012               	return		;funcret
  2804  006AF0                     __end_of_tftstDrawHorizontalLine:
  2805                           	callstack 0
  2806                           
  2807 ;; *************** function _tftstWriteColor *****************
  2808 ;; Defined at:
  2809 ;;		line 67 in file "./tftst.h"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  color           2    2[COMRAM] unsigned short 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;		None
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg, status,2, status,0, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2823 ;;      Params:         2       0       0       0       0       0       0
  2824 ;;      Locals:         0       0       0       0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0       0       0
  2826 ;;      Totals:         2       0       0       0       0       0       0
  2827 ;;Total ram usage:        2 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; Hardware stack levels required when called: 2
  2830 ;; This function calls:
  2831 ;;		_tftstWriteData
  2832 ;; This function is called by:
  2833 ;;		_tftstFillScreen
  2834 ;;		_tftstDrawPixel
  2835 ;;		_tftstDrawHorizontalLine
  2836 ;;		_tftstFillRect
  2837 ;;		_tftstDrawVerticalLine
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text10
  2842  0069DC                     __ptext10:
  2843                           	callstack 0
  2844  0069DC                     _tftstWriteColor:
  2845                           	callstack 26
  2846  0069DC                     
  2847                           ;./tftst.h: 68:     tftstWriteData(color >> 8);
  2848  0069DC  5004               	movf	(tftstWriteColor@color+1)^0,w,c
  2849  0069DE  ECD4  F034         	call	_tftstWriteData
  2850  0069E2                     
  2851                           ;./tftst.h: 69:     tftstWriteData(color & 0xFF | 0x80);
  2852  0069E2  5003               	movf	tftstWriteColor@color^0,w,c
  2853  0069E4  0980               	iorlw	128
  2854  0069E6  ECD4  F034         	call	_tftstWriteData
  2855  0069EA  0012               	return		;funcret
  2856  0069EC                     __end_of_tftstWriteColor:
  2857                           	callstack 0
  2858                           
  2859 ;; *************** function _tftstSetWindow *****************
  2860 ;; Defined at:
  2861 ;;		line 53 in file "./tftst.h"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  xStart          1    wreg     unsigned char 
  2864 ;;  xEnd            1    2[COMRAM] unsigned char 
  2865 ;;  yStart          1    3[COMRAM] unsigned char 
  2866 ;;  yEnd            1    4[COMRAM] unsigned char 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  xStart          1    5[COMRAM] unsigned char 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2878 ;;      Params:         3       0       0       0       0       0       0
  2879 ;;      Locals:         1       0       0       0       0       0       0
  2880 ;;      Temps:          0       0       0       0       0       0       0
  2881 ;;      Totals:         4       0       0       0       0       0       0
  2882 ;;Total ram usage:        4 bytes
  2883 ;; Hardware stack levels used: 1
  2884 ;; Hardware stack levels required when called: 2
  2885 ;; This function calls:
  2886 ;;		_tftstWriteCommand
  2887 ;;		_tftstWriteData
  2888 ;; This function is called by:
  2889 ;;		_tftstFillScreen
  2890 ;;		_tftstDrawPixel
  2891 ;;		_tftstDrawHorizontalLine
  2892 ;;		_tftstFillRect
  2893 ;;		_tftstDrawVerticalLine
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text11
  2898  006B74                     __ptext11:
  2899                           	callstack 0
  2900  006B74                     _tftstSetWindow:
  2901                           	callstack 26
  2902                           
  2903                           ;incstack = 0
  2904                           ;tftstSetWindow@xStart stored from wreg
  2905  006B74  6E06               	movwf	tftstSetWindow@xStart^0,c
  2906  006B76                     
  2907                           ;./tftst.h: 54:     tftstWriteCommand(0x2A);
  2908  006B76  0E2A               	movlw	42
  2909  006B78  ECDF  F034         	call	_tftstWriteCommand
  2910                           
  2911                           ;./tftst.h: 55:     tftstWriteData(0);
  2912  006B7C  0E00               	movlw	0
  2913  006B7E  ECD4  F034         	call	_tftstWriteData
  2914                           
  2915                           ;./tftst.h: 56:     tftstWriteData(xStart);
  2916  006B82  5006               	movf	tftstSetWindow@xStart^0,w,c
  2917  006B84  ECD4  F034         	call	_tftstWriteData
  2918                           
  2919                           ;./tftst.h: 57:     tftstWriteData(0);
  2920  006B88  0E00               	movlw	0
  2921  006B8A  ECD4  F034         	call	_tftstWriteData
  2922                           
  2923                           ;./tftst.h: 58:     tftstWriteData(xEnd);
  2924  006B8E  5003               	movf	tftstSetWindow@xEnd^0,w,c
  2925  006B90  ECD4  F034         	call	_tftstWriteData
  2926                           
  2927                           ;./tftst.h: 59:     tftstWriteCommand(0x2B);
  2928  006B94  0E2B               	movlw	43
  2929  006B96  ECDF  F034         	call	_tftstWriteCommand
  2930                           
  2931                           ;./tftst.h: 60:     tftstWriteData(0);
  2932  006B9A  0E00               	movlw	0
  2933  006B9C  ECD4  F034         	call	_tftstWriteData
  2934                           
  2935                           ;./tftst.h: 61:     tftstWriteData(yStart);
  2936  006BA0  5004               	movf	tftstSetWindow@yStart^0,w,c
  2937  006BA2  ECD4  F034         	call	_tftstWriteData
  2938                           
  2939                           ;./tftst.h: 62:     tftstWriteData(0);
  2940  006BA6  0E00               	movlw	0
  2941  006BA8  ECD4  F034         	call	_tftstWriteData
  2942                           
  2943                           ;./tftst.h: 63:     tftstWriteData(yEnd);
  2944  006BAC  5005               	movf	tftstSetWindow@yEnd^0,w,c
  2945  006BAE  ECD4  F034         	call	_tftstWriteData
  2946                           
  2947                           ;./tftst.h: 64:     tftstWriteCommand(0x2C);
  2948  006BB2  0E2C               	movlw	44
  2949  006BB4  ECDF  F034         	call	_tftstWriteCommand
  2950  006BB8  0012               	return		;funcret
  2951  006BBA                     __end_of_tftstSetWindow:
  2952                           	callstack 0
  2953                           
  2954 ;; *************** function _tftstWriteData *****************
  2955 ;; Defined at:
  2956 ;;		line 28 in file "./tftst.h"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  data_           1    wreg     unsigned char 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  data_           1    1[COMRAM] unsigned char 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		wreg, status,2, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2970 ;;      Params:         0       0       0       0       0       0       0
  2971 ;;      Locals:         1       0       0       0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0
  2973 ;;      Totals:         1       0       0       0       0       0       0
  2974 ;;Total ram usage:        1 bytes
  2975 ;; Hardware stack levels used: 1
  2976 ;; Hardware stack levels required when called: 1
  2977 ;; This function calls:
  2978 ;;		_SPI_ExchangeByte
  2979 ;; This function is called by:
  2980 ;;		_tftstReadId
  2981 ;;		_tftstSetWindow
  2982 ;;		_tftstWriteColor
  2983 ;;		_tftstInit
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           	psect	text12
  2988  0069A8                     __ptext12:
  2989                           	callstack 0
  2990  0069A8                     _tftstWriteData:
  2991                           	callstack 27
  2992                           
  2993                           ;incstack = 0
  2994                           ;tftstWriteData@data_ stored from wreg
  2995  0069A8  6E02               	movwf	tftstWriteData@data_^0,c
  2996  0069AA                     
  2997                           ;./tftst.h: 29:     SPI_ExchangeByte(data_);
  2998  0069AA  5002               	movf	tftstWriteData@data_^0,w,c
  2999  0069AC  EC08  F035         	call	_SPI_ExchangeByte
  3000  0069B0  0012               	return		;funcret
  3001  0069B2                     __end_of_tftstWriteData:
  3002                           	callstack 0
  3003                           
  3004 ;; *************** function _tftstWriteCommand *****************
  3005 ;; Defined at:
  3006 ;;		line 22 in file "./tftst.h"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  cmd_            1    wreg     unsigned char 
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  cmd_            1    1[COMRAM] unsigned char 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, status,2, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3020 ;;      Params:         0       0       0       0       0       0       0
  3021 ;;      Locals:         1       0       0       0       0       0       0
  3022 ;;      Temps:          0       0       0       0       0       0       0
  3023 ;;      Totals:         1       0       0       0       0       0       0
  3024 ;;Total ram usage:        1 bytes
  3025 ;; Hardware stack levels used: 1
  3026 ;; Hardware stack levels required when called: 1
  3027 ;; This function calls:
  3028 ;;		_SPI_ExchangeByte
  3029 ;; This function is called by:
  3030 ;;		_tftstSetWindow
  3031 ;;		_tftstInit
  3032 ;;		_tftstSleep
  3033 ;;		_tftstWakeUp
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text13
  3038  0069BE                     __ptext13:
  3039                           	callstack 0
  3040  0069BE                     _tftstWriteCommand:
  3041                           	callstack 27
  3042                           
  3043                           ;incstack = 0
  3044                           ;tftstWriteCommand@cmd_ stored from wreg
  3045  0069BE  6E02               	movwf	tftstWriteCommand@cmd_^0,c
  3046  0069C0  948C               	bcf	140,2,c	;volatile
  3047  0069C2                     
  3048                           ;./tftst.h: 24:     SPI_ExchangeByte(cmd_);
  3049  0069C2  5002               	movf	tftstWriteCommand@cmd_^0,w,c
  3050  0069C4  EC08  F035         	call	_SPI_ExchangeByte
  3051  0069C8  848C               	bsf	140,2,c	;volatile
  3052  0069CA  0012               	return		;funcret
  3053  0069CC                     __end_of_tftstWriteCommand:
  3054                           	callstack 0
  3055                           
  3056 ;; *************** function _SPI_ExchangeByte *****************
  3057 ;; Defined at:
  3058 ;;		line 92 in file "mcc_generated_files/spi.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  data            1    wreg     unsigned char 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;  data            1    0[COMRAM] unsigned char 
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1    wreg      unsigned char 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3072 ;;      Params:         0       0       0       0       0       0       0
  3073 ;;      Locals:         1       0       0       0       0       0       0
  3074 ;;      Temps:          0       0       0       0       0       0       0
  3075 ;;      Totals:         1       0       0       0       0       0       0
  3076 ;;Total ram usage:        1 bytes
  3077 ;; Hardware stack levels used: 1
  3078 ;; This function calls:
  3079 ;;		Nothing
  3080 ;; This function is called by:
  3081 ;;		_tftstWriteCommand
  3082 ;;		_tftstWriteData
  3083 ;;		_tftstReadId
  3084 ;;		_SPI_WriteBlock
  3085 ;;		_SPI_ReadBlock
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           	psect	text14
  3090  006A10                     __ptext14:
  3091                           	callstack 0
  3092  006A10                     _SPI_ExchangeByte:
  3093                           	callstack 27
  3094                           
  3095                           ;incstack = 0
  3096                           ;SPI_ExchangeByte@data stored from wreg
  3097  006A10  6E01               	movwf	SPI_ExchangeByte@data^0,c
  3098  006A12                     
  3099                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
  3100  006A12  C001  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
  3101  006A16                     l85:
  3102  006A16  A69E               	btfss	158,3,c	;volatile
  3103  006A18  EF10  F035         	goto	u841
  3104  006A1C  EF12  F035         	goto	u840
  3105  006A20                     u841:
  3106  006A20  EF0B  F035         	goto	l85
  3107  006A24                     u840:
  3108  006A24                     
  3109                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
  3110  006A24  969E               	bcf	158,3,c	;volatile
  3111                           
  3112                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
  3113  006A26  50C9               	movf	201,w,c	;volatile
  3114  006A28  0012               	return		;funcret
  3115  006A2A                     __end_of_SPI_ExchangeByte:
  3116                           	callstack 0
  3117                           
  3118 ;; *************** function _sprintf *****************
  3119 ;; Defined at:
  3120 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_sprintf.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  s               2   87[COMRAM] PTR unsigned char 
  3123 ;;		 -> demoAnimated@idString(8), 
  3124 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  3125 ;;		 -> STR_2(6), 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  f              11    2[BANK0 ] struct _IO_FILE
  3128 ;;  ap              2    0[BANK0 ] PTR void [1]
  3129 ;;		 -> ?_sprintf(2), 
  3130 ;;  ret             2    0        int 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  2   87[COMRAM] int 
  3133 ;; Registers used:
  3134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3140 ;;      Params:         6       0       0       0       0       0       0
  3141 ;;      Locals:         0      13       0       0       0       0       0
  3142 ;;      Temps:          0       0       0       0       0       0       0
  3143 ;;      Totals:         6      13       0       0       0       0       0
  3144 ;;Total ram usage:       19 bytes
  3145 ;; Hardware stack levels used: 1
  3146 ;; Hardware stack levels required when called: 7
  3147 ;; This function calls:
  3148 ;;		_vfprintf
  3149 ;; This function is called by:
  3150 ;;		_demoAnimated
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           	psect	text15
  3155  006C4E                     __ptext15:
  3156                           	callstack 0
  3157  006C4E                     _sprintf:
  3158                           	callstack 22
  3159  006C4E  0E5C               	movlw	low (?_sprintf+4)
  3160  006C50  0100               	movlb	0	; () banked
  3161  006C52  6F8A               	movwf	sprintf@ap& (0+255),b
  3162  006C54  0E00               	movlw	high (?_sprintf+4)
  3163  006C56  6F8B               	movwf	(sprintf@ap+1)& (0+255),b
  3164  006C58  C058  F08C         	movff	sprintf@s,sprintf@f
  3165  006C5C  C059  F08D         	movff	sprintf@s+1,sprintf@f+1
  3166  006C60                     
  3167                           ; BSR set to: 0
  3168  006C60  0E00               	movlw	0
  3169  006C62  6F90               	movwf	(sprintf@f+4)& (0+255),b
  3170  006C64  0E00               	movlw	0
  3171  006C66  6F8F               	movwf	(sprintf@f+3)& (0+255),b
  3172  006C68                     
  3173                           ; BSR set to: 0
  3174  006C68  0E00               	movlw	0
  3175  006C6A  6F96               	movwf	(sprintf@f+10)& (0+255),b
  3176  006C6C  0E00               	movlw	0
  3177  006C6E  6F95               	movwf	(sprintf@f+9)& (0+255),b
  3178  006C70                     
  3179                           ; BSR set to: 0
  3180  006C70  0E8C               	movlw	low sprintf@f
  3181  006C72  6E50               	movwf	vfprintf@fp^0,c
  3182  006C74  0E00               	movlw	high sprintf@f
  3183  006C76  6E51               	movwf	(vfprintf@fp+1)^0,c
  3184  006C78  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  3185  006C7C  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3186  006C80  0E8A               	movlw	low sprintf@ap
  3187  006C82  6E54               	movwf	vfprintf@ap^0,c
  3188  006C84  0E00               	movlw	high sprintf@ap
  3189  006C86  6E55               	movwf	(vfprintf@ap+1)^0,c
  3190  006C88  EC50  F036         	call	_vfprintf	;wreg free
  3191  006C8C  0100               	movlb	0	; () banked
  3192  006C8E  518F               	movf	(sprintf@f+3)& (0+255),w,b
  3193  006C90  2458               	addwf	sprintf@s^0,w,c
  3194  006C92  6ED9               	movwf	fsr2l,c
  3195  006C94  5190               	movf	(sprintf@f+4)& (0+255),w,b
  3196  006C96  2059               	addwfc	(sprintf@s+1)^0,w,c
  3197  006C98  6EDA               	movwf	fsr2h,c
  3198  006C9A  0E00               	movlw	0
  3199  006C9C  6EDF               	movwf	indf2,c
  3200  006C9E                     
  3201                           ; BSR set to: 0
  3202  006C9E  0012               	return		;funcret
  3203  006CA0                     __end_of_sprintf:
  3204                           	callstack 0
  3205                           
  3206 ;; *************** function _vfprintf *****************
  3207 ;; Defined at:
  3208 ;;		line 1390 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  3211 ;;		 -> sprintf@f(11), 
  3212 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  3213 ;;		 -> STR_2(6), 
  3214 ;;  ap              2   83[COMRAM] PTR PTR void 
  3215 ;;		 -> sprintf@ap(2), 
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  3218 ;;		 -> STR_2(6), 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  2   79[COMRAM] int 
  3221 ;; Registers used:
  3222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3228 ;;      Params:         6       0       0       0       0       0       0
  3229 ;;      Locals:         2       0       0       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0       0       0
  3231 ;;      Totals:         8       0       0       0       0       0       0
  3232 ;;Total ram usage:        8 bytes
  3233 ;; Hardware stack levels used: 1
  3234 ;; Hardware stack levels required when called: 6
  3235 ;; This function calls:
  3236 ;;		_vfpfcnvrt
  3237 ;; This function is called by:
  3238 ;;		_sprintf
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text16
  3243  006CA0                     __ptext16:
  3244                           	callstack 0
  3245  006CA0                     _vfprintf:
  3246                           	callstack 22
  3247  006CA0                     
  3248                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  3249  006CA0  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  3250  006CA4  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3251  006CA8                     
  3252                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  3253  006CA8  0E00               	movlw	0
  3254  006CAA  0100               	movlb	0	; () banked
  3255  006CAC  6F61               	movwf	(_nout+1)& (0+255),b
  3256  006CAE  0E00               	movlw	0
  3257  006CB0  6F60               	movwf	_nout& (0+255),b
  3258                           
  3259                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  3260  006CB2  EF6E  F036         	goto	l2232
  3261  006CB6                     l2230:
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  3265  006CB6  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  3266  006CBA  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3267  006CBE  0E56               	movlw	low vfprintf@cfmt
  3268  006CC0  6E42               	movwf	vfpfcnvrt@fmt^0,c
  3269  006CC2  0E00               	movlw	high vfprintf@cfmt
  3270  006CC4  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3271  006CC6  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  3272  006CCA  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3273  006CCE  EC4A  F03A         	call	_vfpfcnvrt	;wreg free
  3274  006CD2  5040               	movf	?_vfpfcnvrt^0,w,c
  3275  006CD4  0100               	movlb	0	; () banked
  3276  006CD6  2760               	addwf	_nout& (0+255),f,b
  3277  006CD8  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  3278  006CDA  2361               	addwfc	(_nout+1)& (0+255),f,b
  3279  006CDC                     l2232:
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  3283  006CDC  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  3284  006CE0  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3285  006CE4                     	if	0	;tblptru may be non-zero
  3286  006CE4                     	endif
  3287  006CE4                     	if	0	;tblptru may be non-zero
  3288  006CE4                     	endif
  3289  006CE4  0008               	tblrd		*
  3290  006CE6  50F5               	movf	tablat,w,c
  3291  006CE8  0900               	iorlw	0
  3292  006CEA  A4D8               	btfss	status,2,c
  3293  006CEC  EF7A  F036         	goto	u1391
  3294  006CF0  EF7C  F036         	goto	u1390
  3295  006CF4                     u1391:
  3296  006CF4  EF5B  F036         	goto	l2230
  3297  006CF8                     u1390:
  3298  006CF8                     
  3299                           ; BSR set to: 0
  3300                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  3301  006CF8  C060  F050         	movff	_nout,?_vfprintf
  3302  006CFC  C061  F051         	movff	_nout+1,?_vfprintf+1
  3303  006D00                     
  3304                           ; BSR set to: 0
  3305  006D00  0012               	return		;funcret
  3306  006D02                     __end_of_vfprintf:
  3307                           	callstack 0
  3308                           
  3309 ;; *************** function _vfpfcnvrt *****************
  3310 ;; Defined at:
  3311 ;;		line 692 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  3314 ;;		 -> sprintf@f(11), 
  3315 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  3316 ;;		 -> vfprintf@cfmt(2), 
  3317 ;;  ap              2   67[COMRAM] PTR PTR void 
  3318 ;;		 -> sprintf@ap(2), 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  ll              8   71[COMRAM] long long 
  3321 ;;  llu             8    0        unsigned long long 
  3322 ;;  f               4    0        unsigned long long 
  3323 ;;  vp              3    0        PTR void 
  3324 ;;  ct              3    0        unsigned char [3]
  3325 ;;  cp              3    0        PTR unsigned char 
  3326 ;;  i               2    0        int 
  3327 ;;  done            2    0        int 
  3328 ;;  c               1    0        unsigned char 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  2   63[COMRAM] int 
  3331 ;; Registers used:
  3332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3338 ;;      Params:         6       0       0       0       0       0       0
  3339 ;;      Locals:         8       0       0       0       0       0       0
  3340 ;;      Temps:          2       0       0       0       0       0       0
  3341 ;;      Totals:        16       0       0       0       0       0       0
  3342 ;;Total ram usage:       16 bytes
  3343 ;; Hardware stack levels used: 1
  3344 ;; Hardware stack levels required when called: 5
  3345 ;; This function calls:
  3346 ;;		_dtoa
  3347 ;;		_fputc
  3348 ;; This function is called by:
  3349 ;;		_vfprintf
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text17
  3354  007494                     __ptext17:
  3355                           	callstack 0
  3356  007494                     _vfpfcnvrt:
  3357                           	callstack 22
  3358  007494                     
  3359                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  3360  007494  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3361  007498  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3362  00749C  CFDE FFF6          	movff	postinc2,tblptrl
  3363  0074A0  CFDD FFF7          	movff	postdec2,tblptrh
  3364  0074A4                     	if	0	;tblptru may be non-zero
  3365  0074A4                     	endif
  3366  0074A4                     	if	0	;tblptru may be non-zero
  3367  0074A4                     	endif
  3368  0074A4  0008               	tblrd		*
  3369  0074A6  50F5               	movf	tablat,w,c
  3370  0074A8  0A25               	xorlw	37
  3371  0074AA  A4D8               	btfss	status,2,c
  3372  0074AC  EF5A  F03A         	goto	u1231
  3373  0074B0  EF5C  F03A         	goto	u1230
  3374  0074B4                     u1231:
  3375  0074B4  EF08  F03B         	goto	l2164
  3376  0074B8                     u1230:
  3377  0074B8                     
  3378                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  3379  0074B8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3380  0074BC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3381  0074C0  2ADE               	incf	postinc2,f,c
  3382  0074C2  0E00               	movlw	0
  3383  0074C4  22DD               	addwfc	postdec2,f,c
  3384  0074C6                     
  3385                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  3386  0074C6  0E00               	movlw	0
  3387  0074C8  0100               	movlb	0	; () banked
  3388  0074CA  6F63               	movwf	(_width+1)& (0+255),b
  3389  0074CC  0E00               	movlw	0
  3390  0074CE  6F62               	movwf	_width& (0+255),b
  3391  0074D0  C062  F05E         	movff	_width,_flags
  3392  0074D4  C063  F05F         	movff	_width+1,_flags+1
  3393  0074D8                     
  3394                           ; BSR set to: 0
  3395                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  3396  0074D8  6964               	setf	_prec& (0+255),b
  3397  0074DA  6965               	setf	(_prec+1)& (0+255),b
  3398  0074DC                     
  3399                           ; BSR set to: 0
  3400                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 847:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  3401  0074DC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3402  0074E0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3403  0074E4  CFDE FFF6          	movff	postinc2,tblptrl
  3404  0074E8  CFDD FFF7          	movff	postdec2,tblptrh
  3405  0074EC                     	if	0	;tblptru may be non-zero
  3406  0074EC                     	endif
  3407  0074EC                     	if	0	;tblptru may be non-zero
  3408  0074EC                     	endif
  3409  0074EC  0008               	tblrd		*
  3410  0074EE  50F5               	movf	tablat,w,c
  3411  0074F0  0A64               	xorlw	100
  3412  0074F2  B4D8               	btfsc	status,2,c
  3413  0074F4  EF7E  F03A         	goto	u1241
  3414  0074F8  EF80  F03A         	goto	u1240
  3415  0074FC                     u1241:
  3416  0074FC  EF92  F03A         	goto	l2142
  3417  007500                     u1240:
  3418  007500                     
  3419                           ; BSR set to: 0
  3420  007500  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3421  007504  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3422  007508  CFDE FFF6          	movff	postinc2,tblptrl
  3423  00750C  CFDD FFF7          	movff	postdec2,tblptrh
  3424  007510                     	if	0	;tblptru may be non-zero
  3425  007510                     	endif
  3426  007510                     	if	0	;tblptru may be non-zero
  3427  007510                     	endif
  3428  007510  0008               	tblrd		*
  3429  007512  50F5               	movf	tablat,w,c
  3430  007514  0A69               	xorlw	105
  3431  007516  A4D8               	btfss	status,2,c
  3432  007518  EF90  F03A         	goto	u1251
  3433  00751C  EF92  F03A         	goto	u1250
  3434  007520                     u1251:
  3435  007520  EFD2  F03A         	goto	l2148
  3436  007524                     u1250:
  3437  007524                     l2142:
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 849:             ++*fmt;
  3441  007524  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3442  007528  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3443  00752C  2ADE               	incf	postinc2,f,c
  3444  00752E  0E00               	movlw	0
  3445  007530  22DD               	addwfc	postdec2,f,c
  3446                           
  3447                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 850:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  3448  007532  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3449  007536  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3450  00753A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3451  00753E  0E02               	movlw	2
  3452  007540  26DE               	addwf	postinc2,f,c
  3453  007542  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3454  007546  0E00               	movlw	0
  3455  007548  22DD               	addwfc	postdec2,f,c
  3456  00754A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3457  00754E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3458  007552  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  3459  007556  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  3460  00755A  0E00               	movlw	0
  3461  00755C  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3462  00755E  0EFF               	movlw	-1
  3463  007560  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  3464  007562  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  3465  007564  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  3466  007566  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  3467  007568  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  3468  00756A  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  3469  00756C                     
  3470                           ; BSR set to: 0
  3471                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 852:             return dtoa(
      +                          fp, ll);
  3472  00756C  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3473  007570  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3474  007574  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3475  007578  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3476  00757C  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3477  007580  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3478  007584  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3479  007588  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3480  00758C  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3481  007590  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3482  007594  EC23  F03C         	call	_dtoa	;wreg free
  3483  007598  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  3484  00759C  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3485  0075A0  EF23  F03B         	goto	l1075
  3486  0075A4                     l2148:
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  3490  0075A4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3491  0075A8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3492  0075AC  CFDE FFF6          	movff	postinc2,tblptrl
  3493  0075B0  CFDD FFF7          	movff	postdec2,tblptrh
  3494  0075B4                     	if	0	;tblptru may be non-zero
  3495  0075B4                     	endif
  3496  0075B4                     	if	0	;tblptru may be non-zero
  3497  0075B4                     	endif
  3498  0075B4  0008               	tblrd		*
  3499  0075B6  50F5               	movf	tablat,w,c
  3500  0075B8  0A25               	xorlw	37
  3501  0075BA  A4D8               	btfss	status,2,c
  3502  0075BC  EFE2  F03A         	goto	u1261
  3503  0075C0  EFE4  F03A         	goto	u1260
  3504  0075C4                     u1261:
  3505  0075C4  EFFB  F03A         	goto	l2158
  3506  0075C8                     u1260:
  3507  0075C8                     
  3508                           ; BSR set to: 0
  3509                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  3510  0075C8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3511  0075CC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3512  0075D0  2ADE               	incf	postinc2,f,c
  3513  0075D2  0E00               	movlw	0
  3514  0075D4  22DD               	addwfc	postdec2,f,c
  3515  0075D6                     
  3516                           ; BSR set to: 0
  3517                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  3518  0075D6  0E00               	movlw	0
  3519  0075D8  6E02               	movwf	(fputc@c+1)^0,c
  3520  0075DA  0E25               	movlw	37
  3521  0075DC  6E01               	movwf	fputc@c^0,c
  3522  0075DE  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3523  0075E2  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3524  0075E6  EC61  F037         	call	_fputc	;wreg free
  3525  0075EA                     l2154:
  3526                           
  3527                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  3528  0075EA  0E00               	movlw	0
  3529  0075EC  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3530  0075EE  0E01               	movlw	1
  3531  0075F0  6E40               	movwf	?_vfpfcnvrt^0,c
  3532  0075F2  EF23  F03B         	goto	l1075
  3533  0075F6                     l2158:
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  3537  0075F6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3538  0075FA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3539  0075FE  2ADE               	incf	postinc2,f,c
  3540  007600  0E00               	movlw	0
  3541  007602  22DD               	addwfc	postdec2,f,c
  3542  007604                     
  3543                           ; BSR set to: 0
  3544                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  3545  007604  0E00               	movlw	0
  3546  007606  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3547  007608  0E00               	movlw	0
  3548  00760A  6E40               	movwf	?_vfpfcnvrt^0,c
  3549  00760C  EF23  F03B         	goto	l1075
  3550  007610                     l2164:
  3551                           
  3552                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  3553  007610  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3554  007614  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3555  007618  CFDE FFF6          	movff	postinc2,tblptrl
  3556  00761C  CFDD FFF7          	movff	postdec2,tblptrh
  3557  007620                     	if	0	;tblptru may be non-zero
  3558  007620                     	endif
  3559  007620                     	if	0	;tblptru may be non-zero
  3560  007620                     	endif
  3561  007620  0008               	tblrd		*
  3562  007622  50F5               	movf	tablat,w,c
  3563  007624  6E01               	movwf	fputc@c^0,c
  3564  007626  6A02               	clrf	(fputc@c+1)^0,c
  3565  007628  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3566  00762C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3567  007630  EC61  F037         	call	_fputc	;wreg free
  3568  007634                     
  3569                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  3570  007634  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3571  007638  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3572  00763C  2ADE               	incf	postinc2,f,c
  3573  00763E  0E00               	movlw	0
  3574  007640  22DD               	addwfc	postdec2,f,c
  3575  007642  EFF5  F03A         	goto	l2154
  3576  007646                     l1075:
  3577  007646  0012               	return		;funcret
  3578  007648                     __end_of_vfpfcnvrt:
  3579                           	callstack 0
  3580                           
  3581 ;; *************** function _dtoa *****************
  3582 ;; Defined at:
  3583 ;;		line 287 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3586 ;;		 -> sprintf@f(11), 
  3587 ;;  d               8   29[COMRAM] long long 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;  n               8   53[COMRAM] long long 
  3590 ;;  i               2   61[COMRAM] int 
  3591 ;;  s               2   51[COMRAM] int 
  3592 ;;  w               2   49[COMRAM] int 
  3593 ;;  p               2   47[COMRAM] int 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  2   27[COMRAM] int 
  3596 ;; Registers used:
  3597 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3603 ;;      Params:        10       0       0       0       0       0       0
  3604 ;;      Locals:        18       0       0       0       0       0       0
  3605 ;;      Temps:          8       0       0       0       0       0       0
  3606 ;;      Totals:        36       0       0       0       0       0       0
  3607 ;;Total ram usage:       36 bytes
  3608 ;; Hardware stack levels used: 1
  3609 ;; Hardware stack levels required when called: 4
  3610 ;; This function calls:
  3611 ;;		___aodiv
  3612 ;;		___aomod
  3613 ;;		_abs
  3614 ;;		_pad
  3615 ;; This function is called by:
  3616 ;;		_vfpfcnvrt
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           	psect	text18
  3621  007846                     __ptext18:
  3622                           	callstack 0
  3623  007846                     _dtoa:
  3624                           	callstack 22
  3625  007846                     
  3626                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 287: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 288: {;/opt/mic
      +                          rochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 289:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.36/pic/sources/c99/common/doprnt.c: 290:     long long n;;/opt/microchip/xc8/v2
      +                          .36/pic/sources/c99/common/doprnt.c: 293:     n = d;
  3627  007846  C01E  F036         	movff	dtoa@d,dtoa@n
  3628  00784A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  3629  00784E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  3630  007852  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  3631  007856  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  3632  00785A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  3633  00785E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  3634  007862  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  3635  007866                     
  3636                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ? 1 : 0;
  3637  007866  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  3638  007868  EF38  F03C         	goto	u1061
  3639  00786C  EF3B  F03C         	goto	u1060
  3640  007870                     u1061:
  3641  007870  0E01               	movlw	1
  3642  007872  EF3C  F03C         	goto	u1070
  3643  007876                     u1060:
  3644  007876  0E00               	movlw	0
  3645  007878                     u1070:
  3646  007878  6E34               	movwf	dtoa@s^0,c
  3647  00787A  6A35               	clrf	(dtoa@s+1)^0,c
  3648                           
  3649                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  3650  00787C  5034               	movf	dtoa@s^0,w,c
  3651  00787E  1035               	iorwf	(dtoa@s+1)^0,w,c
  3652  007880  B4D8               	btfsc	status,2,c
  3653  007882  EF45  F03C         	goto	u1081
  3654  007886  EF47  F03C         	goto	u1080
  3655  00788A                     u1081:
  3656  00788A  EF57  F03C         	goto	l2056
  3657  00788E                     u1080:
  3658  00788E                     
  3659                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  3660  00788E  1E3D               	comf	(dtoa@n+7)^0,f,c
  3661  007890  1E3C               	comf	(dtoa@n+6)^0,f,c
  3662  007892  1E3B               	comf	(dtoa@n+5)^0,f,c
  3663  007894  1E3A               	comf	(dtoa@n+4)^0,f,c
  3664  007896  1E39               	comf	(dtoa@n+3)^0,f,c
  3665  007898  1E38               	comf	(dtoa@n+2)^0,f,c
  3666  00789A  1E37               	comf	(dtoa@n+1)^0,f,c
  3667  00789C  6C36               	negf	dtoa@n^0,c
  3668  00789E  0E00               	movlw	0
  3669  0078A0  2237               	addwfc	(dtoa@n+1)^0,f,c
  3670  0078A2  2238               	addwfc	(dtoa@n+2)^0,f,c
  3671  0078A4  2239               	addwfc	(dtoa@n+3)^0,f,c
  3672  0078A6  223A               	addwfc	(dtoa@n+4)^0,f,c
  3673  0078A8  223B               	addwfc	(dtoa@n+5)^0,f,c
  3674  0078AA  223C               	addwfc	(dtoa@n+6)^0,f,c
  3675  0078AC  223D               	addwfc	(dtoa@n+7)^0,f,c
  3676  0078AE                     l2056:
  3677                           
  3678                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 300:     if (!(prec < 0)) {
  3679  0078AE  0100               	movlb	0	; () banked
  3680  0078B0  BF65               	btfsc	(_prec+1)& (0+255),7,b
  3681  0078B2  EF5D  F03C         	goto	u1091
  3682  0078B6  EF5F  F03C         	goto	u1090
  3683  0078BA                     u1091:
  3684  0078BA  EF60  F03C         	goto	l2060
  3685  0078BE                     u1090:
  3686  0078BE                     
  3687                           ; BSR set to: 0
  3688                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 301:         flags &= ~(1 << 
      +                          1);
  3689  0078BE  925E               	bcf	_flags^0,1,c
  3690  0078C0                     l2060:
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 303:     p = (0 < prec) ? pre
      +                          c : 1;
  3694  0078C0  BF65               	btfsc	(_prec+1)& (0+255),7,b
  3695  0078C2  EF6D  F03C         	goto	u1100
  3696  0078C6  5165               	movf	(_prec+1)& (0+255),w,b
  3697  0078C8  E106               	bnz	u1101
  3698  0078CA  0564               	decf	_prec& (0+255),w,b
  3699  0078CC  B0D8               	btfsc	status,0,c
  3700  0078CE  EF6B  F03C         	goto	u1101
  3701  0078D2  EF6D  F03C         	goto	u1100
  3702  0078D6                     u1101:
  3703  0078D6  EF73  F03C         	goto	l1048
  3704  0078DA                     u1100:
  3705  0078DA                     
  3706                           ; BSR set to: 0
  3707  0078DA  0E00               	movlw	0
  3708  0078DC  6E31               	movwf	(dtoa@p+1)^0,c
  3709  0078DE  0E01               	movlw	1
  3710  0078E0  6E30               	movwf	dtoa@p^0,c
  3711  0078E2  EF77  F03C         	goto	l1050
  3712  0078E6                     l1048:
  3713                           
  3714                           ; BSR set to: 0
  3715  0078E6  C064  F030         	movff	_prec,dtoa@p
  3716  0078EA  C065  F031         	movff	_prec+1,dtoa@p+1
  3717  0078EE                     l1050:
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 304:     w = width;
  3721  0078EE  C062  F032         	movff	_width,dtoa@w
  3722  0078F2  C063  F033         	movff	_width+1,dtoa@w+1
  3723  0078F6                     
  3724                           ; BSR set to: 0
  3725                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 305:     if (s || (flags & (1
      +                           << 2))) {
  3726  0078F6  5034               	movf	dtoa@s^0,w,c
  3727  0078F8  1035               	iorwf	(dtoa@s+1)^0,w,c
  3728  0078FA  A4D8               	btfss	status,2,c
  3729  0078FC  EF82  F03C         	goto	u1111
  3730  007900  EF84  F03C         	goto	u1110
  3731  007904                     u1111:
  3732  007904  EF8B  F03C         	goto	l2068
  3733  007908                     u1110:
  3734  007908                     
  3735                           ; BSR set to: 0
  3736  007908  A45E               	btfss	_flags^0,2,c
  3737  00790A  EF89  F03C         	goto	u1121
  3738  00790E  EF8B  F03C         	goto	u1120
  3739  007912                     u1121:
  3740  007912  EF8E  F03C         	goto	l2070
  3741  007916                     u1120:
  3742  007916                     l2068:
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 306:         --w;
  3746  007916  0632               	decf	dtoa@w^0,f,c
  3747  007918  A0D8               	btfss	status,0,c
  3748  00791A  0633               	decf	(dtoa@w+1)^0,f,c
  3749  00791C                     l2070:
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(dbuf) - 1
      +                          ;
  3753  00791C  0E00               	movlw	0
  3754  00791E  6E3F               	movwf	(dtoa@i+1)^0,c
  3755  007920  0E1F               	movlw	31
  3756  007922  6E3E               	movwf	dtoa@i^0,c
  3757  007924                     
  3758                           ; BSR set to: 0
  3759                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '\0';
  3760  007924  0E00               	movlw	0
  3761  007926  6F85               	movwf	(_dbuf+31)& (0+255),b
  3762                           
  3763                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3764  007928  EF12  F03D         	goto	l2084
  3765  00792C                     l2074:
  3766                           
  3767                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 313:         --i;
  3768  00792C  063E               	decf	dtoa@i^0,f,c
  3769  00792E  A0D8               	btfss	status,0,c
  3770  007930  063F               	decf	(dtoa@i+1)^0,f,c
  3771  007932                     
  3772                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 314:         dbuf[i] = (char)
      +                          ((int)'0' + abs(n % 10));
  3773  007932  0E66               	movlw	low _dbuf
  3774  007934  243E               	addwf	dtoa@i^0,w,c
  3775  007936  6ED9               	movwf	fsr2l,c
  3776  007938  0E00               	movlw	high _dbuf
  3777  00793A  203F               	addwfc	(dtoa@i+1)^0,w,c
  3778  00793C  6EDA               	movwf	fsr2h,c
  3779  00793E  C036  F001         	movff	dtoa@n,___aomod@dividend
  3780  007942  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3781  007946  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3782  00794A  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3783  00794E  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3784  007952  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3785  007956  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3786  00795A  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3787  00795E  0E0A               	movlw	10
  3788  007960  6E09               	movwf	___aomod@divisor^0,c
  3789  007962  0E00               	movlw	0
  3790  007964  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3791  007966  0E00               	movlw	0
  3792  007968  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3793  00796A  0E00               	movlw	0
  3794  00796C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3795  00796E  0E00               	movlw	0
  3796  007970  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3797  007972  0E00               	movlw	0
  3798  007974  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3799  007976  0E00               	movlw	0
  3800  007978  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3801  00797A  0E00               	movlw	0
  3802  00797C  6E10               	movwf	(___aomod@divisor+7)^0,c
  3803  00797E  ECD4  F038         	call	___aomod	;wreg free
  3804  007982  C001  F026         	movff	?___aomod,??_dtoa
  3805  007986  C002  F027         	movff	?___aomod+1,??_dtoa+1
  3806  00798A  C003  F028         	movff	?___aomod+2,??_dtoa+2
  3807  00798E  C004  F029         	movff	?___aomod+3,??_dtoa+3
  3808  007992  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  3809  007996  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  3810  00799A  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  3811  00799E  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  3812  0079A2  C026  F013         	movff	??_dtoa,abs@a
  3813  0079A6  C028  F014         	movff	??_dtoa+2,abs@a+1
  3814  0079AA  EC78  F035         	call	_abs	;wreg free
  3815  0079AE  5013               	movf	?_abs^0,w,c
  3816  0079B0  0F30               	addlw	48
  3817  0079B2  6EDF               	movwf	indf2,c
  3818  0079B4                     
  3819                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 315:         --p;
  3820  0079B4  0630               	decf	dtoa@p^0,f,c
  3821  0079B6  A0D8               	btfss	status,0,c
  3822  0079B8  0631               	decf	(dtoa@p+1)^0,f,c
  3823  0079BA                     
  3824                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 316:         --w;
  3825  0079BA  0632               	decf	dtoa@w^0,f,c
  3826  0079BC  A0D8               	btfss	status,0,c
  3827  0079BE  0633               	decf	(dtoa@w+1)^0,f,c
  3828  0079C0                     
  3829                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 317:         n = n / 10;
  3830  0079C0  C036  F001         	movff	dtoa@n,___aodiv@dividend
  3831  0079C4  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3832  0079C8  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3833  0079CC  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3834  0079D0  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3835  0079D4  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3836  0079D8  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3837  0079DC  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3838  0079E0  0E0A               	movlw	10
  3839  0079E2  6E09               	movwf	___aodiv@divisor^0,c
  3840  0079E4  0E00               	movlw	0
  3841  0079E6  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3842  0079E8  0E00               	movlw	0
  3843  0079EA  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  3844  0079EC  0E00               	movlw	0
  3845  0079EE  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  3846  0079F0  0E00               	movlw	0
  3847  0079F2  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  3848  0079F4  0E00               	movlw	0
  3849  0079F6  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  3850  0079F8  0E00               	movlw	0
  3851  0079FA  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  3852  0079FC  0E00               	movlw	0
  3853  0079FE  6E10               	movwf	(___aodiv@divisor+7)^0,c
  3854  007A00  EC86  F039         	call	___aodiv	;wreg free
  3855  007A04  C001  F036         	movff	?___aodiv,dtoa@n
  3856  007A08  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  3857  007A0C  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  3858  007A10  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  3859  007A14  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  3860  007A18  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  3861  007A1C  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  3862  007A20  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  3863  007A24                     l2084:
  3864                           
  3865                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3866  007A24  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  3867  007A26  EF1D  F03D         	goto	u1131
  3868  007A2A  503F               	movf	(dtoa@i+1)^0,w,c
  3869  007A2C  E108               	bnz	u1130
  3870  007A2E  043E               	decf	dtoa@i^0,w,c
  3871  007A30  A0D8               	btfss	status,0,c
  3872  007A32  EF1D  F03D         	goto	u1131
  3873  007A36  EF1F  F03D         	goto	u1130
  3874  007A3A                     u1131:
  3875  007A3A  EF4F  F03D         	goto	l2094
  3876  007A3E                     u1130:
  3877  007A3E  5036               	movf	dtoa@n^0,w,c
  3878  007A40  1037               	iorwf	(dtoa@n+1)^0,w,c
  3879  007A42  1038               	iorwf	(dtoa@n+2)^0,w,c
  3880  007A44  1039               	iorwf	(dtoa@n+3)^0,w,c
  3881  007A46  103A               	iorwf	(dtoa@n+4)^0,w,c
  3882  007A48  103B               	iorwf	(dtoa@n+5)^0,w,c
  3883  007A4A  103C               	iorwf	(dtoa@n+6)^0,w,c
  3884  007A4C  103D               	iorwf	(dtoa@n+7)^0,w,c
  3885  007A4E  A4D8               	btfss	status,2,c
  3886  007A50  EF2C  F03D         	goto	u1141
  3887  007A54  EF2E  F03D         	goto	u1140
  3888  007A58                     u1141:
  3889  007A58  EF96  F03C         	goto	l2074
  3890  007A5C                     u1140:
  3891  007A5C  BE31               	btfsc	(dtoa@p+1)^0,7,c
  3892  007A5E  EF3B  F03D         	goto	u1150
  3893  007A62  5031               	movf	(dtoa@p+1)^0,w,c
  3894  007A64  E106               	bnz	u1151
  3895  007A66  0430               	decf	dtoa@p^0,w,c
  3896  007A68  B0D8               	btfsc	status,0,c
  3897  007A6A  EF39  F03D         	goto	u1151
  3898  007A6E  EF3B  F03D         	goto	u1150
  3899  007A72                     u1151:
  3900  007A72  EF96  F03C         	goto	l2074
  3901  007A76                     u1150:
  3902  007A76  BE33               	btfsc	(dtoa@w+1)^0,7,c
  3903  007A78  EF46  F03D         	goto	u1161
  3904  007A7C  5033               	movf	(dtoa@w+1)^0,w,c
  3905  007A7E  E108               	bnz	u1160
  3906  007A80  0432               	decf	dtoa@w^0,w,c
  3907  007A82  A0D8               	btfss	status,0,c
  3908  007A84  EF46  F03D         	goto	u1161
  3909  007A88  EF48  F03D         	goto	u1160
  3910  007A8C                     u1161:
  3911  007A8C  EF4F  F03D         	goto	l2094
  3912  007A90                     u1160:
  3913  007A90  B25E               	btfsc	_flags^0,1,c
  3914  007A92  EF4D  F03D         	goto	u1171
  3915  007A96  EF4F  F03D         	goto	u1170
  3916  007A9A                     u1171:
  3917  007A9A  EF96  F03C         	goto	l2074
  3918  007A9E                     u1170:
  3919  007A9E                     l2094:
  3920                           
  3921                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 321:     if (s || (flags & (1
      +                           << 2))) {
  3922  007A9E  5034               	movf	dtoa@s^0,w,c
  3923  007AA0  1035               	iorwf	(dtoa@s+1)^0,w,c
  3924  007AA2  A4D8               	btfss	status,2,c
  3925  007AA4  EF56  F03D         	goto	u1181
  3926  007AA8  EF58  F03D         	goto	u1180
  3927  007AAC                     u1181:
  3928  007AAC  EF5F  F03D         	goto	l2098
  3929  007AB0                     u1180:
  3930  007AB0  A45E               	btfss	_flags^0,2,c
  3931  007AB2  EF5D  F03D         	goto	u1191
  3932  007AB6  EF5F  F03D         	goto	u1190
  3933  007ABA                     u1191:
  3934  007ABA  EF7D  F03D         	goto	l2108
  3935  007ABE                     u1190:
  3936  007ABE                     l2098:
  3937                           
  3938                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 322:         --i;
  3939  007ABE  063E               	decf	dtoa@i^0,f,c
  3940  007AC0  A0D8               	btfss	status,0,c
  3941  007AC2  063F               	decf	(dtoa@i+1)^0,f,c
  3942  007AC4                     
  3943                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 323:         dbuf[i] = s ? '-
      +                          ' : '+';
  3944  007AC4  5034               	movf	dtoa@s^0,w,c
  3945  007AC6  1035               	iorwf	(dtoa@s+1)^0,w,c
  3946  007AC8  A4D8               	btfss	status,2,c
  3947  007ACA  EF69  F03D         	goto	u1201
  3948  007ACE  EF6B  F03D         	goto	u1200
  3949  007AD2                     u1201:
  3950  007AD2  EF71  F03D         	goto	l2104
  3951  007AD6                     u1200:
  3952  007AD6  0E00               	movlw	0
  3953  007AD8  6E2F               	movwf	(_dtoa$1100+1)^0,c
  3954  007ADA  0E2B               	movlw	43
  3955  007ADC  6E2E               	movwf	_dtoa$1100^0,c
  3956  007ADE  EF75  F03D         	goto	l2106
  3957  007AE2                     l2104:
  3958  007AE2  0E00               	movlw	0
  3959  007AE4  6E2F               	movwf	(_dtoa$1100+1)^0,c
  3960  007AE6  0E2D               	movlw	45
  3961  007AE8  6E2E               	movwf	_dtoa$1100^0,c
  3962  007AEA                     l2106:
  3963  007AEA  0E66               	movlw	low _dbuf
  3964  007AEC  243E               	addwf	dtoa@i^0,w,c
  3965  007AEE  6ED9               	movwf	fsr2l,c
  3966  007AF0  0E00               	movlw	high _dbuf
  3967  007AF2  203F               	addwfc	(dtoa@i+1)^0,w,c
  3968  007AF4  6EDA               	movwf	fsr2h,c
  3969  007AF6  C02E  FFDF         	movff	_dtoa$1100,indf2
  3970  007AFA                     l2108:
  3971                           
  3972                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 327:     return pad(fp, &dbuf
      +                          [i], w);
  3973  007AFA  C01C  F011         	movff	dtoa@fp,pad@fp
  3974  007AFE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  3975  007B02  0E66               	movlw	low _dbuf
  3976  007B04  243E               	addwf	dtoa@i^0,w,c
  3977  007B06  6E13               	movwf	pad@buf^0,c
  3978  007B08  0E00               	movlw	high _dbuf
  3979  007B0A  203F               	addwfc	(dtoa@i+1)^0,w,c
  3980  007B0C  6E14               	movwf	(pad@buf+1)^0,c
  3981  007B0E  C032  F015         	movff	dtoa@w,pad@p
  3982  007B12  C033  F016         	movff	dtoa@w+1,pad@p+1
  3983  007B16  EC00  F037         	call	_pad	;wreg free
  3984  007B1A  C011  F01C         	movff	?_pad,?_dtoa
  3985  007B1E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  3986  007B22  0012               	return		;funcret
  3987  007B24                     __end_of_dtoa:
  3988                           	callstack 0
  3989                           
  3990 ;; *************** function _pad *****************
  3991 ;; Defined at:
  3992 ;;		line 72 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3995 ;;		 -> sprintf@f(11), 
  3996 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3997 ;;		 -> dbuf(32), 
  3998 ;;  p               2   20[COMRAM] int 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  w               2   25[COMRAM] int 
  4001 ;;  i               2   23[COMRAM] int 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  2   16[COMRAM] int 
  4004 ;; Registers used:
  4005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4011 ;;      Params:         6       0       0       0       0       0       0
  4012 ;;      Locals:         4       0       0       0       0       0       0
  4013 ;;      Temps:          1       0       0       0       0       0       0
  4014 ;;      Totals:        11       0       0       0       0       0       0
  4015 ;;Total ram usage:       11 bytes
  4016 ;; Hardware stack levels used: 1
  4017 ;; Hardware stack levels required when called: 3
  4018 ;; This function calls:
  4019 ;;		_fputc
  4020 ;;		_fputs
  4021 ;;		_strlen
  4022 ;; This function is called by:
  4023 ;;		_dtoa
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text19
  4028  006E00                     __ptext19:
  4029                           	callstack 0
  4030  006E00                     _pad:
  4031                           	callstack 22
  4032  006E00                     
  4033                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.36/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  4034  006E00  A05E               	btfss	_flags^0,0,c
  4035  006E02  EF05  F037         	goto	u1011
  4036  006E06  EF07  F037         	goto	u1010
  4037  006E0A                     u1011:
  4038  006E0A  EF11  F037         	goto	l2022
  4039  006E0E                     u1010:
  4040  006E0E                     
  4041                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  4042  006E0E  C013  F00A         	movff	pad@buf,fputs@s
  4043  006E12  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4044  006E16  C011  F00C         	movff	pad@fp,fputs@fp
  4045  006E1A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4046  006E1E  EC98  F035         	call	_fputs	;wreg free
  4047  006E22                     l2022:
  4048                           
  4049                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  4050  006E22  BE16               	btfsc	(pad@p+1)^0,7,c
  4051  006E24  EF16  F037         	goto	u1021
  4052  006E28  EF18  F037         	goto	u1020
  4053  006E2C                     u1021:
  4054  006E2C  EF1E  F037         	goto	l2026
  4055  006E30                     u1020:
  4056  006E30  C015  F01A         	movff	pad@p,pad@w
  4057  006E34  C016  F01B         	movff	pad@p+1,pad@w+1
  4058  006E38  EF22  F037         	goto	l1037
  4059  006E3C                     l2026:
  4060  006E3C  0E00               	movlw	0
  4061  006E3E  6E1B               	movwf	(pad@w+1)^0,c
  4062  006E40  0E00               	movlw	0
  4063  006E42  6E1A               	movwf	pad@w^0,c
  4064  006E44                     l1037:
  4065                           
  4066                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  4067  006E44  0E00               	movlw	0
  4068  006E46  6E19               	movwf	(pad@i+1)^0,c
  4069  006E48  0E00               	movlw	0
  4070  006E4A  6E18               	movwf	pad@i^0,c
  4071                           
  4072                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4073  006E4C  EF34  F037         	goto	l2032
  4074  006E50                     l2028:
  4075                           
  4076                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  4077  006E50  0E00               	movlw	0
  4078  006E52  6E02               	movwf	(fputc@c+1)^0,c
  4079  006E54  0E20               	movlw	32
  4080  006E56  6E01               	movwf	fputc@c^0,c
  4081  006E58  C011  F003         	movff	pad@fp,fputc@fp
  4082  006E5C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4083  006E60  EC61  F037         	call	_fputc	;wreg free
  4084  006E64                     
  4085                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 86:         ++i;
  4086  006E64  4A18               	infsnz	pad@i^0,f,c
  4087  006E66  2A19               	incf	(pad@i+1)^0,f,c
  4088  006E68                     l2032:
  4089                           
  4090                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4091  006E68  501A               	movf	pad@w^0,w,c
  4092  006E6A  5C18               	subwf	pad@i^0,w,c
  4093  006E6C  5019               	movf	(pad@i+1)^0,w,c
  4094  006E6E  0A80               	xorlw	128
  4095  006E70  6E17               	movwf	??_pad^0,c
  4096  006E72  501B               	movf	(pad@w+1)^0,w,c
  4097  006E74  0A80               	xorlw	128
  4098  006E76  5817               	subwfb	??_pad^0,w,c
  4099  006E78  A0D8               	btfss	status,0,c
  4100  006E7A  EF41  F037         	goto	u1031
  4101  006E7E  EF43  F037         	goto	u1030
  4102  006E82                     u1031:
  4103  006E82  EF28  F037         	goto	l2028
  4104  006E86                     u1030:
  4105  006E86                     
  4106                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  4107  006E86  B05E               	btfsc	_flags^0,0,c
  4108  006E88  EF48  F037         	goto	u1041
  4109  006E8C  EF4A  F037         	goto	u1040
  4110  006E90                     u1041:
  4111  006E90  EF54  F037         	goto	l2036
  4112  006E94                     u1040:
  4113  006E94                     
  4114                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  4115  006E94  C013  F00A         	movff	pad@buf,fputs@s
  4116  006E98  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4117  006E9C  C011  F00C         	movff	pad@fp,fputs@fp
  4118  006EA0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4119  006EA4  EC98  F035         	call	_fputs	;wreg free
  4120  006EA8                     l2036:
  4121                           
  4122                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  4123  006EA8  C013  F001         	movff	pad@buf,strlen@s
  4124  006EAC  C014  F002         	movff	pad@buf+1,strlen@s+1
  4125  006EB0  EC00  F036         	call	_strlen	;wreg free
  4126  006EB4  501A               	movf	pad@w^0,w,c
  4127  006EB6  2401               	addwf	?_strlen^0,w,c
  4128  006EB8  6E11               	movwf	?_pad^0,c
  4129  006EBA  501B               	movf	(pad@w+1)^0,w,c
  4130  006EBC  2002               	addwfc	(?_strlen+1)^0,w,c
  4131  006EBE  6E12               	movwf	(?_pad+1)^0,c
  4132  006EC0  0012               	return		;funcret
  4133  006EC2                     __end_of_pad:
  4134                           	callstack 0
  4135                           
  4136 ;; *************** function _strlen *****************
  4137 ;; Defined at:
  4138 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strlen.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4141 ;;		 -> dbuf(32), STR_3(13), STR_1(13), 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4144 ;;		 -> dbuf(32), STR_3(13), STR_1(13), 
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  2    0[COMRAM] unsigned int 
  4147 ;; Registers used:
  4148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4154 ;;      Params:         2       0       0       0       0       0       0
  4155 ;;      Locals:         2       0       0       0       0       0       0
  4156 ;;      Temps:          0       0       0       0       0       0       0
  4157 ;;      Totals:         4       0       0       0       0       0       0
  4158 ;;Total ram usage:        4 bytes
  4159 ;; Hardware stack levels used: 1
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		_tftstDrawText
  4164 ;;		_pad
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           	psect	text20
  4169  006C00                     __ptext20:
  4170                           	callstack 0
  4171  006C00                     _strlen:
  4172                           	callstack 28
  4173  006C00  C001  F003         	movff	strlen@s,strlen@a
  4174  006C04  C002  F004         	movff	strlen@s+1,strlen@a+1
  4175  006C08  EF08  F036         	goto	l1918
  4176  006C0C                     l1916:
  4177  006C0C  4A01               	infsnz	strlen@s^0,f,c
  4178  006C0E  2A02               	incf	(strlen@s+1)^0,f,c
  4179  006C10                     l1918:
  4180  006C10  C001  FFF6         	movff	strlen@s,tblptrl
  4181  006C14  C002  FFF7         	movff	strlen@s+1,tblptrh
  4182  006C18  6AF8               	clrf	tblptru,c
  4183  006C1A  0E05               	movlw	(high __ramtop+-1)
  4184  006C1C  64F7               	cpfsgt	tblptrh,c
  4185  006C1E  D003               	bra	u857
  4186  006C20  0008               	tblrd		*
  4187  006C22  50F5               	movf	tablat,w,c
  4188  006C24  D005               	bra	u850
  4189  006C26                     u857:
  4190  006C26  CFF6 FFE9          	movff	tblptrl,fsr0l
  4191  006C2A  CFF7 FFEA          	movff	tblptrh,fsr0h
  4192  006C2E  50EF               	movf	indf0,w,c
  4193  006C30                     u850:
  4194  006C30  0900               	iorlw	0
  4195  006C32  A4D8               	btfss	status,2,c
  4196  006C34  EF1E  F036         	goto	u861
  4197  006C38  EF20  F036         	goto	u860
  4198  006C3C                     u861:
  4199  006C3C  EF06  F036         	goto	l1916
  4200  006C40                     u860:
  4201  006C40  5003               	movf	strlen@a^0,w,c
  4202  006C42  5C01               	subwf	strlen@s^0,w,c
  4203  006C44  6E01               	movwf	?_strlen^0,c
  4204  006C46  5004               	movf	(strlen@a+1)^0,w,c
  4205  006C48  5802               	subwfb	(strlen@s+1)^0,w,c
  4206  006C4A  6E02               	movwf	(?_strlen+1)^0,c
  4207  006C4C  0012               	return		;funcret
  4208  006C4E                     __end_of_strlen:
  4209                           	callstack 0
  4210                           
  4211 ;; *************** function _fputs *****************
  4212 ;; Defined at:
  4213 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputs.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4216 ;;		 -> dbuf(32), 
  4217 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4218 ;;		 -> sprintf@f(11), 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  i               2   14[COMRAM] int 
  4221 ;;  c               1   13[COMRAM] unsigned char 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  2    9[COMRAM] int 
  4224 ;; Registers used:
  4225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4231 ;;      Params:         4       0       0       0       0       0       0
  4232 ;;      Locals:         3       0       0       0       0       0       0
  4233 ;;      Temps:          0       0       0       0       0       0       0
  4234 ;;      Totals:         7       0       0       0       0       0       0
  4235 ;;Total ram usage:        7 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 2
  4238 ;; This function calls:
  4239 ;;		_fputc
  4240 ;; This function is called by:
  4241 ;;		_pad
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text21
  4246  006B30                     __ptext21:
  4247                           	callstack 0
  4248  006B30                     _fputs:
  4249                           	callstack 22
  4250  006B30  0E00               	movlw	0
  4251  006B32  6E10               	movwf	(fputs@i+1)^0,c
  4252  006B34  0E00               	movlw	0
  4253  006B36  6E0F               	movwf	fputs@i^0,c
  4254  006B38  EFA9  F035         	goto	l1930
  4255  006B3C                     l1926:
  4256  006B3C  C00E  F001         	movff	fputs@c,fputc@c
  4257  006B40  6A02               	clrf	(fputc@c+1)^0,c
  4258  006B42  C00C  F003         	movff	fputs@fp,fputc@fp
  4259  006B46  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4260  006B4A  EC61  F037         	call	_fputc	;wreg free
  4261  006B4E  4A0F               	infsnz	fputs@i^0,f,c
  4262  006B50  2A10               	incf	(fputs@i+1)^0,f,c
  4263  006B52                     l1930:
  4264  006B52  500F               	movf	fputs@i^0,w,c
  4265  006B54  240A               	addwf	fputs@s^0,w,c
  4266  006B56  6ED9               	movwf	fsr2l,c
  4267  006B58  5010               	movf	(fputs@i+1)^0,w,c
  4268  006B5A  200B               	addwfc	(fputs@s+1)^0,w,c
  4269  006B5C  6EDA               	movwf	fsr2h,c
  4270  006B5E  50DF               	movf	indf2,w,c
  4271  006B60  6E0E               	movwf	fputs@c^0,c
  4272  006B62  500E               	movf	fputs@c^0,w,c
  4273  006B64  A4D8               	btfss	status,2,c
  4274  006B66  EFB7  F035         	goto	u871
  4275  006B6A  EFB9  F035         	goto	u870
  4276  006B6E                     u871:
  4277  006B6E  EF9E  F035         	goto	l1926
  4278  006B72                     u870:
  4279  006B72  0012               	return		;funcret
  4280  006B74                     __end_of_fputs:
  4281                           	callstack 0
  4282                           
  4283 ;; *************** function _fputc *****************
  4284 ;; Defined at:
  4285 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputc.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;  c               2    0[COMRAM] int 
  4288 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4289 ;;		 -> sprintf@f(11), 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  2    0[COMRAM] int 
  4294 ;; Registers used:
  4295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4301 ;;      Params:         4       0       0       0       0       0       0
  4302 ;;      Locals:         0       0       0       0       0       0       0
  4303 ;;      Temps:          5       0       0       0       0       0       0
  4304 ;;      Totals:         9       0       0       0       0       0       0
  4305 ;;Total ram usage:        9 bytes
  4306 ;; Hardware stack levels used: 1
  4307 ;; Hardware stack levels required when called: 1
  4308 ;; This function calls:
  4309 ;;		_putch
  4310 ;; This function is called by:
  4311 ;;		_pad
  4312 ;;		_vfpfcnvrt
  4313 ;;		_fputs
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text22
  4318  006EC2                     __ptext22:
  4319                           	callstack 0
  4320  006EC2                     _fputc:
  4321                           	callstack 25
  4322  006EC2  5003               	movf	fputc@fp^0,w,c
  4323  006EC4  1004               	iorwf	(fputc@fp+1)^0,w,c
  4324  006EC6  B4D8               	btfsc	status,2,c
  4325  006EC8  EF68  F037         	goto	u801
  4326  006ECC  EF6A  F037         	goto	u800
  4327  006ED0                     u801:
  4328  006ED0  EF73  F037         	goto	l1902
  4329  006ED4                     u800:
  4330  006ED4  5003               	movf	fputc@fp^0,w,c
  4331  006ED6  1004               	iorwf	(fputc@fp+1)^0,w,c
  4332  006ED8  A4D8               	btfss	status,2,c
  4333  006EDA  EF71  F037         	goto	u811
  4334  006EDE  EF73  F037         	goto	u810
  4335  006EE2                     u811:
  4336  006EE2  EF78  F037         	goto	l1904
  4337  006EE6                     u810:
  4338  006EE6                     l1902:
  4339  006EE6  5001               	movf	fputc@c^0,w,c
  4340  006EE8  ECCE  F034         	call	_putch
  4341  006EEC  EFC5  F037         	goto	l1101
  4342  006EF0                     l1904:
  4343  006EF0  EE20 F009          	lfsr	2,9
  4344  006EF4  5003               	movf	fputc@fp^0,w,c
  4345  006EF6  26D9               	addwf	fsr2l,f,c
  4346  006EF8  5004               	movf	(fputc@fp+1)^0,w,c
  4347  006EFA  22DA               	addwfc	fsr2h,f,c
  4348  006EFC  50DE               	movf	postinc2,w,c
  4349  006EFE  10DE               	iorwf	postinc2,w,c
  4350  006F00  B4D8               	btfsc	status,2,c
  4351  006F02  EF85  F037         	goto	u821
  4352  006F06  EF87  F037         	goto	u820
  4353  006F0A                     u821:
  4354  006F0A  EFA2  F037         	goto	l1908
  4355  006F0E                     u820:
  4356  006F0E  EE20 F009          	lfsr	2,9
  4357  006F12  5003               	movf	fputc@fp^0,w,c
  4358  006F14  26D9               	addwf	fsr2l,f,c
  4359  006F16  5004               	movf	(fputc@fp+1)^0,w,c
  4360  006F18  22DA               	addwfc	fsr2h,f,c
  4361  006F1A  EE10 F003          	lfsr	1,3
  4362  006F1E  5003               	movf	fputc@fp^0,w,c
  4363  006F20  26E1               	addwf	fsr1l,f,c
  4364  006F22  5004               	movf	(fputc@fp+1)^0,w,c
  4365  006F24  22E2               	addwfc	fsr1h,f,c
  4366  006F26  50DE               	movf	postinc2,w,c
  4367  006F28  5CE6               	subwf	postinc1,w,c
  4368  006F2A  50E6               	movf	postinc1,w,c
  4369  006F2C  0A80               	xorlw	128
  4370  006F2E  6E09               	movwf	(??_fputc+4)^0,c
  4371  006F30  50DE               	movf	postinc2,w,c
  4372  006F32  0A80               	xorlw	128
  4373  006F34  5809               	subwfb	(??_fputc+4)^0,w,c
  4374  006F36  B0D8               	btfsc	status,0,c
  4375  006F38  EFA0  F037         	goto	u831
  4376  006F3C  EFA2  F037         	goto	u830
  4377  006F40                     u831:
  4378  006F40  EFC5  F037         	goto	l1101
  4379  006F44                     u830:
  4380  006F44                     l1908:
  4381  006F44  EE20 F003          	lfsr	2,3
  4382  006F48  5003               	movf	fputc@fp^0,w,c
  4383  006F4A  26D9               	addwf	fsr2l,f,c
  4384  006F4C  5004               	movf	(fputc@fp+1)^0,w,c
  4385  006F4E  22DA               	addwfc	fsr2h,f,c
  4386  006F50  CFDE F005          	movff	postinc2,??_fputc
  4387  006F54  CFDD F006          	movff	postdec2,??_fputc+1
  4388  006F58  C003  FFD9         	movff	fputc@fp,fsr2l
  4389  006F5C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4390  006F60  CFDE F007          	movff	postinc2,??_fputc+2
  4391  006F64  CFDD F008          	movff	postdec2,??_fputc+3
  4392  006F68  5005               	movf	??_fputc^0,w,c
  4393  006F6A  2407               	addwf	(??_fputc+2)^0,w,c
  4394  006F6C  6ED9               	movwf	fsr2l,c
  4395  006F6E  5006               	movf	(??_fputc+1)^0,w,c
  4396  006F70  2008               	addwfc	(??_fputc+3)^0,w,c
  4397  006F72  6EDA               	movwf	fsr2h,c
  4398  006F74  C001  FFDF         	movff	fputc@c,indf2
  4399  006F78  EE20 F003          	lfsr	2,3
  4400  006F7C  5003               	movf	fputc@fp^0,w,c
  4401  006F7E  26D9               	addwf	fsr2l,f,c
  4402  006F80  5004               	movf	(fputc@fp+1)^0,w,c
  4403  006F82  22DA               	addwfc	fsr2h,f,c
  4404  006F84  2ADE               	incf	postinc2,f,c
  4405  006F86  0E00               	movlw	0
  4406  006F88  22DD               	addwfc	postdec2,f,c
  4407  006F8A                     l1101:
  4408  006F8A  0012               	return		;funcret
  4409  006F8C                     __end_of_fputc:
  4410                           	callstack 0
  4411                           
  4412 ;; *************** function _putch *****************
  4413 ;; Defined at:
  4414 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/putch.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  c               1    wreg     unsigned char 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  c               1    0[COMRAM] unsigned char 
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		wreg
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4428 ;;      Params:         0       0       0       0       0       0       0
  4429 ;;      Locals:         0       0       0       0       0       0       0
  4430 ;;      Temps:          0       0       0       0       0       0       0
  4431 ;;      Totals:         0       0       0       0       0       0       0
  4432 ;;Total ram usage:        0 bytes
  4433 ;; Hardware stack levels used: 1
  4434 ;; This function calls:
  4435 ;;		Nothing
  4436 ;; This function is called by:
  4437 ;;		_fputc
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           	psect	text23
  4442  00699C                     __ptext23:
  4443                           	callstack 0
  4444  00699C                     _putch:
  4445                           	callstack 25
  4446  00699C  0012               	return		;funcret
  4447  00699E                     __end_of_putch:
  4448                           	callstack 0
  4449                           
  4450 ;; *************** function _abs *****************
  4451 ;; Defined at:
  4452 ;;		line 1 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/abs.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  a               2   18[COMRAM] int 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;		None
  4457 ;; Return value:  Size  Location     Type
  4458 ;;                  2   18[COMRAM] int 
  4459 ;; Registers used:
  4460 ;;		wreg, status,2, status,0
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4466 ;;      Params:         2       0       0       0       0       0       0
  4467 ;;      Locals:         0       0       0       0       0       0       0
  4468 ;;      Temps:          2       0       0       0       0       0       0
  4469 ;;      Totals:         4       0       0       0       0       0       0
  4470 ;;Total ram usage:        4 bytes
  4471 ;; Hardware stack levels used: 1
  4472 ;; This function calls:
  4473 ;;		Nothing
  4474 ;; This function is called by:
  4475 ;;		_dtoa
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           	psect	text24
  4480  006AF0                     __ptext24:
  4481                           	callstack 0
  4482  006AF0                     _abs:
  4483                           	callstack 25
  4484  006AF0  BE14               	btfsc	(abs@a+1)^0,7,c
  4485  006AF2  EF85  F035         	goto	u1050
  4486  006AF6  5014               	movf	(abs@a+1)^0,w,c
  4487  006AF8  E106               	bnz	u1051
  4488  006AFA  0413               	decf	abs@a^0,w,c
  4489  006AFC  B0D8               	btfsc	status,0,c
  4490  006AFE  EF83  F035         	goto	u1051
  4491  006B02  EF85  F035         	goto	u1050
  4492  006B06                     u1051:
  4493  006B06  EF93  F035         	goto	l1086
  4494  006B0A                     u1050:
  4495  006B0A  C013  F015         	movff	abs@a,??_abs
  4496  006B0E  C014  F016         	movff	abs@a+1,??_abs+1
  4497  006B12  1E15               	comf	??_abs^0,f,c
  4498  006B14  1E16               	comf	(??_abs+1)^0,f,c
  4499  006B16  4A15               	infsnz	??_abs^0,f,c
  4500  006B18  2A16               	incf	(??_abs+1)^0,f,c
  4501  006B1A  C015  F013         	movff	??_abs,?_abs
  4502  006B1E  C016  F014         	movff	??_abs+1,?_abs+1
  4503  006B22  EF97  F035         	goto	l1089
  4504  006B26                     l1086:
  4505  006B26  C013  F013         	movff	abs@a,?_abs
  4506  006B2A  C014  F014         	movff	abs@a+1,?_abs+1
  4507  006B2E                     l1089:
  4508  006B2E  0012               	return		;funcret
  4509  006B30                     __end_of_abs:
  4510                           	callstack 0
  4511                           
  4512 ;; *************** function ___aomod *****************
  4513 ;; Defined at:
  4514 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/aomod.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  dividend        8    0[COMRAM] long long 
  4517 ;;  divisor         8    8[COMRAM] long long 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  sign            1   17[COMRAM] unsigned char 
  4520 ;;  counter         1   16[COMRAM] unsigned char 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  8    0[COMRAM] long long 
  4523 ;; Registers used:
  4524 ;;		wreg, status,2, status,0
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4530 ;;      Params:        16       0       0       0       0       0       0
  4531 ;;      Locals:         2       0       0       0       0       0       0
  4532 ;;      Temps:          0       0       0       0       0       0       0
  4533 ;;      Totals:        18       0       0       0       0       0       0
  4534 ;;Total ram usage:       18 bytes
  4535 ;; Hardware stack levels used: 1
  4536 ;; This function calls:
  4537 ;;		Nothing
  4538 ;; This function is called by:
  4539 ;;		_dtoa
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text25
  4544  0071A8                     __ptext25:
  4545                           	callstack 0
  4546  0071A8                     ___aomod:
  4547                           	callstack 25
  4548  0071A8  0E00               	movlw	0
  4549  0071AA  6E12               	movwf	___aomod@sign^0,c
  4550  0071AC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  4551  0071AE  EFDD  F038         	goto	u950
  4552  0071B2  EFDB  F038         	goto	u951
  4553  0071B6                     u951:
  4554  0071B6  EFEF  F038         	goto	l1990
  4555  0071BA                     u950:
  4556  0071BA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4557  0071BC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4558  0071BE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4559  0071C0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4560  0071C2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4561  0071C4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4562  0071C6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4563  0071C8  6C01               	negf	___aomod@dividend^0,c
  4564  0071CA  0E00               	movlw	0
  4565  0071CC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4566  0071CE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4567  0071D0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4568  0071D2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4569  0071D4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4570  0071D6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4571  0071D8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4572  0071DA  0E01               	movlw	1
  4573  0071DC  6E12               	movwf	___aomod@sign^0,c
  4574  0071DE                     l1990:
  4575  0071DE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  4576  0071E0  EFF6  F038         	goto	u960
  4577  0071E4  EFF4  F038         	goto	u961
  4578  0071E8                     u961:
  4579  0071E8  EF06  F039         	goto	l1994
  4580  0071EC                     u960:
  4581  0071EC  1E10               	comf	(___aomod@divisor+7)^0,f,c
  4582  0071EE  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  4583  0071F0  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  4584  0071F2  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  4585  0071F4  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  4586  0071F6  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  4587  0071F8  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  4588  0071FA  6C09               	negf	___aomod@divisor^0,c
  4589  0071FC  0E00               	movlw	0
  4590  0071FE  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  4591  007200  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  4592  007202  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  4593  007204  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  4594  007206  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  4595  007208  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  4596  00720A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  4597  00720C                     l1994:
  4598  00720C  5009               	movf	___aomod@divisor^0,w,c
  4599  00720E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  4600  007210  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  4601  007212  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  4602  007214  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  4603  007216  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  4604  007218  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  4605  00721A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  4606  00721C  B4D8               	btfsc	status,2,c
  4607  00721E  EF13  F039         	goto	u971
  4608  007222  EF15  F039         	goto	u970
  4609  007226                     u971:
  4610  007226  EF5D  F039         	goto	l2010
  4611  00722A                     u970:
  4612  00722A  0E01               	movlw	1
  4613  00722C  6E11               	movwf	___aomod@counter^0,c
  4614  00722E  EF23  F039         	goto	l2000
  4615  007232                     l1998:
  4616  007232  90D8               	bcf	status,0,c
  4617  007234  3609               	rlcf	___aomod@divisor^0,f,c
  4618  007236  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  4619  007238  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  4620  00723A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  4621  00723C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  4622  00723E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  4623  007240  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  4624  007242  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  4625  007244  2A11               	incf	___aomod@counter^0,f,c
  4626  007246                     l2000:
  4627  007246  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  4628  007248  EF28  F039         	goto	u981
  4629  00724C  EF2A  F039         	goto	u980
  4630  007250                     u981:
  4631  007250  EF19  F039         	goto	l1998
  4632  007254                     u980:
  4633  007254                     l2002:
  4634  007254  5009               	movf	___aomod@divisor^0,w,c
  4635  007256  5C01               	subwf	___aomod@dividend^0,w,c
  4636  007258  500A               	movf	(___aomod@divisor+1)^0,w,c
  4637  00725A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  4638  00725C  500B               	movf	(___aomod@divisor+2)^0,w,c
  4639  00725E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  4640  007260  500C               	movf	(___aomod@divisor+3)^0,w,c
  4641  007262  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  4642  007264  500D               	movf	(___aomod@divisor+4)^0,w,c
  4643  007266  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  4644  007268  500E               	movf	(___aomod@divisor+5)^0,w,c
  4645  00726A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  4646  00726C  500F               	movf	(___aomod@divisor+6)^0,w,c
  4647  00726E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  4648  007270  5010               	movf	(___aomod@divisor+7)^0,w,c
  4649  007272  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  4650  007274  A0D8               	btfss	status,0,c
  4651  007276  EF3F  F039         	goto	u991
  4652  00727A  EF41  F039         	goto	u990
  4653  00727E                     u991:
  4654  00727E  EF51  F039         	goto	l2006
  4655  007282                     u990:
  4656  007282  5009               	movf	___aomod@divisor^0,w,c
  4657  007284  5E01               	subwf	___aomod@dividend^0,f,c
  4658  007286  500A               	movf	(___aomod@divisor+1)^0,w,c
  4659  007288  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  4660  00728A  500B               	movf	(___aomod@divisor+2)^0,w,c
  4661  00728C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  4662  00728E  500C               	movf	(___aomod@divisor+3)^0,w,c
  4663  007290  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  4664  007292  500D               	movf	(___aomod@divisor+4)^0,w,c
  4665  007294  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  4666  007296  500E               	movf	(___aomod@divisor+5)^0,w,c
  4667  007298  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  4668  00729A  500F               	movf	(___aomod@divisor+6)^0,w,c
  4669  00729C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  4670  00729E  5010               	movf	(___aomod@divisor+7)^0,w,c
  4671  0072A0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  4672  0072A2                     l2006:
  4673  0072A2  90D8               	bcf	status,0,c
  4674  0072A4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  4675  0072A6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  4676  0072A8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  4677  0072AA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  4678  0072AC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  4679  0072AE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  4680  0072B0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  4681  0072B2  3209               	rrcf	___aomod@divisor^0,f,c
  4682  0072B4  2E11               	decfsz	___aomod@counter^0,f,c
  4683  0072B6  EF2A  F039         	goto	l2002
  4684  0072BA                     l2010:
  4685  0072BA  5012               	movf	___aomod@sign^0,w,c
  4686  0072BC  B4D8               	btfsc	status,2,c
  4687  0072BE  EF63  F039         	goto	u1001
  4688  0072C2  EF65  F039         	goto	u1000
  4689  0072C6                     u1001:
  4690  0072C6  EF75  F039         	goto	l2014
  4691  0072CA                     u1000:
  4692  0072CA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4693  0072CC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4694  0072CE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4695  0072D0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4696  0072D2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4697  0072D4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4698  0072D6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4699  0072D8  6C01               	negf	___aomod@dividend^0,c
  4700  0072DA  0E00               	movlw	0
  4701  0072DC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4702  0072DE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4703  0072E0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4704  0072E2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4705  0072E4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4706  0072E6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4707  0072E8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4708  0072EA                     l2014:
  4709  0072EA  C001  F001         	movff	___aomod@dividend,?___aomod
  4710  0072EE  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  4711  0072F2  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  4712  0072F6  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  4713  0072FA  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  4714  0072FE  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  4715  007302  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  4716  007306  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  4717  00730A  0012               	return		;funcret
  4718  00730C                     __end_of___aomod:
  4719                           	callstack 0
  4720                           
  4721 ;; *************** function ___aodiv *****************
  4722 ;; Defined at:
  4723 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/aodiv.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;  dividend        8    0[COMRAM] long long 
  4726 ;;  divisor         8    8[COMRAM] long long 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  quotient        8   18[COMRAM] long long 
  4729 ;;  sign            1   17[COMRAM] unsigned char 
  4730 ;;  counter         1   16[COMRAM] unsigned char 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  8    0[COMRAM] long long 
  4733 ;; Registers used:
  4734 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4740 ;;      Params:        16       0       0       0       0       0       0
  4741 ;;      Locals:        10       0       0       0       0       0       0
  4742 ;;      Temps:          0       0       0       0       0       0       0
  4743 ;;      Totals:        26       0       0       0       0       0       0
  4744 ;;Total ram usage:       26 bytes
  4745 ;; Hardware stack levels used: 1
  4746 ;; This function calls:
  4747 ;;		Nothing
  4748 ;; This function is called by:
  4749 ;;		_dtoa
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text26
  4754  00730C                     __ptext26:
  4755                           	callstack 0
  4756  00730C                     ___aodiv:
  4757                           	callstack 25
  4758  00730C  0E00               	movlw	0
  4759  00730E  6E12               	movwf	___aodiv@sign^0,c
  4760  007310  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  4761  007312  EF8F  F039         	goto	u880
  4762  007316  EF8D  F039         	goto	u881
  4763  00731A                     u881:
  4764  00731A  EFA1  F039         	goto	l1946
  4765  00731E                     u880:
  4766  00731E  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  4767  007320  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  4768  007322  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  4769  007324  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  4770  007326  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  4771  007328  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  4772  00732A  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  4773  00732C  6C09               	negf	___aodiv@divisor^0,c
  4774  00732E  0E00               	movlw	0
  4775  007330  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  4776  007332  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  4777  007334  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  4778  007336  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  4779  007338  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  4780  00733A  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  4781  00733C  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  4782  00733E  0E01               	movlw	1
  4783  007340  6E12               	movwf	___aodiv@sign^0,c
  4784  007342                     l1946:
  4785  007342  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  4786  007344  EFA8  F039         	goto	u890
  4787  007348  EFA6  F039         	goto	u891
  4788  00734C                     u891:
  4789  00734C  EFBA  F039         	goto	l1952
  4790  007350                     u890:
  4791  007350  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  4792  007352  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  4793  007354  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  4794  007356  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  4795  007358  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  4796  00735A  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  4797  00735C  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  4798  00735E  6C01               	negf	___aodiv@dividend^0,c
  4799  007360  0E00               	movlw	0
  4800  007362  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  4801  007364  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  4802  007366  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  4803  007368  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  4804  00736A  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  4805  00736C  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  4806  00736E  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  4807  007370  0E01               	movlw	1
  4808  007372  1A12               	xorwf	___aodiv@sign^0,f,c
  4809  007374                     l1952:
  4810  007374  EE20  F013         	lfsr	2,___aodiv@quotient
  4811  007378  0E07               	movlw	7
  4812  00737A                     u901:
  4813  00737A  6ADE               	clrf	postinc2,c
  4814  00737C  06E8               	decf	wreg,f,c
  4815  00737E  E2FD               	bc	u901
  4816  007380  5009               	movf	___aodiv@divisor^0,w,c
  4817  007382  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  4818  007384  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  4819  007386  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  4820  007388  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  4821  00738A  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  4822  00738C  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  4823  00738E  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  4824  007390  B4D8               	btfsc	status,2,c
  4825  007392  EFCD  F039         	goto	u911
  4826  007396  EFCF  F039         	goto	u910
  4827  00739A                     u911:
  4828  00739A  EF21  F03A         	goto	l1974
  4829  00739E                     u910:
  4830  00739E  0E01               	movlw	1
  4831  0073A0  6E11               	movwf	___aodiv@counter^0,c
  4832  0073A2  EFDD  F039         	goto	l1960
  4833  0073A6                     l1958:
  4834  0073A6  90D8               	bcf	status,0,c
  4835  0073A8  3609               	rlcf	___aodiv@divisor^0,f,c
  4836  0073AA  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  4837  0073AC  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  4838  0073AE  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  4839  0073B0  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  4840  0073B2  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  4841  0073B4  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  4842  0073B6  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  4843  0073B8  2A11               	incf	___aodiv@counter^0,f,c
  4844  0073BA                     l1960:
  4845  0073BA  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  4846  0073BC  EFE2  F039         	goto	u921
  4847  0073C0  EFE4  F039         	goto	u920
  4848  0073C4                     u921:
  4849  0073C4  EFD3  F039         	goto	l1958
  4850  0073C8                     u920:
  4851  0073C8                     l1962:
  4852  0073C8  90D8               	bcf	status,0,c
  4853  0073CA  3613               	rlcf	___aodiv@quotient^0,f,c
  4854  0073CC  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  4855  0073CE  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  4856  0073D0  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  4857  0073D2  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  4858  0073D4  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  4859  0073D6  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  4860  0073D8  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  4861  0073DA  5009               	movf	___aodiv@divisor^0,w,c
  4862  0073DC  5C01               	subwf	___aodiv@dividend^0,w,c
  4863  0073DE  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4864  0073E0  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  4865  0073E2  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4866  0073E4  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  4867  0073E6  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4868  0073E8  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  4869  0073EA  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4870  0073EC  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  4871  0073EE  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4872  0073F0  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  4873  0073F2  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4874  0073F4  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  4875  0073F6  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4876  0073F8  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  4877  0073FA  A0D8               	btfss	status,0,c
  4878  0073FC  EF02  F03A         	goto	u931
  4879  007400  EF04  F03A         	goto	u930
  4880  007404                     u931:
  4881  007404  EF15  F03A         	goto	l1970
  4882  007408                     u930:
  4883  007408  5009               	movf	___aodiv@divisor^0,w,c
  4884  00740A  5E01               	subwf	___aodiv@dividend^0,f,c
  4885  00740C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4886  00740E  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  4887  007410  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4888  007412  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  4889  007414  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4890  007416  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  4891  007418  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4892  00741A  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  4893  00741C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4894  00741E  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  4895  007420  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4896  007422  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  4897  007424  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4898  007426  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  4899  007428  8013               	bsf	___aodiv@quotient^0,0,c
  4900  00742A                     l1970:
  4901  00742A  90D8               	bcf	status,0,c
  4902  00742C  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  4903  00742E  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  4904  007430  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  4905  007432  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  4906  007434  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  4907  007436  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  4908  007438  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  4909  00743A  3209               	rrcf	___aodiv@divisor^0,f,c
  4910  00743C  2E11               	decfsz	___aodiv@counter^0,f,c
  4911  00743E  EFE4  F039         	goto	l1962
  4912  007442                     l1974:
  4913  007442  5012               	movf	___aodiv@sign^0,w,c
  4914  007444  B4D8               	btfsc	status,2,c
  4915  007446  EF27  F03A         	goto	u941
  4916  00744A  EF29  F03A         	goto	u940
  4917  00744E                     u941:
  4918  00744E  EF39  F03A         	goto	l1978
  4919  007452                     u940:
  4920  007452  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  4921  007454  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  4922  007456  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  4923  007458  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  4924  00745A  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  4925  00745C  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  4926  00745E  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  4927  007460  6C13               	negf	___aodiv@quotient^0,c
  4928  007462  0E00               	movlw	0
  4929  007464  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  4930  007466  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  4931  007468  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  4932  00746A  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  4933  00746C  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  4934  00746E  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  4935  007470  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  4936  007472                     l1978:
  4937  007472  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4938  007476  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4939  00747A  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4940  00747E  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4941  007482  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4942  007486  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4943  00748A  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4944  00748E  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4945  007492  0012               	return		;funcret
  4946  007494                     __end_of___aodiv:
  4947                           	callstack 0
  4948                           
  4949 ;; *************** function _SPI_Open *****************
  4950 ;; Defined at:
  4951 ;;		line 72 in file "mcc_generated_files/spi.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;  spiUniqueCon    1    wreg     enum E355
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;  spiUniqueCon    1    1[COMRAM] enum E355
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      _Bool 
  4958 ;; Registers used:
  4959 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4965 ;;      Params:         0       0       0       0       0       0       0
  4966 ;;      Locals:         1       0       0       0       0       0       0
  4967 ;;      Temps:          1       0       0       0       0       0       0
  4968 ;;      Totals:         2       0       0       0       0       0       0
  4969 ;;Total ram usage:        2 bytes
  4970 ;; Hardware stack levels used: 1
  4971 ;; This function calls:
  4972 ;;		Nothing
  4973 ;; This function is called by:
  4974 ;;		_demoAnimated
  4975 ;;		_demoSimple
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	text27
  4980  006D68                     __ptext27:
  4981                           	callstack 0
  4982  006D68                     _SPI_Open:
  4983                           	callstack 29
  4984                           
  4985                           ;incstack = 0
  4986                           ;SPI_Open@spiUniqueConfiguration stored from wreg
  4987  006D68  6E02               	movwf	SPI_Open@spiUniqueConfiguration^0,c
  4988  006D6A                     
  4989                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
  4990  006D6A  BAC6               	btfsc	198,5,c	;volatile
  4991  006D6C  EFBA  F036         	goto	u1401
  4992  006D70  EFBC  F036         	goto	u1400
  4993  006D74                     u1401:
  4994  006D74  EFFF  F036         	goto	l79
  4995  006D78                     u1400:
  4996  006D78                     
  4997                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
  4998  006D78  5002               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
  4999  006D7A  0D04               	mullw	4
  5000  006D7C  0E01               	movlw	1
  5001  006D7E  26F3               	addwf	243,f,c
  5002  006D80  0E00               	movlw	0
  5003  006D82  22F4               	addwfc	244,f,c
  5004  006D84  0EE0               	movlw	low _spi_configuration
  5005  006D86  24F3               	addwf	243,w,c
  5006  006D88  6EF6               	movwf	tblptrl,c
  5007  006D8A  0E7F               	movlw	high _spi_configuration
  5008  006D8C  20F4               	addwfc	244,w,c
  5009  006D8E  6EF7               	movwf	tblptrh,c
  5010  006D90                     	if	0	;There are less than 3 active tblptr bytes
  5011  006D90                     	endif
  5012  006D90  0008               	tblrd		*
  5013  006D92  CFF5 FFC7          	movff	tablat,4039	;volatile
  5014                           
  5015                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
  5016  006D96  5002               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
  5017  006D98  0D04               	mullw	4
  5018  006D9A  0EE0               	movlw	low _spi_configuration
  5019  006D9C  24F3               	addwf	243,w,c
  5020  006D9E  6EF6               	movwf	tblptrl,c
  5021  006DA0  0E7F               	movlw	high _spi_configuration
  5022  006DA2  20F4               	addwfc	244,w,c
  5023  006DA4  6EF7               	movwf	tblptrh,c
  5024  006DA6                     	if	0	;There are less than 3 active tblptr bytes
  5025  006DA6                     	endif
  5026  006DA6  0008               	tblrd		*
  5027  006DA8  CFF5 FFC6          	movff	tablat,4038	;volatile
  5028  006DAC                     
  5029                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
  5030  006DAC  0E00               	movlw	0
  5031  006DAE  6EC5               	movwf	197,c	;volatile
  5032  006DB0                     
  5033                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
  5034  006DB0  5002               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
  5035  006DB2  0D04               	mullw	4
  5036  006DB4  0E02               	movlw	2
  5037  006DB6  26F3               	addwf	243,f,c
  5038  006DB8  0E00               	movlw	0
  5039  006DBA  22F4               	addwfc	244,f,c
  5040  006DBC  0EE0               	movlw	low _spi_configuration
  5041  006DBE  24F3               	addwf	243,w,c
  5042  006DC0  6EF6               	movwf	tblptrl,c
  5043  006DC2  0E7F               	movlw	high _spi_configuration
  5044  006DC4  20F4               	addwfc	244,w,c
  5045  006DC6  6EF7               	movwf	tblptrh,c
  5046  006DC8                     	if	0	;There are less than 3 active tblptr bytes
  5047  006DC8                     	endif
  5048  006DC8  0008               	tblrd		*
  5049  006DCA  CFF5 FFC8          	movff	tablat,4040	;volatile
  5050  006DCE                     
  5051                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
  5052  006DCE  5002               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
  5053  006DD0  0D04               	mullw	4
  5054  006DD2  0E03               	movlw	3
  5055  006DD4  26F3               	addwf	243,f,c
  5056  006DD6  0E00               	movlw	0
  5057  006DD8  22F4               	addwfc	244,f,c
  5058  006DDA  0EE0               	movlw	low _spi_configuration
  5059  006DDC  24F3               	addwf	243,w,c
  5060  006DDE  6EF6               	movwf	tblptrl,c
  5061  006DE0  0E7F               	movlw	high _spi_configuration
  5062  006DE2  20F4               	addwfc	244,w,c
  5063  006DE4  6EF7               	movwf	tblptrh,c
  5064  006DE6                     	if	0	;There are less than 3 active tblptr bytes
  5065  006DE6                     	endif
  5066  006DE6  0008               	tblrd		*
  5067  006DE8  CFF5 F001          	movff	tablat,??_SPI_Open
  5068  006DEC  4601               	rlncf	??_SPI_Open^0,f,c
  5069  006DEE  4601               	rlncf	??_SPI_Open^0,f,c
  5070  006DF0  4601               	rlncf	??_SPI_Open^0,f,c
  5071  006DF2  5094               	movf	148,w,c	;volatile
  5072  006DF4  1801               	xorwf	??_SPI_Open^0,w,c
  5073  006DF6  0BF7               	andlw	-9
  5074  006DF8  1801               	xorwf	??_SPI_Open^0,w,c
  5075  006DFA  6E94               	movwf	148,c	;volatile
  5076  006DFC                     
  5077                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
  5078  006DFC  8AC6               	bsf	198,5,c	;volatile
  5079  006DFE                     l79:
  5080  006DFE  0012               	return		;funcret
  5081  006E00                     __end_of_SPI_Open:
  5082                           	callstack 0
  5083                           
  5084 ;; *************** function _SYSTEM_Initialize *****************
  5085 ;; Defined at:
  5086 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;		None
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;		None
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      void 
  5093 ;; Registers used:
  5094 ;;		wreg, status,2, cstack
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5100 ;;      Params:         0       0       0       0       0       0       0
  5101 ;;      Locals:         0       0       0       0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0       0       0
  5103 ;;      Totals:         0       0       0       0       0       0       0
  5104 ;;Total ram usage:        0 bytes
  5105 ;; Hardware stack levels used: 1
  5106 ;; Hardware stack levels required when called: 1
  5107 ;; This function calls:
  5108 ;;		_OSCILLATOR_Initialize
  5109 ;;		_PIN_MANAGER_Initialize
  5110 ;;		_SPI_Initialize
  5111 ;;		_TMR2_Initialize
  5112 ;; This function is called by:
  5113 ;;		_main
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117                           	psect	text28
  5118  0069FE                     __ptext28:
  5119                           	callstack 0
  5120  0069FE                     _SYSTEM_Initialize:
  5121                           	callstack 29
  5122  0069FE                     
  5123                           ;mcc_generated_files/mcc.c: 53:     SPI_Initialize();
  5124  0069FE  ECF6  F034         	call	_SPI_Initialize	;wreg free
  5125                           
  5126                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5127  006A02  EC40  F035         	call	_PIN_MANAGER_Initialize	;wreg free
  5128                           
  5129                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5130  006A06  ECCF  F034         	call	_OSCILLATOR_Initialize	;wreg free
  5131                           
  5132                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  5133  006A0A  ECE6  F034         	call	_TMR2_Initialize	;wreg free
  5134  006A0E  0012               	return		;funcret
  5135  006A10                     __end_of_SYSTEM_Initialize:
  5136                           	callstack 0
  5137                           
  5138 ;; *************** function _TMR2_Initialize *****************
  5139 ;; Defined at:
  5140 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;		None
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;		None
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  1    wreg      void 
  5147 ;; Registers used:
  5148 ;;		wreg, status,2
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5154 ;;      Params:         0       0       0       0       0       0       0
  5155 ;;      Locals:         0       0       0       0       0       0       0
  5156 ;;      Temps:          0       0       0       0       0       0       0
  5157 ;;      Totals:         0       0       0       0       0       0       0
  5158 ;;Total ram usage:        0 bytes
  5159 ;; Hardware stack levels used: 1
  5160 ;; This function calls:
  5161 ;;		Nothing
  5162 ;; This function is called by:
  5163 ;;		_SYSTEM_Initialize
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           	psect	text29
  5168  0069CC                     __ptext29:
  5169                           	callstack 0
  5170  0069CC                     _TMR2_Initialize:
  5171                           	callstack 29
  5172  0069CC                     
  5173                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x7F;
  5174  0069CC  0E7F               	movlw	127
  5175  0069CE  6ECB               	movwf	203,c	;volatile
  5176                           
  5177                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  5178  0069D0  0E00               	movlw	0
  5179  0069D2  6ECC               	movwf	204,c	;volatile
  5180  0069D4                     
  5181                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  5182  0069D4  929E               	bcf	158,1,c	;volatile
  5183                           
  5184                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x00;
  5185  0069D6  0E00               	movlw	0
  5186  0069D8  6ECA               	movwf	202,c	;volatile
  5187  0069DA  0012               	return		;funcret
  5188  0069DC                     __end_of_TMR2_Initialize:
  5189                           	callstack 0
  5190                           
  5191 ;; *************** function _SPI_Initialize *****************
  5192 ;; Defined at:
  5193 ;;		line 62 in file "mcc_generated_files/spi.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;		None
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;		None
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  1    wreg      void 
  5200 ;; Registers used:
  5201 ;;		wreg, status,2
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5207 ;;      Params:         0       0       0       0       0       0       0
  5208 ;;      Locals:         0       0       0       0       0       0       0
  5209 ;;      Temps:          0       0       0       0       0       0       0
  5210 ;;      Totals:         0       0       0       0       0       0       0
  5211 ;;Total ram usage:        0 bytes
  5212 ;; Hardware stack levels used: 1
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		_SYSTEM_Initialize
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text30
  5221  0069EC                     __ptext30:
  5222                           	callstack 0
  5223  0069EC                     _SPI_Initialize:
  5224                           	callstack 29
  5225  0069EC                     
  5226                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
  5227  0069EC  0E40               	movlw	64
  5228  0069EE  6EC7               	movwf	199,c	;volatile
  5229                           
  5230                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
  5231  0069F0  0E00               	movlw	0
  5232  0069F2  6EC6               	movwf	198,c	;volatile
  5233                           
  5234                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
  5235  0069F4  0E01               	movlw	1
  5236  0069F6  6EC8               	movwf	200,c	;volatile
  5237  0069F8                     
  5238                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
  5239  0069F8  9694               	bcf	148,3,c	;volatile
  5240  0069FA                     
  5241                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
  5242  0069FA  9AC6               	bcf	198,5,c	;volatile
  5243  0069FC  0012               	return		;funcret
  5244  0069FE                     __end_of_SPI_Initialize:
  5245                           	callstack 0
  5246                           
  5247 ;; *************** function _PIN_MANAGER_Initialize *****************
  5248 ;; Defined at:
  5249 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      void 
  5256 ;; Registers used:
  5257 ;;		wreg, status,2
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5263 ;;      Params:         0       0       0       0       0       0       0
  5264 ;;      Locals:         0       0       0       0       0       0       0
  5265 ;;      Temps:          0       0       0       0       0       0       0
  5266 ;;      Totals:         0       0       0       0       0       0       0
  5267 ;;Total ram usage:        0 bytes
  5268 ;; Hardware stack levels used: 1
  5269 ;; This function calls:
  5270 ;;		Nothing
  5271 ;; This function is called by:
  5272 ;;		_SYSTEM_Initialize
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text31
  5277  006A80                     __ptext31:
  5278                           	callstack 0
  5279  006A80                     _PIN_MANAGER_Initialize:
  5280                           	callstack 29
  5281  006A80                     
  5282                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  5283  006A80  0E00               	movlw	0
  5284  006A82  6E8D               	movwf	141,c	;volatile
  5285                           
  5286                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  5287  006A84  0E00               	movlw	0
  5288  006A86  6E8C               	movwf	140,c	;volatile
  5289                           
  5290                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  5291  006A88  0E00               	movlw	0
  5292  006A8A  6E89               	movwf	137,c	;volatile
  5293                           
  5294                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  5295  006A8C  0E00               	movlw	0
  5296  006A8E  6E8A               	movwf	138,c	;volatile
  5297                           
  5298                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  5299  006A90  0E00               	movlw	0
  5300  006A92  6E8B               	movwf	139,c	;volatile
  5301                           
  5302                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  5303  006A94  0E07               	movlw	7
  5304  006A96  6E96               	movwf	150,c	;volatile
  5305  006A98                     
  5306                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  5307  006A98  6892               	setf	146,c	;volatile
  5308  006A9A                     
  5309                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  5310  006A9A  6893               	setf	147,c	;volatile
  5311                           
  5312                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xD7;
  5313  006A9C  0ED7               	movlw	215
  5314  006A9E  6E94               	movwf	148,c	;volatile
  5315                           
  5316                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x78;
  5317  006AA0  0E78               	movlw	120
  5318  006AA2  6E95               	movwf	149,c	;volatile
  5319  006AA4                     
  5320                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  5321  006AA4  687E               	setf	126,c	;volatile
  5322                           
  5323                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  5324  006AA6  0E1F               	movlw	31
  5325  006AA8  6E7F               	movwf	127,c	;volatile
  5326                           
  5327                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  5328  006AAA  0E00               	movlw	0
  5329  006AAC  6E7C               	movwf	124,c	;volatile
  5330  006AAE                     
  5331                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  5332  006AAE  8EF1               	bsf	241,7,c	;volatile
  5333  006AB0  0012               	return		;funcret
  5334  006AB2                     __end_of_PIN_MANAGER_Initialize:
  5335                           	callstack 0
  5336                           
  5337 ;; *************** function _OSCILLATOR_Initialize *****************
  5338 ;; Defined at:
  5339 ;;		line 59 in file "mcc_generated_files/mcc.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;		None
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      void 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5353 ;;      Params:         0       0       0       0       0       0       0
  5354 ;;      Locals:         0       0       0       0       0       0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0
  5356 ;;      Totals:         0       0       0       0       0       0       0
  5357 ;;Total ram usage:        0 bytes
  5358 ;; Hardware stack levels used: 1
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		_SYSTEM_Initialize
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text32
  5367  00699E                     __ptext32:
  5368                           	callstack 0
  5369  00699E                     _OSCILLATOR_Initialize:
  5370                           	callstack 29
  5371  00699E                     
  5372                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x60;
  5373  00699E  0E60               	movlw	96
  5374  0069A0  6ED3               	movwf	211,c	;volatile
  5375                           
  5376                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x40;
  5377  0069A2  0E40               	movlw	64
  5378  0069A4  6E9B               	movwf	155,c	;volatile
  5379  0069A6  0012               	return		;funcret
  5380  0069A8                     __end_of_OSCILLATOR_Initialize:
  5381                           	callstack 0
  5382                           
  5383                           	psect	rparam
  5384  0000                     
  5385                           	psect	idloc
  5386                           
  5387                           ;Config register IDLOC0 @ 0x200000
  5388                           ;	unspecified, using default values
  5389  200000                     	org	2097152
  5390  200000  FF                 	db	255
  5391                           
  5392                           ;Config register IDLOC1 @ 0x200001
  5393                           ;	unspecified, using default values
  5394  200001                     	org	2097153
  5395  200001  FF                 	db	255
  5396                           
  5397                           ;Config register IDLOC2 @ 0x200002
  5398                           ;	unspecified, using default values
  5399  200002                     	org	2097154
  5400  200002  FF                 	db	255
  5401                           
  5402                           ;Config register IDLOC3 @ 0x200003
  5403                           ;	unspecified, using default values
  5404  200003                     	org	2097155
  5405  200003  FF                 	db	255
  5406                           
  5407                           ;Config register IDLOC4 @ 0x200004
  5408                           ;	unspecified, using default values
  5409  200004                     	org	2097156
  5410  200004  FF                 	db	255
  5411                           
  5412                           ;Config register IDLOC5 @ 0x200005
  5413                           ;	unspecified, using default values
  5414  200005                     	org	2097157
  5415  200005  FF                 	db	255
  5416                           
  5417                           ;Config register IDLOC6 @ 0x200006
  5418                           ;	unspecified, using default values
  5419  200006                     	org	2097158
  5420  200006  FF                 	db	255
  5421                           
  5422                           ;Config register IDLOC7 @ 0x200007
  5423                           ;	unspecified, using default values
  5424  200007                     	org	2097159
  5425  200007  FF                 	db	255
  5426                           
  5427                           	psect	config
  5428                           
  5429                           ; Padding undefined space
  5430  300000                     	org	3145728
  5431  300000  FF                 	db	255
  5432                           
  5433                           ;Config register CONFIG1H @ 0x300001
  5434                           ;	Oscillator Selection bits
  5435                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  5436                           ;	Fail-Safe Clock Monitor Enable bit
  5437                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5438                           ;	Internal/External Oscillator Switchover bit
  5439                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5440  300001                     	org	3145729
  5441  300001  08                 	db	8
  5442                           
  5443                           ;Config register CONFIG2L @ 0x300002
  5444                           ;	Power-up Timer Enable bit
  5445                           ;	PWRT = OFF, PWRT disabled
  5446                           ;	Brown-out Reset Enable bits
  5447                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5448                           ;	Brown Out Reset Voltage bits
  5449                           ;	BORV = 18, VBOR set to 1.8 V nominal
  5450  300002                     	org	3145730
  5451  300002  1F                 	db	31
  5452                           
  5453                           ;Config register CONFIG2H @ 0x300003
  5454                           ;	Watchdog Timer Enable bit
  5455                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  5456                           ;	Watchdog Timer Postscale Select bits
  5457                           ;	WDTPS = 32768, 1:32768
  5458  300003                     	org	3145731
  5459  300003  1E                 	db	30
  5460                           
  5461                           ; Padding undefined space
  5462  300004                     	org	3145732
  5463  300004  FF                 	db	255
  5464                           
  5465                           ;Config register CONFIG3H @ 0x300005
  5466                           ;	CCP2 MUX bit
  5467                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5468                           ;	PORTB A/D Enable bit
  5469                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5470                           ;	Low-Power Timer1 Oscillator Enable bit
  5471                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5472                           ;	HFINTOSC Fast Start-up
  5473                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  5474                           ;	MCLR Pin Enable bit
  5475                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5476  300005                     	org	3145733
  5477  300005  0B                 	db	11
  5478                           
  5479                           ;Config register CONFIG4L @ 0x300006
  5480                           ;	Stack Full/Underflow Reset Enable bit
  5481                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5482                           ;	Single-Supply ICSP Enable bit
  5483                           ;	LVP = OFF, Single-Supply ICSP disabled
  5484                           ;	Extended Instruction Set Enable bit
  5485                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5486                           ;	Background Debugger Enable bit
  5487                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5488  300006                     	org	3145734
  5489  300006  81                 	db	129
  5490                           
  5491                           ; Padding undefined space
  5492  300007                     	org	3145735
  5493  300007  FF                 	db	255
  5494                           
  5495                           ;Config register CONFIG5L @ 0x300008
  5496                           ;	Code Protection Block 0
  5497                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5498                           ;	Code Protection Block 1
  5499                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5500                           ;	Code Protection Block 2
  5501                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5502                           ;	Code Protection Block 3
  5503                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5504  300008                     	org	3145736
  5505  300008  0F                 	db	15
  5506                           
  5507                           ;Config register CONFIG5H @ 0x300009
  5508                           ;	Boot Block Code Protection bit
  5509                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5510                           ;	Data EEPROM Code Protection bit
  5511                           ;	CPD = OFF, Data EEPROM not code-protected
  5512  300009                     	org	3145737
  5513  300009  C0                 	db	192
  5514                           
  5515                           ;Config register CONFIG6L @ 0x30000A
  5516                           ;	Write Protection Block 0
  5517                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5518                           ;	Write Protection Block 1
  5519                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5520                           ;	Write Protection Block 2
  5521                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5522                           ;	Write Protection Block 3
  5523                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5524  30000A                     	org	3145738
  5525  30000A  0F                 	db	15
  5526                           
  5527                           ;Config register CONFIG6H @ 0x30000B
  5528                           ;	Configuration Register Write Protection bit
  5529                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5530                           ;	Boot Block Write Protection bit
  5531                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5532                           ;	Data EEPROM Write Protection bit
  5533                           ;	WRTD = OFF, Data EEPROM not write-protected
  5534  30000B                     	org	3145739
  5535  30000B  E0                 	db	224
  5536                           
  5537                           ;Config register CONFIG7L @ 0x30000C
  5538                           ;	Table Read Protection Block 0
  5539                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5540                           ;	Table Read Protection Block 1
  5541                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5542                           ;	Table Read Protection Block 2
  5543                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5544                           ;	Table Read Protection Block 3
  5545                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5546  30000C                     	org	3145740
  5547  30000C  0F                 	db	15
  5548                           
  5549                           ;Config register CONFIG7H @ 0x30000D
  5550                           ;	Boot Block Table Read Protection bit
  5551                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5552  30000D                     	org	3145741
  5553  30000D  40                 	db	64
  5554                           tosu	equ	0xFFF
  5555                           tosh	equ	0xFFE
  5556                           tosl	equ	0xFFD
  5557                           stkptr	equ	0xFFC
  5558                           pclatu	equ	0xFFB
  5559                           pclath	equ	0xFFA
  5560                           pcl	equ	0xFF9
  5561                           tblptru	equ	0xFF8
  5562                           tblptrh	equ	0xFF7
  5563                           tblptrl	equ	0xFF6
  5564                           tablat	equ	0xFF5
  5565                           prodh	equ	0xFF4
  5566                           prodl	equ	0xFF3
  5567                           indf0	equ	0xFEF
  5568                           postinc0	equ	0xFEE
  5569                           postdec0	equ	0xFED
  5570                           preinc0	equ	0xFEC
  5571                           plusw0	equ	0xFEB
  5572                           fsr0h	equ	0xFEA
  5573                           fsr0l	equ	0xFE9
  5574                           wreg	equ	0xFE8
  5575                           indf1	equ	0xFE7
  5576                           postinc1	equ	0xFE6
  5577                           postdec1	equ	0xFE5
  5578                           preinc1	equ	0xFE4
  5579                           plusw1	equ	0xFE3
  5580                           fsr1h	equ	0xFE2
  5581                           fsr1l	equ	0xFE1
  5582                           bsr	equ	0xFE0
  5583                           indf2	equ	0xFDF
  5584                           postinc2	equ	0xFDE
  5585                           postdec2	equ	0xFDD
  5586                           preinc2	equ	0xFDC
  5587                           plusw2	equ	0xFDB
  5588                           fsr2h	equ	0xFDA
  5589                           fsr2l	equ	0xFD9
  5590                           status	equ	0xFD8

Data Sizes:
    Strings     19
    Constant    486
    Data        0
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160     26      68
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), STR_3(CODE[13]), STR_1(CODE[13]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), STR_3(CODE[13]), STR_1(CODE[13]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> demoAnimated@idString(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1022$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1022$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    tftstDrawText@_text	PTR unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _demoAnimated->_sprintf
    _tftstReadId->_tftstWriteData
    _tftstInit->_tftstWriteCommand
    _tftstInit->_tftstWriteData
    _tftstFillScreen->_tftstSetWindow
    _tftstDrawText->_tftstDrawChar
    _tftstDrawChar->_tftstFillRect
    _tftstFillRect->_tftstSetWindow
    _tftstDrawPixel->_tftstSetWindow
    _tftstDrawHorizontalLine->_tftstSetWindow
    _tftstWriteColor->_tftstWriteData
    _tftstSetWindow->_tftstWriteCommand
    _tftstSetWindow->_tftstWriteData
    _tftstWriteData->_SPI_ExchangeByte
    _tftstWriteCommand->_SPI_ExchangeByte
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod

Critical Paths under _main in BANK0

    _main->_demoAnimated
    _demoAnimated->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   19845
                  _SYSTEM_Initialize
                       _demoAnimated
 ---------------------------------------------------------------------------------
 (1) _demoAnimated                                        13    13      0   19845
                                             13 BANK0     13    13      0
                           _SPI_Open
                            _sprintf
            _tftstDrawHorizontalLine
                      _tftstDrawText
                    _tftstFillScreen
                          _tftstInit
                        _tftstReadId
 ---------------------------------------------------------------------------------
 (2) _tftstReadId                                          1     1      0      89
                                              2 COMRAM     1     1      0
                   _SPI_ExchangeByte
                     _tftstWriteData
 ---------------------------------------------------------------------------------
 (2) _tftstInit                                            2     2      0      88
                                              2 COMRAM     2     2      0
                  _tftstWriteCommand
                     _tftstWriteData
 ---------------------------------------------------------------------------------
 (2) _tftstFillScreen                                      4     2      2    2057
                                              6 COMRAM     4     2      2
                     _tftstSetWindow
                    _tftstWriteColor
 ---------------------------------------------------------------------------------
 (2) _tftstDrawText                                       17     9      8    7755
                                             33 COMRAM    17     9      8
                             _strlen
                      _tftstDrawChar
 ---------------------------------------------------------------------------------
 (3) _tftstDrawChar                                       17    10      7    6259
                                             16 COMRAM    17    10      7
                     _tftstDrawPixel
                      _tftstFillRect
 ---------------------------------------------------------------------------------
 (4) _tftstFillRect                                       10     5      5    2638
                                              6 COMRAM    10     5      5
                     _tftstSetWindow
                    _tftstWriteColor
 ---------------------------------------------------------------------------------
 (4) _tftstDrawPixel                                       4     1      3    2198
                                              6 COMRAM     4     1      3
                     _tftstSetWindow
                    _tftstWriteColor
 ---------------------------------------------------------------------------------
 (2) _tftstDrawHorizontalLine                              6     2      4    2873
                                              6 COMRAM     6     2      4
                     _tftstSetWindow
                    _tftstWriteColor
 ---------------------------------------------------------------------------------
 (3) _tftstWriteColor                                      2     0      2     468
                                              2 COMRAM     2     0      2
                     _tftstWriteData
 ---------------------------------------------------------------------------------
 (3) _tftstSetWindow                                       4     1      3    1316
                                              2 COMRAM     4     1      3
                  _tftstWriteCommand
                     _tftstWriteData
 ---------------------------------------------------------------------------------
 (3) _tftstWriteData                                       1     1      0      44
                                              1 COMRAM     1     1      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _tftstWriteCommand                                    1     1      0      44
                                              1 COMRAM     1     1      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _SPI_ExchangeByte                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    6532
                                             87 COMRAM     6     0      6
                                              0 BANK0     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6181
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5827
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4434
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2785
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _SPI_Open                                             2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR2_Initialize
   _demoAnimated
     _SPI_Open
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
     _tftstDrawHorizontalLine
       _tftstSetWindow
         _tftstWriteCommand
           _SPI_ExchangeByte
         _tftstWriteData
           _SPI_ExchangeByte
       _tftstWriteColor
         _tftstWriteData
     _tftstDrawText
       _strlen
       _tftstDrawChar
         _tftstDrawPixel
           _tftstSetWindow
           _tftstWriteColor
         _tftstFillRect
           _tftstSetWindow
           _tftstWriteColor
     _tftstFillScreen
       _tftstSetWindow
       _tftstWriteColor
     _tftstInit
       _tftstWriteCommand
       _tftstWriteData
     _tftstReadId
       _SPI_ExchangeByte
       _tftstWriteData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1A      44       5       42.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITBIGSFRlhlh       26      0       0      19        0.0%
BITBIGSFRhl         1D      0       0      17        0.0%
BITBIGSFRllllll     1C      0       0      25        0.0%
BITBIGSFRhh          D      0       0      16        0.0%
BITBIGSFRllllh       9      0       0      23        0.0%
BITBIGSFRlhhh        6      0       0      18        0.0%
BITBIGSFRllhh        4      0       0      21        0.0%
BITBIGSFRllhll       4      0       0      22        0.0%
BITBIGSFRlhll        2      0       0      20        0.0%
BITBIGSFRlllllh      1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A3      26        0.0%
DATA                 0      0      A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Oct  2 14:00:27 2022

         __end_of_tftstDrawPixel 6A80                   _SPI_Initialize 69EC  
                             l15 6A0E                               l18 69A6  
                             l51 6AB0                               l75 69FC  
                             l85 6A16                               l79 6DFE  
                             l87 6A24                               l88 6A28  
                            l212 69EA                              l221 6A7E  
                            l302 7E02                              l311 7084  
                            l128 69DA                              l209 6BB8  
                            l242 6D66                              l218 6BFE  
                            l227 6AEE                              l251 7844  
                            l260 774A                              l253 76A6  
                            l182 69CA                              l185 69B0  
                            l193 6A36                              l329 69BA  
                            l178 69C0                              l196 6A42  
                            l188 6A2A                              l446 7492  
                            l294 7B24                              l279 71A6  
                            l297 7B40                              l459 730A  
                            _PR2 000FCB                              u800 6ED4  
                            u801 6ED0                              u810 6EE6  
                            u811 6EE2                              u820 6F0E  
                            u901 737A                              u821 6F0A  
                            u910 739E                              u830 6F44  
                            u911 739A                              u831 6F40  
                            u920 73C8                              u840 6A24  
                            u921 73C4                              u841 6A20  
                            u930 7408                              u850 6C30  
                            u931 7404                              u940 7452  
                            u860 6C40                              u941 744E  
                            u861 6C3C                              u950 71BA  
                            u870 6B72                              u951 71B6  
                            u871 6B6E                              u880 731E  
                            u960 71EC                              u881 731A  
                            u961 71E8                              u857 6C26  
                            u890 7350                              u970 722A  
                            u891 734C                              u971 7226  
                            u980 7254                              u981 7250  
                            u990 7282                              u991 727E  
                            _abs 6AF0                              _pad 6E00  
                _TMR2_Initialize 69CC                              wreg 000FE8  
                 _tftstWriteData 69A8                   ?_tftstFillRect 0007  
                 ?_tftstDrawChar 0011                   ?_tftstDrawText 0022  
                __end_of_FRM_CNT 7FE7                             l1010 6C9E  
                           l1101 6F8A                             l2000 7246  
                           l1112 699C                             l1040 6E86  
                           l2002 7254                             l2010 72BA  
                           l1042 6EC0                             l1050 78EE  
                           ?_abs 0013                             l2012 72CA  
                           l2004 7282                             l2020 6E0E  
                           l2100 7AC4                             l1109 6B72  
                           l1037 6E44                             l2014 72EA  
                           l2006 72A2                             l1126 6C4C  
                           l2030 6E64                             l2022 6E22  
                           l2102 7AD6                             l2008 72B4  
                           l2040 6AF0                             l2032 6E68  
                           l2024 6E30                             l2104 7AE2  
                           l1048 78E6                             l2112 6A60  
                           l2120 6D32                             l1081 6CF8  
                           l2042 6B0A                             l2034 6E94  
                           l2026 6E3C                             l2018 6E00  
                           l2106 7AEA                             l2050 7846  
                           l2130 7494                             l1082 6D00  
                           l2122 6D3E                             l2114 6D04  
                           l2210 77C4                             l2202 7758  
                           l1075 7646                             l2036 6EA8  
                           l2028 6E50                             l1068 7B22  
                           l2108 7AFA                             l2060 78C0  
                           l2052 7866                             l2140 7500  
                           l2132 74B8                             l2044 6B76  
                           l2124 6D40                             l2116 6D22  
                           l2220 781A                             l2212 77D4  
                           l2204 7768                             l2300 7106  
                           l1086 6B26                             l2070 791C  
                           l2062 78DA                             l2054 788E  
                           l2150 75C8                             l2142 7524  
                           l2134 74C6                             l2230 6CB6  
                           l2046 69DC                             l2126 6D52  
                           l2118 6D2A                             l2222 782E  
                           l2214 77EE                             l2206 7782  
                           l2310 7178                             l2302 710A  
                           l2240 6DB0                             l2080 79BA  
                           l2072 7924                             l2064 78F6  
                           l2056 78AE                             l2160 7604  
                           l2152 75D6                             l2144 756C  
                           l2136 74D8                             l2232 6CDC  
                           l2048 69E2                             l2128 6D54  
                           l2224 7830                             l2216 7814  
                           l2208 77AC                             l2312 7188  
                           l2400 7CC2                             l2320 7B3E  
                           l1089 6B2E                             l2242 6DCE  
                           l2234 6D6A                             l2090 7A76  
                           l2082 79C0                             l2074 792C  
                           l2066 7908                             l2058 78BE  
                           l2154 75EA                             l2138 74DC  
                           l2226 6CA0                             l2218 7816  
                           l2314 718C                             l2306 7136  
                           l2410 7CE0                             l2402 7CC8  
                           l2330 7B96                             l2322 7B58  
                           l2250 6A32                             l2244 6DFC  
                           l2236 6D78                             l2092 7A90  
                           l2076 7932                             l2084 7A24  
                           l2068 7916                             l2148 75A4  
                           l2164 7610                             l2228 6CA8  
                           l2500 6C4E                             l2180 7682  
                           l2172 764A                             l2308 716E  
                           l2316 7190                             l2260 6BBA  
                           l2420 7CFE                             l2412 7CE6  
                           l2404 7CCE                             l2340 7BD2  
                           l2332 7B9C                             l2324 7B5A  
                           l2252 6A34                             l1470 6A80  
                           l2238 6DAC                             l2086 7A3E  
                           l2094 7A9E                             l2078 79B4  
                           l2166 7634                             l2158 75F6  
                           l2502 6C60                             l2270 6AC8  
                           l2190 76AA                             l2182 7692  
                           l2174 765A                             l2262 6BC2  
                           l2430 7D1C                             l2422 7D04  
                           l2414 7CEC                             l2406 7CD4  
                           l2350 7C18                             l2342 7BE2  
                           l2334 7BAC                             l2326 7B60  
                           l2318 7B26                             l2254 6A3E  
                           l1480 699E                             l1472 6A98  
                           l1464 69EC                             l2096 7AB0  
                           l2088 7A5C                             l2504 6C68  
                           l2272 6AD0                             l2192 76BA  
                           l2184 76A2                             l2176 766E  
                           l2264 6BD8                             l2440 7D3A  
                           l2432 7D22                             l2424 7D0A  
                           l2416 7CF2                             l2408 7CDA  
                           l2360 7C4A                             l2352 7C28  
                           l2344 7BF2                             l2336 7BBC  
                           l2328 7B7E                             l2256 6A40  
                           l2248 6A2C                             l2520 6F9E  
                           l1474 6A9A                             l1466 69F8  
                           l1482 69CC                             l2098 7ABE  
                           l2506 6C70                             l2274 6ADC  
                           l2194 7702                             l2178 767E  
                           l2290 70AA                             l2266 6BE4  
                           l2450 7D58                             l2442 7D40  
                           l2434 7D28                             l2426 7D10  
                           l2418 7CF8                             l2370 7C68  
                           l2362 7C50                             l2354 7C38  
                           l2346 7C02                             l2338 7BCC  
                           l2530 6FD0                             l2522 6FA2  
                           l2514 6F8C                             l1476 6AA4  
                           l1468 69FA                             l1484 69D4  
                           l1900 6ED4                             l2508 6C8C  
                           l2268 6AB4                             l2196 7746  
                           l2292 70B6                             l2284 708E  
                           l2460 7D76                             l2452 7D5E  
                           l2444 7D46                             l2436 7D2E  
                           l2428 7D16                             l2380 7C86  
                           l2372 7C6E                             l2364 7C56  
                           l2356 7C3E                             l2348 7C08  
                           l2540 7038                             l2532 6FF6  
                           l2524 6FAE                             l2516 6F96  
                           l1478 6AAE                             l1902 6EE6  
                           l2294 70E6                             l2286 7092  
                           l2470 7D94                             l2462 7D7C  
                           l2454 7D64                             l2446 7D4C  
                           l2438 7D34                             l2390 7CA4  
                           l2382 7C8C                             l2374 7C74  
                           l2366 7C5C                             l2358 7C44  
                           l2550 7074                             l2542 703A  
                           l2534 7010                             l2526 6FB4  
                           l2518 6F98                             l2606 69B2  
                           l1904 6EF0                             l1920 6C40  
                           l1912 6A12                             l2296 70EA  
                           l2288 7096                             l2480 7DB2  
                           l2472 7D9A                             l2464 7D82  
                           l2456 7D6A                             l2448 7D52  
                           l2392 7CAA                             l2384 7C92  
                           l2376 7C7A                             l2368 7C62  
                           l2552 7078                             l2544 703E  
                           l2536 7016                             l2528 6FB8  
                           l2608 69B6                             l1906 6F0E  
                           l1930 6B52                             l1914 6C00  
                           l2298 70F6                             l2490 7DD0  
                           l2482 7DB8                             l2474 7DA0  
                           l2466 7D88                             l2458 7D70  
                           l2394 7CB0                             l2386 7C98  
                           l2378 7C80                             l2546 7046  
                           l2538 7026                             l1764 69FE  
                           l1940 7310                             l1908 6F44  
                           l1924 6B30                             l1916 6C0C  
                           l1932 69C2                             l2492 7DD6  
                           l2484 7DBE                             l2476 7DA6  
                           l2468 7D8E                             l2396 7CB6  
                           l2388 7C9E                             l2548 7060  
                           l1950 7370                             l1942 731E  
                           l1926 6B3C                             l1918 6C10  
                           l1934 69C8                             l2494 7DE8  
                           l2486 7DC4                             l2478 7DAC  
                           l2398 7CBC                             l1960 73BA  
                           l1952 7374                             l1944 733E  
                           l1928 6B4E                             l1936 69AA  
                           l2496 7DEE                             l2488 7DCA  
                           l1970 742A                             l1962 73C8  
                           l1954 7380                             l1946 7342  
                           l1938 730C                             l2498 7E00  
                           l1972 743C                             l1964 73DA  
                           l1956 739E                             l1948 7350  
                           l1966 7408                             l1958 73A6  
                           l1974 7442                             l1990 71DE  
                           l1982 71A8                             ?_pad 0011  
                           l1976 7452                             l1968 7428  
                           l1992 71EC                             l1984 71AC  
                           l1978 7472                             l1994 720C  
                           l1986 71BA                             l1898 6EC2  
                           l1996 722A                             l1988 71DA  
                           l1998 7232                             STR_1 7FEB  
                           STR_2 7FF8                             u1000 72CA  
                           u1001 72C6                             u1010 6E0E  
                           u1011 6E0A                             u1020 6E30  
                           u1100 78DA                             u1021 6E2C  
                           u1101 78D6                             u1030 6E86  
                           u1110 7908                             u1031 6E82  
                           u1111 7904                             u1040 6E94  
                           u1200 7AD6                             u1120 7916  
                           u1041 6E90                             u1201 7AD2  
                           u1121 7912                             u1050 6B0A  
                           u1130 7A3E                             u1210 6D52  
                           u1051 6B06                             u1131 7A3A  
                           u1211 6D4E                             u1140 7A5C  
                           u1060 7876                             u1220 6D66  
                           u1300 7692                             u1141 7A58  
                           u1061 7870                             u1221 6D62  
                           u1301 768E                             u1150 7A76  
                           u1070 7878                             u1230 74B8  
                           u1310 76A2                             u1151 7A72  
                           u1231 74B4                             u1311 769E  
                           u1400 6D78                             u1160 7A90  
                           u1080 788E                             u1240 7500  
                           u1320 76BA                             u1401 6D74  
                           u1161 7A8C                             u1081 788A  
                           u1241 74FC                             u1321 76B6  
                           u1170 7A9E                             u1090 78BE  
                           u1250 7524                             u1330 7758  
                           u1410 6BFE                             u1171 7A9A  
                           u1091 78BA                             u1251 7520  
                           u1331 7754                             u1411 6BFA  
                           u1180 7AB0                             u1260 75C8  
                           u1420 6AEE                             u1340 7768  
                           u1500 7038                             u1181 7AAC  
                           u1261 75C4                             u1421 6AEA  
                           u1341 7764                             u1501 7034  
                           _LATA 000F89                             u1190 7ABE  
                           u1350 77C4                             u1270 765A  
                           u1510 7074                             _LATB 000F8A  
                           u1191 7ABA                             u1351 77C0  
                           u1271 7656                             u1511 7070  
                           _LATC 000F8B                             u1360 77D4  
                           u1280 766A                             u1440 70E6  
                           _LATD 000F8C                             u1361 77D0  
                           u1281 7666                             u1441 70E2  
                           _LATE 000F8D                             u1370 782E  
                           u1290 767E                             u1450 7106  
                           u1371 782A                             u1291 767A  
                           u1451 7102                             u1380 7844  
                           u1460 7132                             u1381 7840  
                           u1461 712E                             u1390 6CF8  
                           u1470 7188                             u1391 6CF4  
                           u1471 7184                             u1607 7DF4  
                           u1480 71A6                             u1481 71A2  
                           u1490 7026                             u1491 7022  
                           u1557 7B30                             u1567 7B4A  
                           u1577 7B6A                             u1587 7B88  
                           u1597 7DDC                             _TMR2 000FCC  
                           _WPUB 000F7C                             _Font 7E05  
         __end_of_tftstSetWindow 6BBA             __end_of_demoAnimated 708C  
                           abs@a 0013                             _dbuf 0066  
                           _main 69B2                             _dtoa 7846  
                           _seed 0086                             _prec 0064  
                           _nout 0060                             pad@i 0018  
                           pad@p 0015                             fsr0h 000FEA  
                           fsr1h 000FE2                             indf0 000FEF  
                           fsr2h 000FDA                             fsr0l 000FE9  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 001A                             fsr2l 000FD9  
                           prodh 000FF4                             prodl 000FF3  
                           start 0000           __end_of_SPI_Initialize 69FE  
                _tftstWriteColor 69DC                     ___param_bank 000000  
                ?_tftstDrawPixel 0007                            ??_abs 0015  
                          ??_pad 0017    __end_of_OSCILLATOR_Initialize 69A8  
                __end_of___aodiv 7494                            ?_main 0001  
                          ?_dtoa 001C                  __end_of___aomod 730C  
                          _ANSEL 000F7E                            _T2CON 000FCA  
         __end_of_tftstWriteData 69B2                     vfpfcnvrt@fmt 0042  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                            _Font2 7F04  
                          _flags 005E                            _fputc 6EC2  
                          _fputs 6B30                            pad@fp 0011  
                          _width 0062                            _putch 699C  
                          dtoa@d 001E                            dtoa@i 003E  
                          dtoa@n 0036                            dtoa@p 0030  
                          dtoa@s 0034                            dtoa@w 0032  
               __end_of_SPI_Open 6E00                            tablat 000FF5  
                ?_tftstSetWindow 0003                            status 000FD8  
                __end_of_sprintf 6CA0                  ?_SPI_Initialize 0001  
               ?_tftstFillScreen 0007                  __initialization 6A44  
                   __end_of_Font 7F04                     __end_of_main 69BE  
                   __end_of_dtoa 7B24               demoAnimated@deltaY 00A0  
        __end_of_TMR2_Initialize 69DC                           ??_main 005E  
                         ??_dtoa 0026                    __activetblptr 000002  
                ?_tftstWriteData 0001                  ??_tftstFillRect 000C  
                ??_tftstDrawChar 0018                  ??_tftstDrawText 002A  
       __end_of_SPI_ExchangeByte 6A2A                           ?_fputc 0001  
                         ?_fputs 000A                           ?_putch 0001  
                         _ANSELH 000F7F          __end_of_tftstWriteColor 69EC  
                         _OSCCON 000FD3                           _SSPADD 000FC8  
                         _SSPBUF 000FC9                     vfprintf@cfmt 0056  
          tftstDrawText@cursor_x 0032            tftstDrawText@cursor_y 0031  
                      ??___aodiv 0011                        ??___aomod 0011  
                         clear_0 6A4A                           isa$std 000001  
                         pad@buf 0013                           dtoa@fp 001C  
                         _strlen 6C00                           fputc@c 0001  
                         fputs@c 000E                           fputs@i 000F  
                         fputs@s 000A            tftstDrawText@textsize 002C  
                   __mediumconst 7E04                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
   tftstDrawHorizontalLine@color 0009                           putch@c 0001  
               __end_of_vfprintf 6D02     tftstDrawHorizontalLine@width 0008  
                      ??_sprintf 005E                _SYSTEM_Initialize 69FE  
                     __accesstop 0060          __end_of__initialization 6A54  
             ?_SYSTEM_Initialize 0001                    ___rparam_used 000001  
                   ?_tftstReadId 0001                _tftstWriteCommand 69BE  
            demoAnimated@bgColor 00A1                    __end_of_Font2 7FE0  
                 __pcstackCOMRAM 0001               ?_tftstWriteCommand 0001  
            ??_SYSTEM_Initialize 0001                    __end_of_fputc 6F8C  
                  __end_of_fputs 6B74                    __end_of_putch 699E  
               ?_TMR2_Initialize 0001                        ?_SPI_Open 0001  
            ??_tftstWriteCommand 0002                     _demoAnimated 6F8C  
        _tftstDrawHorizontalLine 6AB2                          ??_fputc 0005  
      __end_of_SYSTEM_Initialize 6A10                          ??_fputs 000E  
            tftstWriteData@data_ 0002                          ??_putch 0001  
                     __pbssBANK0 0060                _TFTST_PIXEL_COUNT 7FE7  
               ?_tftstWriteColor 0003        __end_of_tftstWriteCommand 69CC  
               ??_tftstDrawPixel 000A               tftstSetWindow@xEnd 0003  
             tftstSetWindow@yEnd 0005         tftstDrawHorizontalLine@w 000B  
       tftstDrawHorizontalLine@x 000C         tftstDrawHorizontalLine@y 0007  
                     ??_SPI_Open 0001                          ?_strlen 0001  
           tftstSetWindow@xStart 0006             tftstSetWindow@yStart 0004  
              tftstDrawChar@line 001E                tftstDrawChar@size 0017  
                        _FRM_CNT 7FE4                          _OSCTUNE 000F9B  
               ??_tftstSetWindow 0006                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5        __end_of_TFTST_PIXEL_COUNT 7FE9  
                        _SSPSTAT 000FC7                 ??_SPI_Initialize 0001  
                        __Hparam 0000                          __Lparam 0000  
                        ___aodiv 730C                          ___aomod 71A8  
               ??_tftstWriteData 0002                        ?_vfprintf 0050  
                  demoAnimated@y 00A3                          __pcinit 6A44  
                        __ramtop 0600                   tftstFillRect@h 0009  
                 tftstFillRect@i 000E                   tftstFillRect@j 000F  
                 tftstFillRect@w 0008                   tftstFillRect@x 0010  
                 tftstFillRect@y 0007                          __ptext0 69B2  
                        __ptext1 6F8C                          __ptext2 6A2A  
                        __ptext3 7B24                          __ptext4 6BBA  
                        __ptext5 708C                          __ptext6 7648  
                        __ptext7 6D02                          __ptext8 6A5E  
                        __ptext9 6AB2                   tftstDrawChar@c 0012  
                 tftstDrawChar@i 0021                   tftstDrawChar@j 0020  
                 tftstDrawChar@x 001F                   tftstDrawChar@y 0011  
          _OSCILLATOR_Initialize 699E                        _T2CONbits 000FCA  
      ??_tftstDrawHorizontalLine 000B         ??_PIN_MANAGER_Initialize 0001  
                 tftstDrawText@i 002F                   tftstDrawText@x 002E  
                 tftstDrawText@y 0022                          _sprintf 6C4E  
              ?_SPI_ExchangeByte 0001             end_of_initialization 6A54  
             ??_SPI_ExchangeByte 0001                          fputc@fp 0003  
              tftstDrawText@size 0029                    __Lmediumconst 7E04  
                        fputs@fp 000C                   tftstReadId@id1 0003  
              __end_of_vfpfcnvrt 7648                __end_of_tftstInit 7E04  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
         tftstFillScreen@counter 0009                       ??_vfprintf 0056  
                        strlen@a 0003                          strlen@s 0001  
              _spi_configuration 7FE0            tftstWriteCommand@cmd_ 0002  
          __end_of_tftstFillRect 6D68                        _TRISCbits 000F94  
          __end_of_tftstDrawChar 7846            __end_of_tftstDrawText 71A8  
__end_of_tftstDrawHorizontalLine 6AF0             SPI_ExchangeByte@data 0001  
      __end_of_spi_configuration 7FE4                      vfpfcnvrt@ap 0044  
                    vfpfcnvrt@fp 0040                      vfpfcnvrt@ll 0048  
         ?_OSCILLATOR_Initialize 0001             demoAnimated@idString 0097  
                 __end_of_strlen 6C4E              start_initialization 6A44  
                    __end_of_abs 6B30                      __end_of_pad 6EC2  
 SPI_Open@spiUniqueConfiguration 0002                      vfprintf@fmt 0052  
                       ??_strlen 0003                      __pbssCOMRAM 005E  
                  __pcstackBANK0 008A                 ___aodiv@dividend 0001  
              ??_tftstFillScreen 0009             __end_of_TFTST_HEIGHT 7FEA  
         _PIN_MANAGER_Initialize 6A80                        _dtoa$1100 002E  
                  __pmediumconst 7E04                         ?___aodiv 0001  
                       ?___aomod 0001                 ___aodiv@quotient 0013  
             tftstFillRect@color 000A                         ?_sprintf 0058  
             tftstDrawChar@color 0013                         _LATDbits 000F8C  
                       _PIR1bits 000F9E             tftstWriteColor@color 0003  
                      _vfpfcnvrt 7494                        _tftstInit 7B24  
                       _SPI_Open 6D68              tftstDrawPixel@color 0008  
                    _INTCON2bits 000FF1                ??_TMR2_Initialize 0001  
                  ??_tftstReadId 0003                         __Hrparam 0000  
                     vfprintf@ap 0054                         __Lrparam 0000  
                     vfprintf@fp 0050          ??_OSCILLATOR_Initialize 0001  
                     ?_vfpfcnvrt 0040                       ?_tftstInit 0001  
       ?_tftstDrawHorizontalLine 0007                    ?_demoAnimated 0001  
                ___aodiv@divisor 0009                  ___aodiv@counter 0011  
                 demoAnimated@id 009F                ??_tftstWriteColor 0005  
            __end_of_TFTST_WIDTH 7FEB                       sprintf@fmt 005A  
                       __ptext10 69DC                         __ptext11 6B74  
                       __ptext20 6C00                         __ptext12 69A8  
                       __ptext21 6B30                         __ptext13 69BE  
                       __ptext30 69EC                         __ptext22 6EC2  
                       __ptext14 6A10                         __ptext31 6A80  
                       __ptext23 699C                         __ptext15 6C4E  
                       __ptext32 699E                         __ptext24 6AF0  
                       __ptext16 6CA0                         __ptext25 71A8  
                       __ptext17 7494                         __ptext26 730C  
                       __ptext18 7846                         __ptext27 6D68  
                       __ptext19 6E00                         __ptext28 69FE  
                       __ptext29 69CC                  tftstDrawChar@bg 0015  
                tftstDrawPixel@x 000A                  tftstDrawPixel@y 0007  
                tftstDrawText@bg 0027             tftstFillScreen@color 0007  
                       isa$xinst 000000                         _vfprintf 6CA0  
            __end_of_tftstReadId 6A44                     _TFTST_HEIGHT 7FE9  
                 ??_demoAnimated 005E                  _tftstFillScreen 6BBA  
               ___aomod@dividend 0001                       _INTCONbits 000FF2  
             tftstDrawText@_text 0023               tftstDrawText@color 0025  
                      sprintf@ap 008A          ?_PIN_MANAGER_Initialize 0001  
               _SPI_ExchangeByte 6A10                      _TFTST_WIDTH 7FEA  
                ___aomod@divisor 0009                   _tftstDrawPixel 6A5E  
                    ??_vfpfcnvrt 0046                  ___aomod@counter 0011  
                    ??_tftstInit 0003                         sprintf@f 008C  
                       sprintf@s 0058                      _SSPCON1bits 000FC6  
                  _tftstFillRect 6D02                    _tftstDrawChar 7648  
                  _tftstDrawText 708C                     ___aodiv@sign 0012  
 __end_of_PIN_MANAGER_Initialize 6AB2                   _tftstSetWindow 6B74  
                   ___aomod@sign 0012                      _tftstReadId 6A2A  
        __end_of_tftstFillScreen 6C00  
