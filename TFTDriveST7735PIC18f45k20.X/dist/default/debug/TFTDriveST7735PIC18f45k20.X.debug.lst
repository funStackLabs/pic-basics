

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Sep 30 12:34:45 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47  0000                     
    48                           ; Version 2.35
    49                           ; Generated 05/05/2021 GMT
    50                           ; 
    51                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F45K20 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	mediumconst
    85  007B48                     __pmediumconst:
    86                           	callstack 0
    87  007B48  00                 	db	0
    88  007B49                     _Font:
    89                           	callstack 0
    90  007B49  00                 	db	0
    91  007B4A  00                 	db	0
    92  007B4B  00                 	db	0
    93  007B4C  00                 	db	0
    94  007B4D  00                 	db	0
    95  007B4E  00                 	db	0
    96  007B4F  00                 	db	0
    97  007B50  5F                 	db	95
    98  007B51  00                 	db	0
    99  007B52  00                 	db	0
   100  007B53  00                 	db	0
   101  007B54  07                 	db	7
   102  007B55  00                 	db	0
   103  007B56  07                 	db	7
   104  007B57  00                 	db	0
   105  007B58  14                 	db	20
   106  007B59  7F                 	db	127
   107  007B5A  14                 	db	20
   108  007B5B  7F                 	db	127
   109  007B5C  14                 	db	20
   110  007B5D  24                 	db	36
   111  007B5E  2A                 	db	42
   112  007B5F  7F                 	db	127
   113  007B60  2A                 	db	42
   114  007B61  12                 	db	18
   115  007B62  23                 	db	35
   116  007B63  13                 	db	19
   117  007B64  08                 	db	8
   118  007B65  64                 	db	100
   119  007B66  62                 	db	98
   120  007B67  36                 	db	54
   121  007B68  49                 	db	73
   122  007B69  56                 	db	86
   123  007B6A  20                 	db	32
   124  007B6B  50                 	db	80
   125  007B6C  00                 	db	0
   126  007B6D  08                 	db	8
   127  007B6E  07                 	db	7
   128  007B6F  03                 	db	3
   129  007B70  00                 	db	0
   130  007B71  00                 	db	0
   131  007B72  1C                 	db	28
   132  007B73  22                 	db	34
   133  007B74  41                 	db	65
   134  007B75  00                 	db	0
   135  007B76  00                 	db	0
   136  007B77  41                 	db	65
   137  007B78  22                 	db	34
   138  007B79  1C                 	db	28
   139  007B7A  00                 	db	0
   140  007B7B  2A                 	db	42
   141  007B7C  1C                 	db	28
   142  007B7D  7F                 	db	127
   143  007B7E  1C                 	db	28
   144  007B7F  2A                 	db	42
   145  007B80  08                 	db	8
   146  007B81  08                 	db	8
   147  007B82  3E                 	db	62
   148  007B83  08                 	db	8
   149  007B84  08                 	db	8
   150  007B85  00                 	db	0
   151  007B86  80                 	db	128
   152  007B87  70                 	db	112
   153  007B88  30                 	db	48
   154  007B89  00                 	db	0
   155  007B8A  08                 	db	8
   156  007B8B  08                 	db	8
   157  007B8C  08                 	db	8
   158  007B8D  08                 	db	8
   159  007B8E  08                 	db	8
   160  007B8F  00                 	db	0
   161  007B90  00                 	db	0
   162  007B91  60                 	db	96
   163  007B92  60                 	db	96
   164  007B93  00                 	db	0
   165  007B94  20                 	db	32
   166  007B95  10                 	db	16
   167  007B96  08                 	db	8
   168  007B97  04                 	db	4
   169  007B98  02                 	db	2
   170  007B99  3E                 	db	62
   171  007B9A  51                 	db	81
   172  007B9B  49                 	db	73
   173  007B9C  45                 	db	69
   174  007B9D  3E                 	db	62
   175  007B9E  00                 	db	0
   176  007B9F  42                 	db	66
   177  007BA0  7F                 	db	127
   178  007BA1  40                 	db	64
   179  007BA2  00                 	db	0
   180  007BA3  72                 	db	114
   181  007BA4  49                 	db	73
   182  007BA5  49                 	db	73
   183  007BA6  49                 	db	73
   184  007BA7  46                 	db	70
   185  007BA8  21                 	db	33
   186  007BA9  41                 	db	65
   187  007BAA  49                 	db	73
   188  007BAB  4D                 	db	77
   189  007BAC  33                 	db	51
   190  007BAD  18                 	db	24
   191  007BAE  14                 	db	20
   192  007BAF  12                 	db	18
   193  007BB0  7F                 	db	127
   194  007BB1  10                 	db	16
   195  007BB2  27                 	db	39
   196  007BB3  45                 	db	69
   197  007BB4  45                 	db	69
   198  007BB5  45                 	db	69
   199  007BB6  39                 	db	57
   200  007BB7  3C                 	db	60
   201  007BB8  4A                 	db	74
   202  007BB9  49                 	db	73
   203  007BBA  49                 	db	73
   204  007BBB  31                 	db	49
   205  007BBC  41                 	db	65
   206  007BBD  21                 	db	33
   207  007BBE  11                 	db	17
   208  007BBF  09                 	db	9
   209  007BC0  07                 	db	7
   210  007BC1  36                 	db	54
   211  007BC2  49                 	db	73
   212  007BC3  49                 	db	73
   213  007BC4  49                 	db	73
   214  007BC5  36                 	db	54
   215  007BC6  46                 	db	70
   216  007BC7  49                 	db	73
   217  007BC8  49                 	db	73
   218  007BC9  29                 	db	41
   219  007BCA  1E                 	db	30
   220  007BCB  00                 	db	0
   221  007BCC  00                 	db	0
   222  007BCD  14                 	db	20
   223  007BCE  00                 	db	0
   224  007BCF  00                 	db	0
   225  007BD0  00                 	db	0
   226  007BD1  40                 	db	64
   227  007BD2  34                 	db	52
   228  007BD3  00                 	db	0
   229  007BD4  00                 	db	0
   230  007BD5  00                 	db	0
   231  007BD6  08                 	db	8
   232  007BD7  14                 	db	20
   233  007BD8  22                 	db	34
   234  007BD9  41                 	db	65
   235  007BDA  14                 	db	20
   236  007BDB  14                 	db	20
   237  007BDC  14                 	db	20
   238  007BDD  14                 	db	20
   239  007BDE  14                 	db	20
   240  007BDF  00                 	db	0
   241  007BE0  41                 	db	65
   242  007BE1  22                 	db	34
   243  007BE2  14                 	db	20
   244  007BE3  08                 	db	8
   245  007BE4  02                 	db	2
   246  007BE5  01                 	db	1
   247  007BE6  59                 	db	89
   248  007BE7  09                 	db	9
   249  007BE8  06                 	db	6
   250  007BE9  3E                 	db	62
   251  007BEA  41                 	db	65
   252  007BEB  5D                 	db	93
   253  007BEC  59                 	db	89
   254  007BED  4E                 	db	78
   255  007BEE  7C                 	db	124
   256  007BEF  12                 	db	18
   257  007BF0  11                 	db	17
   258  007BF1  12                 	db	18
   259  007BF2  7C                 	db	124
   260  007BF3  7F                 	db	127
   261  007BF4  49                 	db	73
   262  007BF5  49                 	db	73
   263  007BF6  49                 	db	73
   264  007BF7  36                 	db	54
   265  007BF8  3E                 	db	62
   266  007BF9  41                 	db	65
   267  007BFA  41                 	db	65
   268  007BFB  41                 	db	65
   269  007BFC  22                 	db	34
   270  007BFD  7F                 	db	127
   271  007BFE  41                 	db	65
   272  007BFF  41                 	db	65
   273  007C00  41                 	db	65
   274  007C01  3E                 	db	62
   275  007C02  7F                 	db	127
   276  007C03  49                 	db	73
   277  007C04  49                 	db	73
   278  007C05  49                 	db	73
   279  007C06  41                 	db	65
   280  007C07  7F                 	db	127
   281  007C08  09                 	db	9
   282  007C09  09                 	db	9
   283  007C0A  09                 	db	9
   284  007C0B  01                 	db	1
   285  007C0C  3E                 	db	62
   286  007C0D  41                 	db	65
   287  007C0E  41                 	db	65
   288  007C0F  51                 	db	81
   289  007C10  73                 	db	115
   290  007C11  7F                 	db	127
   291  007C12  08                 	db	8
   292  007C13  08                 	db	8
   293  007C14  08                 	db	8
   294  007C15  7F                 	db	127
   295  007C16  00                 	db	0
   296  007C17  41                 	db	65
   297  007C18  7F                 	db	127
   298  007C19  41                 	db	65
   299  007C1A  00                 	db	0
   300  007C1B  20                 	db	32
   301  007C1C  40                 	db	64
   302  007C1D  41                 	db	65
   303  007C1E  3F                 	db	63
   304  007C1F  01                 	db	1
   305  007C20  7F                 	db	127
   306  007C21  08                 	db	8
   307  007C22  14                 	db	20
   308  007C23  22                 	db	34
   309  007C24  41                 	db	65
   310  007C25  7F                 	db	127
   311  007C26  40                 	db	64
   312  007C27  40                 	db	64
   313  007C28  40                 	db	64
   314  007C29  40                 	db	64
   315  007C2A  7F                 	db	127
   316  007C2B  02                 	db	2
   317  007C2C  1C                 	db	28
   318  007C2D  02                 	db	2
   319  007C2E  7F                 	db	127
   320  007C2F  7F                 	db	127
   321  007C30  04                 	db	4
   322  007C31  08                 	db	8
   323  007C32  10                 	db	16
   324  007C33  7F                 	db	127
   325  007C34  3E                 	db	62
   326  007C35  41                 	db	65
   327  007C36  41                 	db	65
   328  007C37  41                 	db	65
   329  007C38  3E                 	db	62
   330  007C39  7F                 	db	127
   331  007C3A  09                 	db	9
   332  007C3B  09                 	db	9
   333  007C3C  09                 	db	9
   334  007C3D  06                 	db	6
   335  007C3E  3E                 	db	62
   336  007C3F  41                 	db	65
   337  007C40  51                 	db	81
   338  007C41  21                 	db	33
   339  007C42  5E                 	db	94
   340  007C43  7F                 	db	127
   341  007C44  09                 	db	9
   342  007C45  19                 	db	25
   343  007C46  29                 	db	41
   344  007C47  46                 	db	70
   345  007C48                     __end_of_Font:
   346                           	callstack 0
   347  007C48                     _Font2:
   348                           	callstack 0
   349  007C48  26                 	db	38
   350  007C49  49                 	db	73
   351  007C4A  49                 	db	73
   352  007C4B  49                 	db	73
   353  007C4C  32                 	db	50
   354  007C4D  03                 	db	3
   355  007C4E  01                 	db	1
   356  007C4F  7F                 	db	127
   357  007C50  01                 	db	1
   358  007C51  03                 	db	3
   359  007C52  3F                 	db	63
   360  007C53  40                 	db	64
   361  007C54  40                 	db	64
   362  007C55  40                 	db	64
   363  007C56  3F                 	db	63
   364  007C57  1F                 	db	31
   365  007C58  20                 	db	32
   366  007C59  40                 	db	64
   367  007C5A  20                 	db	32
   368  007C5B  1F                 	db	31
   369  007C5C  3F                 	db	63
   370  007C5D  40                 	db	64
   371  007C5E  38                 	db	56
   372  007C5F  40                 	db	64
   373  007C60  3F                 	db	63
   374  007C61  63                 	db	99
   375  007C62  14                 	db	20
   376  007C63  08                 	db	8
   377  007C64  14                 	db	20
   378  007C65  63                 	db	99
   379  007C66  03                 	db	3
   380  007C67  04                 	db	4
   381  007C68  78                 	db	120
   382  007C69  04                 	db	4
   383  007C6A  03                 	db	3
   384  007C6B  61                 	db	97
   385  007C6C  59                 	db	89
   386  007C6D  49                 	db	73
   387  007C6E  4D                 	db	77
   388  007C6F  43                 	db	67
   389  007C70  00                 	db	0
   390  007C71  7F                 	db	127
   391  007C72  41                 	db	65
   392  007C73  41                 	db	65
   393  007C74  41                 	db	65
   394  007C75  02                 	db	2
   395  007C76  04                 	db	4
   396  007C77  08                 	db	8
   397  007C78  10                 	db	16
   398  007C79  20                 	db	32
   399  007C7A  00                 	db	0
   400  007C7B  41                 	db	65
   401  007C7C  41                 	db	65
   402  007C7D  41                 	db	65
   403  007C7E  7F                 	db	127
   404  007C7F  04                 	db	4
   405  007C80  02                 	db	2
   406  007C81  01                 	db	1
   407  007C82  02                 	db	2
   408  007C83  04                 	db	4
   409  007C84  40                 	db	64
   410  007C85  40                 	db	64
   411  007C86  40                 	db	64
   412  007C87  40                 	db	64
   413  007C88  40                 	db	64
   414  007C89  00                 	db	0
   415  007C8A  03                 	db	3
   416  007C8B  07                 	db	7
   417  007C8C  08                 	db	8
   418  007C8D  00                 	db	0
   419  007C8E  20                 	db	32
   420  007C8F  54                 	db	84
   421  007C90  54                 	db	84
   422  007C91  78                 	db	120
   423  007C92  40                 	db	64
   424  007C93  7F                 	db	127
   425  007C94  28                 	db	40
   426  007C95  44                 	db	68
   427  007C96  44                 	db	68
   428  007C97  38                 	db	56
   429  007C98  38                 	db	56
   430  007C99  44                 	db	68
   431  007C9A  44                 	db	68
   432  007C9B  44                 	db	68
   433  007C9C  28                 	db	40
   434  007C9D  38                 	db	56
   435  007C9E  44                 	db	68
   436  007C9F  44                 	db	68
   437  007CA0  28                 	db	40
   438  007CA1  7F                 	db	127
   439  007CA2  38                 	db	56
   440  007CA3  54                 	db	84
   441  007CA4  54                 	db	84
   442  007CA5  54                 	db	84
   443  007CA6  18                 	db	24
   444  007CA7  00                 	db	0
   445  007CA8  08                 	db	8
   446  007CA9  7E                 	db	126
   447  007CAA  09                 	db	9
   448  007CAB  02                 	db	2
   449  007CAC  18                 	db	24
   450  007CAD  A4                 	db	164
   451  007CAE  A4                 	db	164
   452  007CAF  9C                 	db	156
   453  007CB0  78                 	db	120
   454  007CB1  7F                 	db	127
   455  007CB2  08                 	db	8
   456  007CB3  04                 	db	4
   457  007CB4  04                 	db	4
   458  007CB5  78                 	db	120
   459  007CB6  00                 	db	0
   460  007CB7  44                 	db	68
   461  007CB8  7D                 	db	125
   462  007CB9  40                 	db	64
   463  007CBA  00                 	db	0
   464  007CBB  20                 	db	32
   465  007CBC  40                 	db	64
   466  007CBD  40                 	db	64
   467  007CBE  3D                 	db	61
   468  007CBF  00                 	db	0
   469  007CC0  7F                 	db	127
   470  007CC1  10                 	db	16
   471  007CC2  28                 	db	40
   472  007CC3  44                 	db	68
   473  007CC4  00                 	db	0
   474  007CC5  00                 	db	0
   475  007CC6  41                 	db	65
   476  007CC7  7F                 	db	127
   477  007CC8  40                 	db	64
   478  007CC9  00                 	db	0
   479  007CCA  7C                 	db	124
   480  007CCB  04                 	db	4
   481  007CCC  78                 	db	120
   482  007CCD  04                 	db	4
   483  007CCE  78                 	db	120
   484  007CCF  7C                 	db	124
   485  007CD0  08                 	db	8
   486  007CD1  04                 	db	4
   487  007CD2  04                 	db	4
   488  007CD3  78                 	db	120
   489  007CD4  38                 	db	56
   490  007CD5  44                 	db	68
   491  007CD6  44                 	db	68
   492  007CD7  44                 	db	68
   493  007CD8  38                 	db	56
   494  007CD9  FC                 	db	252
   495  007CDA  18                 	db	24
   496  007CDB  24                 	db	36
   497  007CDC  24                 	db	36
   498  007CDD  18                 	db	24
   499  007CDE  18                 	db	24
   500  007CDF  24                 	db	36
   501  007CE0  24                 	db	36
   502  007CE1  18                 	db	24
   503  007CE2  FC                 	db	252
   504  007CE3  7C                 	db	124
   505  007CE4  08                 	db	8
   506  007CE5  04                 	db	4
   507  007CE6  04                 	db	4
   508  007CE7  08                 	db	8
   509  007CE8  48                 	db	72
   510  007CE9  54                 	db	84
   511  007CEA  54                 	db	84
   512  007CEB  54                 	db	84
   513  007CEC  24                 	db	36
   514  007CED  04                 	db	4
   515  007CEE  04                 	db	4
   516  007CEF  3F                 	db	63
   517  007CF0  44                 	db	68
   518  007CF1  24                 	db	36
   519  007CF2  3C                 	db	60
   520  007CF3  40                 	db	64
   521  007CF4  40                 	db	64
   522  007CF5  20                 	db	32
   523  007CF6  7C                 	db	124
   524  007CF7  1C                 	db	28
   525  007CF8  20                 	db	32
   526  007CF9  40                 	db	64
   527  007CFA  20                 	db	32
   528  007CFB  1C                 	db	28
   529  007CFC  3C                 	db	60
   530  007CFD  40                 	db	64
   531  007CFE  30                 	db	48
   532  007CFF  40                 	db	64
   533  007D00  3C                 	db	60
   534  007D01  44                 	db	68
   535  007D02  28                 	db	40
   536  007D03  10                 	db	16
   537  007D04  28                 	db	40
   538  007D05  44                 	db	68
   539  007D06  4C                 	db	76
   540  007D07  90                 	db	144
   541  007D08  90                 	db	144
   542  007D09  90                 	db	144
   543  007D0A  7C                 	db	124
   544  007D0B  44                 	db	68
   545  007D0C  64                 	db	100
   546  007D0D  54                 	db	84
   547  007D0E  4C                 	db	76
   548  007D0F  44                 	db	68
   549  007D10  00                 	db	0
   550  007D11  08                 	db	8
   551  007D12  36                 	db	54
   552  007D13  41                 	db	65
   553  007D14  00                 	db	0
   554  007D15  00                 	db	0
   555  007D16  00                 	db	0
   556  007D17  77                 	db	119
   557  007D18  00                 	db	0
   558  007D19  00                 	db	0
   559  007D1A  00                 	db	0
   560  007D1B  41                 	db	65
   561  007D1C  36                 	db	54
   562  007D1D  08                 	db	8
   563  007D1E  00                 	db	0
   564  007D1F  02                 	db	2
   565  007D20  01                 	db	1
   566  007D21  02                 	db	2
   567  007D22  04                 	db	4
   568  007D23  02                 	db	2
   569  007D24                     __end_of_Font2:
   570                           	callstack 0
   571  007D24                     _spi_configuration:
   572                           	callstack 0
   573  007D24  01                 	db	1
   574  007D25  40                 	db	64
   575  007D26  01                 	db	1
   576  007D27  00                 	db	0
   577  007D28                     __end_of_spi_configuration:
   578                           	callstack 0
   579  007D28  5000               	dw	20480
   580  007D2A                     __end_of_TFTST_PIXEL_COUNT:
   581                           	callstack 0
   582  007D2A  80                 	db	128
   583  007D2B                     __end_of_TFTST_HEIGHT:
   584                           	callstack 0
   585  007D2B  A0                 	db	160
   586  007D2C                     __end_of_TFTST_WIDTH:
   587                           	callstack 0
   588  0000                     _T2CON	set	4042
   589  0000                     _PR2	set	4043
   590  0000                     _SSPBUF	set	4041
   591  0000                     _SSPADD	set	4040
   592  0000                     _TRISD	set	3989
   593  0000                     _TRISC	set	3988
   594  0000                     _TRISB	set	3987
   595  0000                     _LATC	set	3979
   596  0000                     _LATB	set	3978
   597  0000                     _LATDbits	set	3980
   598  0000                     _TRISCbits	set	3988
   599  0000                     _T2CONbits	set	4042
   600  0000                     _SSPCON1bits	set	4038
   601  0000                     _WPUB	set	3964
   602  0000                     _ANSEL	set	3966
   603  0000                     _LATA	set	3977
   604  0000                     _LATD	set	3980
   605  0000                     _LATE	set	3981
   606  0000                     _OSCTUNE	set	3995
   607  0000                     _PIR1bits	set	3998
   608  0000                     _SSPCON2	set	4037
   609  0000                     _SSPCON1	set	4038
   610  0000                     _SSPSTAT	set	4039
   611  0000                     _OSCCON	set	4051
   612  0000                     _INTCON2bits	set	4081
   613  0000                     _TRISA	set	3986
   614  0000                     _TRISE	set	3990
   615  0000                     _ANSELH	set	3967
   616  0000                     _INTCONbits	set	4082
   617  0000                     _TMR2	set	4044
   618  007D2C                     STR_1:
   619  007D2C  66                 	db	102	;'f'
   620  007D2D  75                 	db	117	;'u'
   621  007D2E  6E                 	db	110	;'n'
   622  007D2F  53                 	db	83	;'S'
   623  007D30  74                 	db	116	;'t'
   624  007D31  61                 	db	97	;'a'
   625  007D32  63                 	db	99	;'c'
   626  007D33  6B                 	db	107	;'k'
   627  007D34  4C                 	db	76	;'L'
   628  007D35  61                 	db	97	;'a'
   629  007D36  62                 	db	98	;'b'
   630  007D37  73                 	db	115	;'s'
   631  007D38  00                 	db	0
   632  007D39                     STR_2:
   633  007D39  49                 	db	73	;'I'
   634  007D3A  44                 	db	68	;'D'
   635  007D3B  3A                 	db	58	;':'
   636  007D3C  25                 	db	37
   637  007D3D  64                 	db	100	;'d'
   638  007D3E  00                 	db	0
   639  007D3F  00                 	db	0	; dummy byte at the end
   640  0000                     
   641                           ; #config settings
   642                           
   643                           	psect	cinit
   644  00676C                     __pcinit:
   645                           	callstack 0
   646  00676C                     start_initialization:
   647                           	callstack 0
   648  00676C                     __initialization:
   649                           	callstack 0
   650                           
   651                           ; Clear objects allocated to BANK0 (40 bytes)
   652  00676C  EE00  F060         	lfsr	0,__pbssBANK0
   653  006770  0E28               	movlw	40
   654  006772                     clear_0:
   655  006772  6AEE               	clrf	postinc0,c
   656  006774  06E8               	decf	wreg,f,c
   657  006776  E1FD               	bnz	clear_0
   658  006778                     end_of_initialization:
   659                           	callstack 0
   660  006778                     __end_of__initialization:
   661                           	callstack 0
   662  006778  0E00               	movlw	low (__Lmediumconst shr (0+16))
   663  00677A  6EF8               	movwf	tblptru,c
   664  00677C  0100               	movlb	0
   665  00677E  EF86  F033         	goto	_main	;jump to C main() function
   666                           
   667                           	psect	bssBANK0
   668  000060                     __pbssBANK0:
   669                           	callstack 0
   670  000060                     _nout:
   671                           	callstack 0
   672  000060                     	ds	2
   673  000062                     _width:
   674                           	callstack 0
   675  000062                     	ds	2
   676  000064                     _prec:
   677                           	callstack 0
   678  000064                     	ds	2
   679  000066                     _flags:
   680                           	callstack 0
   681  000066                     	ds	2
   682  000068                     _dbuf:
   683                           	callstack 0
   684  000068                     	ds	32
   685                           
   686                           	psect	cstackBANK0
   687  000088                     __pcstackBANK0:
   688                           	callstack 0
   689  000088                     sprintf@ap:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x0
   693  000088                     	ds	2
   694  00008A                     sprintf@f:
   695                           	callstack 0
   696                           
   697                           ; 11 bytes @ 0x2
   698  00008A                     	ds	11
   699  000095                     demo@idString:
   700                           	callstack 0
   701                           
   702                           ; 8 bytes @ 0xD
   703  000095                     	ds	8
   704  00009D                     demo@id:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x15
   708  00009D                     	ds	1
   709  00009E                     demo@deltaY:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x16
   713  00009E                     	ds	1
   714  00009F                     demo@y:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x17
   718  00009F                     	ds	1
   719                           
   720                           	psect	cstackCOMRAM
   721  000001                     __pcstackCOMRAM:
   722                           	callstack 0
   723  000001                     ??_SPI_Open:
   724  000001                     ?_strlen:
   725                           	callstack 0
   726  000001                     ?___aodiv:
   727                           	callstack 0
   728  000001                     ?___aomod:
   729                           	callstack 0
   730  000001                     SPI_ExchangeByte@data:
   731                           	callstack 0
   732  000001                     fputc@c:
   733                           	callstack 0
   734  000001                     strlen@s:
   735                           	callstack 0
   736  000001                     ___aodiv@dividend:
   737                           	callstack 0
   738  000001                     ___aomod@dividend:
   739                           	callstack 0
   740                           
   741                           ; 8 bytes @ 0x0
   742  000001                     	ds	1
   743  000002                     SPI_Open@spiUniqueConfiguration:
   744                           	callstack 0
   745  000002                     tftstWriteCommand@cmd_:
   746                           	callstack 0
   747  000002                     tftstWriteData@data_:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x1
   751  000002                     	ds	1
   752  000003                     ??_tftstInit:
   753  000003                     tftstReadId@id1:
   754                           	callstack 0
   755  000003                     tftstSetWindow@xEnd:
   756                           	callstack 0
   757  000003                     tftstWriteColor@color:
   758                           	callstack 0
   759  000003                     fputc@fp:
   760                           	callstack 0
   761  000003                     strlen@a:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x2
   765  000003                     	ds	1
   766  000004                     tftstSetWindow@yStart:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0x3
   770  000004                     	ds	1
   771  000005                     ??_fputc:
   772  000005                     tftstSetWindow@yEnd:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x4
   776  000005                     	ds	1
   777  000006                     tftstSetWindow@xStart:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x5
   781  000006                     	ds	1
   782  000007                     tftstDrawPixel@y:
   783                           	callstack 0
   784  000007                     tftstDrawHorizontalLine@y:
   785                           	callstack 0
   786  000007                     tftstFillRect@y:
   787                           	callstack 0
   788  000007                     tftstFillScreen@color:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x6
   792  000007                     	ds	1
   793  000008                     tftstDrawHorizontalLine@width:
   794                           	callstack 0
   795  000008                     tftstFillRect@w:
   796                           	callstack 0
   797  000008                     tftstDrawPixel@color:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x7
   801  000008                     	ds	1
   802  000009                     tftstFillRect@h:
   803                           	callstack 0
   804  000009                     tftstFillScreen@counter:
   805                           	callstack 0
   806  000009                     tftstDrawHorizontalLine@color:
   807                           	callstack 0
   808  000009                     ___aodiv@divisor:
   809                           	callstack 0
   810  000009                     ___aomod@divisor:
   811                           	callstack 0
   812                           
   813                           ; 8 bytes @ 0x8
   814  000009                     	ds	1
   815  00000A                     tftstDrawPixel@x:
   816                           	callstack 0
   817  00000A                     tftstFillRect@color:
   818                           	callstack 0
   819  00000A                     fputs@s:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x9
   823  00000A                     	ds	1
   824  00000B                     tftstDrawHorizontalLine@w:
   825                           	callstack 0
   826                           
   827                           ; 1 bytes @ 0xA
   828  00000B                     	ds	1
   829  00000C                     ??_tftstFillRect:
   830  00000C                     tftstDrawHorizontalLine@x:
   831                           	callstack 0
   832  00000C                     fputs@fp:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0xB
   836  00000C                     	ds	2
   837  00000E                     tftstFillRect@i:
   838                           	callstack 0
   839  00000E                     fputs@c:
   840                           	callstack 0
   841                           
   842                           ; 1 bytes @ 0xD
   843  00000E                     	ds	1
   844  00000F                     tftstFillRect@j:
   845                           	callstack 0
   846  00000F                     fputs@i:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0xE
   850  00000F                     	ds	1
   851  000010                     tftstFillRect@x:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0xF
   855  000010                     	ds	1
   856  000011                     ?_pad:
   857                           	callstack 0
   858  000011                     tftstDrawChar@y:
   859                           	callstack 0
   860  000011                     ___aodiv@counter:
   861                           	callstack 0
   862  000011                     ___aomod@counter:
   863                           	callstack 0
   864  000011                     pad@fp:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0x10
   868  000011                     	ds	1
   869  000012                     tftstDrawChar@c:
   870                           	callstack 0
   871  000012                     ___aodiv@sign:
   872                           	callstack 0
   873  000012                     ___aomod@sign:
   874                           	callstack 0
   875                           
   876                           ; 1 bytes @ 0x11
   877  000012                     	ds	1
   878  000013                     ?_abs:
   879                           	callstack 0
   880  000013                     tftstDrawChar@color:
   881                           	callstack 0
   882  000013                     pad@buf:
   883                           	callstack 0
   884  000013                     abs@a:
   885                           	callstack 0
   886  000013                     ___aodiv@quotient:
   887                           	callstack 0
   888                           
   889                           ; 8 bytes @ 0x12
   890  000013                     	ds	2
   891  000015                     ??_abs:
   892  000015                     tftstDrawChar@bg:
   893                           	callstack 0
   894  000015                     pad@p:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x14
   898  000015                     	ds	2
   899  000017                     ??_pad:
   900  000017                     tftstDrawChar@size:
   901                           	callstack 0
   902                           
   903                           ; 1 bytes @ 0x16
   904  000017                     	ds	1
   905  000018                     ??_tftstDrawChar:
   906  000018                     pad@i:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x17
   910  000018                     	ds	2
   911  00001A                     pad@w:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x19
   915  00001A                     	ds	2
   916  00001C                     ?_dtoa:
   917                           	callstack 0
   918  00001C                     dtoa@fp:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x1B
   922  00001C                     	ds	2
   923  00001E                     tftstDrawChar@line:
   924                           	callstack 0
   925  00001E                     dtoa@d:
   926                           	callstack 0
   927                           
   928                           ; 8 bytes @ 0x1D
   929  00001E                     	ds	1
   930  00001F                     tftstDrawChar@x:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0x1E
   934  00001F                     	ds	1
   935  000020                     tftstDrawChar@j:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x1F
   939  000020                     	ds	1
   940  000021                     tftstDrawChar@i:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0x20
   944  000021                     	ds	1
   945  000022                     tftstDrawText@y:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0x21
   949  000022                     	ds	1
   950  000023                     tftstDrawText@_text:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x22
   954  000023                     	ds	2
   955  000025                     tftstDrawText@color:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x24
   959  000025                     	ds	1
   960  000026                     ??_dtoa:
   961                           
   962                           ; 1 bytes @ 0x25
   963  000026                     	ds	1
   964  000027                     tftstDrawText@bg:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x26
   968  000027                     	ds	2
   969  000029                     tftstDrawText@size:
   970                           	callstack 0
   971                           
   972                           ; 1 bytes @ 0x28
   973  000029                     	ds	1
   974  00002A                     ??_tftstDrawText:
   975                           
   976                           ; 1 bytes @ 0x29
   977  00002A                     	ds	2
   978  00002C                     tftstDrawText@textsize:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x2B
   982  00002C                     	ds	2
   983  00002E                     tftstDrawText@x:
   984                           	callstack 0
   985  00002E                     _dtoa$1102:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x2D
   989  00002E                     	ds	1
   990  00002F                     tftstDrawText@i:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x2E
   994  00002F                     	ds	1
   995  000030                     dtoa@p:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x2F
   999  000030                     	ds	1
  1000  000031                     tftstDrawText@cursor_y:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x30
  1004  000031                     	ds	1
  1005  000032                     tftstDrawText@cursor_x:
  1006                           	callstack 0
  1007  000032                     dtoa@w:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x31
  1011  000032                     	ds	2
  1012  000034                     dtoa@s:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x33
  1016  000034                     	ds	2
  1017  000036                     dtoa@n:
  1018                           	callstack 0
  1019                           
  1020                           ; 8 bytes @ 0x35
  1021  000036                     	ds	8
  1022  00003E                     dtoa@i:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x3D
  1026  00003E                     	ds	2
  1027  000040                     ?_vfpfcnvrt:
  1028                           	callstack 0
  1029  000040                     vfpfcnvrt@fp:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x3F
  1033  000040                     	ds	2
  1034  000042                     vfpfcnvrt@fmt:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x41
  1038  000042                     	ds	2
  1039  000044                     vfpfcnvrt@ap:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x43
  1043  000044                     	ds	2
  1044  000046                     ??_vfpfcnvrt:
  1045                           
  1046                           ; 1 bytes @ 0x45
  1047  000046                     	ds	2
  1048  000048                     vfpfcnvrt@ll:
  1049                           	callstack 0
  1050                           
  1051                           ; 8 bytes @ 0x47
  1052  000048                     	ds	8
  1053  000050                     ?_vfprintf:
  1054                           	callstack 0
  1055  000050                     vfprintf@fp:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x4F
  1059  000050                     	ds	2
  1060  000052                     vfprintf@fmt:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x51
  1064  000052                     	ds	2
  1065  000054                     vfprintf@ap:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x53
  1069  000054                     	ds	2
  1070  000056                     vfprintf@cfmt:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x55
  1074  000056                     	ds	2
  1075  000058                     ?_sprintf:
  1076                           	callstack 0
  1077  000058                     sprintf@s:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x57
  1081  000058                     	ds	2
  1082  00005A                     sprintf@fmt:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x59
  1086  00005A                     	ds	4
  1087  00005E                     ??_demo:
  1088                           
  1089                           ; 1 bytes @ 0x5D
  1090  00005E                     	ds	2
  1091  000060                     
  1092                           ; 1 bytes @ 0x5F
  1093 ;;
  1094 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1095 ;;
  1096 ;; *************** function _main *****************
  1097 ;; Defined at:
  1098 ;;		line 81 in file "main.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1112 ;;      Params:         0       0       0       0       0       0       0
  1113 ;;      Locals:         0       0       0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0
  1115 ;;      Totals:         0       0       0       0       0       0       0
  1116 ;;Total ram usage:        0 bytes
  1117 ;; Hardware stack levels required when called: 9
  1118 ;; This function calls:
  1119 ;;		_SYSTEM_Initialize
  1120 ;;		_demo
  1121 ;; This function is called by:
  1122 ;;		Startup code after reset
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text0
  1127  00670C                     __ptext0:
  1128                           	callstack 0
  1129  00670C                     _main:
  1130                           	callstack 22
  1131  00670C                     
  1132                           ;main.c: 83:     SYSTEM_Initialize();
  1133  00670C  ECA3  F033         	call	_SYSTEM_Initialize	;wreg free
  1134  006710                     
  1135                           ;main.c: 100:     demo();
  1136  006710  EC74  F036         	call	_demo	;wreg free
  1137  006714  EF01  F000         	goto	start
  1138  006718                     __end_of_main:
  1139                           	callstack 0
  1140                           
  1141 ;; *************** function _demo *****************
  1142 ;; Defined at:
  1143 ;;		line 48 in file "main.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  idString        8   13[BANK0 ] unsigned char [8]
  1148 ;;  id              1   21[BANK0 ] unsigned char 
  1149 ;;  y               1   23[BANK0 ] unsigned char 
  1150 ;;  deltaY          1   22[BANK0 ] char 
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1160 ;;      Params:         0       0       0       0       0       0       0
  1161 ;;      Locals:         0      11       0       0       0       0       0
  1162 ;;      Temps:          2       0       0       0       0       0       0
  1163 ;;      Totals:         2      11       0       0       0       0       0
  1164 ;;Total ram usage:       13 bytes
  1165 ;; Hardware stack levels used: 1
  1166 ;; Hardware stack levels required when called: 8
  1167 ;; This function calls:
  1168 ;;		_SPI_Open
  1169 ;;		_sprintf
  1170 ;;		_tftstDrawHorizontalLine
  1171 ;;		_tftstDrawText
  1172 ;;		_tftstFillScreen
  1173 ;;		_tftstInit
  1174 ;;		_tftstReadId
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text1
  1181  006CE8                     __ptext1:
  1182                           	callstack 0
  1183  006CE8                     _demo:
  1184                           	callstack 22
  1185  006CE8  8E8C               	bsf	140,7,c	;volatile
  1186  006CEA                     
  1187                           ;main.c: 50:     SPI_Open(0);
  1188  006CEA  0E00               	movlw	0
  1189  006CEC  EC60  F035         	call	_SPI_Open
  1190  006CF0                     
  1191                           ;main.c: 51:     _delay((unsigned long)((100)*(64000000/4000.0)));
  1192  006CF0  0E09               	movlw	9
  1193  006CF2  6E5F               	movwf	(??_demo+1)^0,c
  1194  006CF4  0E1E               	movlw	30
  1195  006CF6  6E5E               	movwf	??_demo^0,c
  1196  006CF8  0EE4               	movlw	228
  1197  006CFA                     u1577:
  1198  006CFA  2EE8               	decfsz	wreg,f,c
  1199  006CFC  D7FE               	bra	u1577
  1200  006CFE  2E5E               	decfsz	??_demo^0,f,c
  1201  006D00  D7FC               	bra	u1577
  1202  006D02  2E5F               	decfsz	(??_demo+1)^0,f,c
  1203  006D04  D7FA               	bra	u1577
  1204  006D06  F000 F000          	nop2	
  1205  006D0A                     
  1206                           ;main.c: 52:     tftstInit();
  1207  006D0A  ECFF  F03A         	call	_tftstInit	;wreg free
  1208  006D0E                     
  1209                           ;main.c: 54:     tftstFillScreen(0x0000);
  1210  006D0E  0E00               	movlw	0
  1211  006D10  6E08               	movwf	(tftstFillScreen@color+1)^0,c
  1212  006D12  0E00               	movlw	0
  1213  006D14  6E07               	movwf	tftstFillScreen@color^0,c
  1214  006D16  EC89  F034         	call	_tftstFillScreen	;wreg free
  1215  006D1A                     
  1216                           ;main.c: 56:     uint8_t y = 0;
  1217  006D1A  0E00               	movlw	0
  1218  006D1C  0100               	movlb	0	; () banked
  1219  006D1E  6F9F               	movwf	demo@y& (0+255),b
  1220  006D20                     
  1221                           ; BSR set to: 0
  1222                           ;main.c: 57:     int8_t deltaY = 1;
  1223  006D20  0E01               	movlw	1
  1224  006D22  6F9E               	movwf	demo@deltaY& (0+255),b
  1225  006D24                     l2738:
  1226                           
  1227                           ;main.c: 59:         tftstDrawHorizontalLine(6, y - 1, 160, 0x0000);
  1228  006D24  0100               	movlb	0	; () banked
  1229  006D26  059F               	decf	demo@y& (0+255),w,b
  1230  006D28  6E07               	movwf	tftstDrawHorizontalLine@y^0,c
  1231  006D2A  0EA0               	movlw	160
  1232  006D2C  6E08               	movwf	tftstDrawHorizontalLine@width^0,c
  1233  006D2E  0E00               	movlw	0
  1234  006D30  6E0A               	movwf	(tftstDrawHorizontalLine@color+1)^0,c
  1235  006D32  0E00               	movlw	0
  1236  006D34  6E09               	movwf	tftstDrawHorizontalLine@color^0,c
  1237  006D36  0E06               	movlw	6
  1238  006D38  EC05  F034         	call	_tftstDrawHorizontalLine
  1239  006D3C                     
  1240                           ;main.c: 60:         tftstDrawText(6, y, "funStackLabs", 0x07E0, 0x0000, 2);
  1241  006D3C  C09F  F022         	movff	demo@y,tftstDrawText@y
  1242  006D40  0E2C               	movlw	low STR_1
  1243  006D42  6E23               	movwf	tftstDrawText@_text^0,c
  1244  006D44  0E7D               	movlw	high STR_1
  1245  006D46  6E24               	movwf	(tftstDrawText@_text+1)^0,c
  1246  006D48  0E07               	movlw	7
  1247  006D4A  6E26               	movwf	(tftstDrawText@color+1)^0,c
  1248  006D4C  0EE0               	movlw	224
  1249  006D4E  6E25               	movwf	tftstDrawText@color^0,c
  1250  006D50  0E00               	movlw	0
  1251  006D52  6E28               	movwf	(tftstDrawText@bg+1)^0,c
  1252  006D54  0E00               	movlw	0
  1253  006D56  6E27               	movwf	tftstDrawText@bg^0,c
  1254  006D58  0E02               	movlw	2
  1255  006D5A  6E29               	movwf	tftstDrawText@size^0,c
  1256  006D5C  0E06               	movlw	6
  1257  006D5E  EC0E  F037         	call	_tftstDrawText
  1258  006D62                     
  1259                           ;main.c: 61:         tftstDrawHorizontalLine(6, y + 14, 160, 0x0000);
  1260  006D62  0100               	movlb	0	; () banked
  1261  006D64  519F               	movf	demo@y& (0+255),w,b
  1262  006D66  0F0E               	addlw	14
  1263  006D68  6E07               	movwf	tftstDrawHorizontalLine@y^0,c
  1264  006D6A  0EA0               	movlw	160
  1265  006D6C  6E08               	movwf	tftstDrawHorizontalLine@width^0,c
  1266  006D6E  0E00               	movlw	0
  1267  006D70  6E0A               	movwf	(tftstDrawHorizontalLine@color+1)^0,c
  1268  006D72  0E00               	movlw	0
  1269  006D74  6E09               	movwf	tftstDrawHorizontalLine@color^0,c
  1270  006D76  0E06               	movlw	6
  1271  006D78  EC05  F034         	call	_tftstDrawHorizontalLine
  1272  006D7C                     
  1273                           ;main.c: 62:         y += deltaY;
  1274  006D7C  0100               	movlb	0	; () banked
  1275  006D7E  519E               	movf	demo@deltaY& (0+255),w,b
  1276  006D80  279F               	addwf	demo@y& (0+255),f,b
  1277  006D82                     
  1278                           ; BSR set to: 0
  1279                           ;main.c: 63:         if (y == 0 || y == 114) {
  1280  006D82  519F               	movf	demo@y& (0+255),w,b
  1281  006D84  B4D8               	btfsc	status,2,c
  1282  006D86  EFC7  F036         	goto	u1521
  1283  006D8A  EFC9  F036         	goto	u1520
  1284  006D8E                     u1521:
  1285  006D8E  EFD2  F036         	goto	l2750
  1286  006D92                     u1520:
  1287  006D92                     
  1288                           ; BSR set to: 0
  1289  006D92  0E72               	movlw	114
  1290  006D94  199F               	xorwf	demo@y& (0+255),w,b
  1291  006D96  A4D8               	btfss	status,2,c
  1292  006D98  EFD0  F036         	goto	u1531
  1293  006D9C  EFD2  F036         	goto	u1530
  1294  006DA0                     u1531:
  1295  006DA0  EFD5  F036         	goto	l2754
  1296  006DA4                     u1530:
  1297  006DA4                     l2750:
  1298                           
  1299                           ; BSR set to: 0
  1300                           ;main.c: 64:             deltaY = -deltaY;
  1301  006DA4  6D9E               	negf	demo@deltaY& (0+255),b
  1302  006DA6                     
  1303                           ; BSR set to: 0
  1304                           ;main.c: 65:             y += deltaY;
  1305  006DA6  519E               	movf	demo@deltaY& (0+255),w,b
  1306  006DA8  279F               	addwf	demo@y& (0+255),f,b
  1307  006DAA                     l2754:
  1308                           
  1309                           ; BSR set to: 0
  1310                           ;main.c: 67:         uint8_t id = tftstReadId();
  1311  006DAA  ECCE  F033         	call	_tftstReadId	;wreg free
  1312  006DAE  0100               	movlb	0	; () banked
  1313  006DB0  6F9D               	movwf	demo@id& (0+255),b
  1314  006DB2                     
  1315                           ; BSR set to: 0
  1316                           ;main.c: 68:         char idString [8];;main.c: 69:         sprintf(idString, "ID:%d", i
      +                          d);
  1317  006DB2  0E95               	movlw	low demo@idString
  1318  006DB4  6E58               	movwf	sprintf@s^0,c
  1319  006DB6  0E00               	movlw	high demo@idString
  1320  006DB8  6E59               	movwf	(sprintf@s+1)^0,c
  1321  006DBA  0E39               	movlw	low STR_2
  1322  006DBC  6E5A               	movwf	sprintf@fmt^0,c
  1323  006DBE  0E7D               	movlw	high STR_2
  1324  006DC0  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1325  006DC2  C09D  F05C         	movff	demo@id,?_sprintf+4
  1326  006DC6  6A5D               	clrf	(?_sprintf+5)^0,c
  1327  006DC8  ECD3  F034         	call	_sprintf	;wreg free
  1328  006DCC                     
  1329                           ;main.c: 70:         tftstDrawText(0, 0, idString, 0x07E0, 0x0000, 1);
  1330  006DCC  0E00               	movlw	0
  1331  006DCE  6E22               	movwf	tftstDrawText@y^0,c
  1332  006DD0  0E95               	movlw	low demo@idString
  1333  006DD2  6E23               	movwf	tftstDrawText@_text^0,c
  1334  006DD4  0E00               	movlw	high demo@idString
  1335  006DD6  6E24               	movwf	(tftstDrawText@_text+1)^0,c
  1336  006DD8  0E07               	movlw	7
  1337  006DDA  6E26               	movwf	(tftstDrawText@color+1)^0,c
  1338  006DDC  0EE0               	movlw	224
  1339  006DDE  6E25               	movwf	tftstDrawText@color^0,c
  1340  006DE0  0E00               	movlw	0
  1341  006DE2  6E28               	movwf	(tftstDrawText@bg+1)^0,c
  1342  006DE4  0E00               	movlw	0
  1343  006DE6  6E27               	movwf	tftstDrawText@bg^0,c
  1344  006DE8  0E01               	movlw	1
  1345  006DEA  6E29               	movwf	tftstDrawText@size^0,c
  1346  006DEC  0E00               	movlw	0
  1347  006DEE  EC0E  F037         	call	_tftstDrawText
  1348  006DF2                     
  1349                           ;main.c: 71:         if (id != 124) {
  1350  006DF2  0E7C               	movlw	124
  1351  006DF4  0100               	movlb	0	; () banked
  1352  006DF6  199D               	xorwf	demo@id& (0+255),w,b
  1353  006DF8  B4D8               	btfsc	status,2,c
  1354  006DFA  EF01  F037         	goto	u1541
  1355  006DFE  EF03  F037         	goto	u1540
  1356  006E02                     u1541:
  1357  006E02  EF92  F036         	goto	l2738
  1358  006E06                     u1540:
  1359  006E06                     
  1360                           ; BSR set to: 0
  1361                           ;main.c: 72:             tftstInit();
  1362  006E06  ECFF  F03A         	call	_tftstInit	;wreg free
  1363  006E0A                     
  1364                           ;main.c: 73:             tftstFillScreen(0x0000);
  1365  006E0A  0E00               	movlw	0
  1366  006E0C  6E08               	movwf	(tftstFillScreen@color+1)^0,c
  1367  006E0E  0E00               	movlw	0
  1368  006E10  6E07               	movwf	tftstFillScreen@color^0,c
  1369  006E12  EC89  F034         	call	_tftstFillScreen	;wreg free
  1370  006E16  EF92  F036         	goto	l2738
  1371  006E1A  0012               	return		;funcret
  1372  006E1C                     __end_of_demo:
  1373                           	callstack 0
  1374                           
  1375 ;; *************** function _tftstReadId *****************
  1376 ;; Defined at:
  1377 ;;		line 39 in file "./tftst.h"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  id1             1    2[COMRAM] unsigned char 
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      unsigned char 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1391 ;;      Params:         0       0       0       0       0       0       0
  1392 ;;      Locals:         1       0       0       0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0       0       0
  1394 ;;      Totals:         1       0       0       0       0       0       0
  1395 ;;Total ram usage:        1 bytes
  1396 ;; Hardware stack levels used: 1
  1397 ;; Hardware stack levels required when called: 2
  1398 ;; This function calls:
  1399 ;;		_SPI_ExchangeByte
  1400 ;;		_tftstWriteData
  1401 ;; This function is called by:
  1402 ;;		_demo
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text2
  1407  00679C                     __ptext2:
  1408                           	callstack 0
  1409  00679C                     _tftstReadId:
  1410                           	callstack 27
  1411  00679C  948C               	bcf	140,2,c	;volatile
  1412  00679E                     
  1413                           ;./tftst.h: 41:     tftstWriteData(0xDA);
  1414  00679E  0EDA               	movlw	218
  1415  0067A0  EC81  F033         	call	_tftstWriteData
  1416  0067A4  8A94               	bsf	148,5,c	;volatile
  1417  0067A6  848C               	bsf	140,2,c	;volatile
  1418  0067A8                     
  1419                           ;./tftst.h: 44:     uint8_t id1 = SPI_ExchangeByte(0);
  1420  0067A8  0E00               	movlw	0
  1421  0067AA  ECC1  F033         	call	_SPI_ExchangeByte
  1422  0067AE  6E03               	movwf	tftstReadId@id1^0,c
  1423  0067B0  9A94               	bcf	148,5,c	;volatile
  1424  0067B2                     
  1425                           ;./tftst.h: 46:     return id1;
  1426  0067B2  5003               	movf	tftstReadId@id1^0,w,c
  1427  0067B4  0012               	return		;funcret
  1428  0067B6                     __end_of_tftstReadId:
  1429                           	callstack 0
  1430                           
  1431 ;; *************** function _tftstInit *****************
  1432 ;; Defined at:
  1433 ;;		line 177 in file "./tftst.h"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1447 ;;      Params:         0       0       0       0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0       0       0
  1449 ;;      Temps:          1       0       0       0       0       0       0
  1450 ;;      Totals:         1       0       0       0       0       0       0
  1451 ;;Total ram usage:        1 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; Hardware stack levels required when called: 2
  1454 ;; This function calls:
  1455 ;;		_tftstWriteCommand
  1456 ;;		_tftstWriteData
  1457 ;; This function is called by:
  1458 ;;		_demo
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text3
  1463  0075FE                     __ptext3:
  1464                           	callstack 0
  1465  0075FE                     _tftstInit:
  1466                           	callstack 27
  1467  0075FE  928C               	bcf	140,1,c	;volatile
  1468  007600                     
  1469                           ;./tftst.h: 179:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1470  007600  0ED0               	movlw	208
  1471  007602  6E03               	movwf	??_tftstInit^0,c
  1472  007604  0ECA               	movlw	202
  1473  007606                     u1587:
  1474  007606  2EE8               	decfsz	wreg,f,c
  1475  007608  D7FE               	bra	u1587
  1476  00760A  2E03               	decfsz	??_tftstInit^0,f,c
  1477  00760C  D7FC               	bra	u1587
  1478  00760E  828C               	bsf	140,1,c	;volatile
  1479  007610                     
  1480                           ;./tftst.h: 181:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1481  007610  0ED0               	movlw	208
  1482  007612  6E03               	movwf	??_tftstInit^0,c
  1483  007614  0ECA               	movlw	202
  1484  007616                     u1597:
  1485  007616  2EE8               	decfsz	wreg,f,c
  1486  007618  D7FE               	bra	u1597
  1487  00761A  2E03               	decfsz	??_tftstInit^0,f,c
  1488  00761C  D7FC               	bra	u1597
  1489  00761E  908C               	bcf	140,0,c	;volatile
  1490  007620                     
  1491                           ;./tftst.h: 184:     tftstWriteCommand(0x01);
  1492  007620  0E01               	movlw	1
  1493  007622  ECAC  F033         	call	_tftstWriteCommand
  1494  007626                     
  1495                           ;./tftst.h: 185:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1496  007626  0ED0               	movlw	208
  1497  007628  6E03               	movwf	??_tftstInit^0,c
  1498  00762A  0ECA               	movlw	202
  1499  00762C                     u1607:
  1500  00762C  2EE8               	decfsz	wreg,f,c
  1501  00762E  D7FE               	bra	u1607
  1502  007630  2E03               	decfsz	??_tftstInit^0,f,c
  1503  007632  D7FC               	bra	u1607
  1504                           
  1505                           ;./tftst.h: 186:     tftstWriteCommand(0x11);
  1506  007634  0E11               	movlw	17
  1507  007636  ECAC  F033         	call	_tftstWriteCommand
  1508  00763A                     
  1509                           ;./tftst.h: 187:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1510  00763A  0ED0               	movlw	208
  1511  00763C  6E03               	movwf	??_tftstInit^0,c
  1512  00763E  0ECA               	movlw	202
  1513  007640                     u1617:
  1514  007640  2EE8               	decfsz	wreg,f,c
  1515  007642  D7FE               	bra	u1617
  1516  007644  2E03               	decfsz	??_tftstInit^0,f,c
  1517  007646  D7FC               	bra	u1617
  1518  007648                     
  1519                           ;./tftst.h: 188:     tftstWriteCommand(0xB1);
  1520  007648  0EB1               	movlw	177
  1521  00764A  ECAC  F033         	call	_tftstWriteCommand
  1522  00764E                     
  1523                           ;./tftst.h: 189:     tftstWriteData(0x01);
  1524  00764E  0E01               	movlw	1
  1525  007650  EC81  F033         	call	_tftstWriteData
  1526  007654                     
  1527                           ;./tftst.h: 190:     tftstWriteData(0x2C);
  1528  007654  0E2C               	movlw	44
  1529  007656  EC81  F033         	call	_tftstWriteData
  1530  00765A                     
  1531                           ;./tftst.h: 191:     tftstWriteData(0x2D);
  1532  00765A  0E2D               	movlw	45
  1533  00765C  EC81  F033         	call	_tftstWriteData
  1534  007660                     
  1535                           ;./tftst.h: 192:     tftstWriteCommand(0xB2);
  1536  007660  0EB2               	movlw	178
  1537  007662  ECAC  F033         	call	_tftstWriteCommand
  1538  007666                     
  1539                           ;./tftst.h: 193:     tftstWriteData(0x01);
  1540  007666  0E01               	movlw	1
  1541  007668  EC81  F033         	call	_tftstWriteData
  1542  00766C                     
  1543                           ;./tftst.h: 194:     tftstWriteData(0x2C);
  1544  00766C  0E2C               	movlw	44
  1545  00766E  EC81  F033         	call	_tftstWriteData
  1546  007672                     
  1547                           ;./tftst.h: 195:     tftstWriteData(0x2D);
  1548  007672  0E2D               	movlw	45
  1549  007674  EC81  F033         	call	_tftstWriteData
  1550  007678                     
  1551                           ;./tftst.h: 196:     tftstWriteCommand(0xB3);
  1552  007678  0EB3               	movlw	179
  1553  00767A  ECAC  F033         	call	_tftstWriteCommand
  1554  00767E                     
  1555                           ;./tftst.h: 197:     tftstWriteData(0x01);
  1556  00767E  0E01               	movlw	1
  1557  007680  EC81  F033         	call	_tftstWriteData
  1558  007684                     
  1559                           ;./tftst.h: 198:     tftstWriteData(0x2C);
  1560  007684  0E2C               	movlw	44
  1561  007686  EC81  F033         	call	_tftstWriteData
  1562  00768A                     
  1563                           ;./tftst.h: 199:     tftstWriteData(0x2D);
  1564  00768A  0E2D               	movlw	45
  1565  00768C  EC81  F033         	call	_tftstWriteData
  1566  007690                     
  1567                           ;./tftst.h: 200:     tftstWriteData(0x01);
  1568  007690  0E01               	movlw	1
  1569  007692  EC81  F033         	call	_tftstWriteData
  1570  007696                     
  1571                           ;./tftst.h: 201:     tftstWriteData(0x2C);
  1572  007696  0E2C               	movlw	44
  1573  007698  EC81  F033         	call	_tftstWriteData
  1574  00769C                     
  1575                           ;./tftst.h: 202:     tftstWriteData(0x2D);
  1576  00769C  0E2D               	movlw	45
  1577  00769E  EC81  F033         	call	_tftstWriteData
  1578  0076A2                     
  1579                           ;./tftst.h: 203:     tftstWriteCommand(0xB4);
  1580  0076A2  0EB4               	movlw	180
  1581  0076A4  ECAC  F033         	call	_tftstWriteCommand
  1582  0076A8                     
  1583                           ;./tftst.h: 204:     tftstWriteData(0x07);
  1584  0076A8  0E07               	movlw	7
  1585  0076AA  EC81  F033         	call	_tftstWriteData
  1586  0076AE                     
  1587                           ;./tftst.h: 205:     tftstWriteCommand(0xC0);
  1588  0076AE  0EC0               	movlw	192
  1589  0076B0  ECAC  F033         	call	_tftstWriteCommand
  1590  0076B4                     
  1591                           ;./tftst.h: 206:     tftstWriteData(0xA2);
  1592  0076B4  0EA2               	movlw	162
  1593  0076B6  EC81  F033         	call	_tftstWriteData
  1594  0076BA                     
  1595                           ;./tftst.h: 207:     tftstWriteData(0x02);
  1596  0076BA  0E02               	movlw	2
  1597  0076BC  EC81  F033         	call	_tftstWriteData
  1598  0076C0                     
  1599                           ;./tftst.h: 208:     tftstWriteData(0x84);
  1600  0076C0  0E84               	movlw	132
  1601  0076C2  EC81  F033         	call	_tftstWriteData
  1602  0076C6                     
  1603                           ;./tftst.h: 209:     tftstWriteCommand(0xC1);
  1604  0076C6  0EC1               	movlw	193
  1605  0076C8  ECAC  F033         	call	_tftstWriteCommand
  1606  0076CC                     
  1607                           ;./tftst.h: 210:     tftstWriteData(0xC5);
  1608  0076CC  0EC5               	movlw	197
  1609  0076CE  EC81  F033         	call	_tftstWriteData
  1610  0076D2                     
  1611                           ;./tftst.h: 211:     tftstWriteCommand(0xC2);
  1612  0076D2  0EC2               	movlw	194
  1613  0076D4  ECAC  F033         	call	_tftstWriteCommand
  1614  0076D8                     
  1615                           ;./tftst.h: 212:     tftstWriteData(0x0A);
  1616  0076D8  0E0A               	movlw	10
  1617  0076DA  EC81  F033         	call	_tftstWriteData
  1618  0076DE                     
  1619                           ;./tftst.h: 213:     tftstWriteData(0x00);
  1620  0076DE  0E00               	movlw	0
  1621  0076E0  EC81  F033         	call	_tftstWriteData
  1622  0076E4                     
  1623                           ;./tftst.h: 214:     tftstWriteCommand(0xC3);
  1624  0076E4  0EC3               	movlw	195
  1625  0076E6  ECAC  F033         	call	_tftstWriteCommand
  1626  0076EA                     
  1627                           ;./tftst.h: 215:     tftstWriteData(0x8A);
  1628  0076EA  0E8A               	movlw	138
  1629  0076EC  EC81  F033         	call	_tftstWriteData
  1630  0076F0                     
  1631                           ;./tftst.h: 216:     tftstWriteData(0x2A);
  1632  0076F0  0E2A               	movlw	42
  1633  0076F2  EC81  F033         	call	_tftstWriteData
  1634  0076F6                     
  1635                           ;./tftst.h: 217:     tftstWriteCommand(0xC4);
  1636  0076F6  0EC4               	movlw	196
  1637  0076F8  ECAC  F033         	call	_tftstWriteCommand
  1638  0076FC                     
  1639                           ;./tftst.h: 218:     tftstWriteData(0x8A);
  1640  0076FC  0E8A               	movlw	138
  1641  0076FE  EC81  F033         	call	_tftstWriteData
  1642  007702                     
  1643                           ;./tftst.h: 219:     tftstWriteData(0xEE);
  1644  007702  0EEE               	movlw	238
  1645  007704  EC81  F033         	call	_tftstWriteData
  1646  007708                     
  1647                           ;./tftst.h: 220:     tftstWriteCommand(0xC5);
  1648  007708  0EC5               	movlw	197
  1649  00770A  ECAC  F033         	call	_tftstWriteCommand
  1650  00770E                     
  1651                           ;./tftst.h: 221:     tftstWriteData(0x0E);
  1652  00770E  0E0E               	movlw	14
  1653  007710  EC81  F033         	call	_tftstWriteData
  1654  007714                     
  1655                           ;./tftst.h: 222:     tftstWriteCommand(0x20);
  1656  007714  0E20               	movlw	32
  1657  007716  ECAC  F033         	call	_tftstWriteCommand
  1658  00771A                     
  1659                           ;./tftst.h: 223:     tftstWriteCommand(0x36);
  1660  00771A  0E36               	movlw	54
  1661  00771C  ECAC  F033         	call	_tftstWriteCommand
  1662  007720                     
  1663                           ;./tftst.h: 224:     tftstWriteData(0b01100000);
  1664  007720  0E60               	movlw	96
  1665  007722  EC81  F033         	call	_tftstWriteData
  1666  007726                     
  1667                           ;./tftst.h: 225:     tftstWriteCommand(0x3A);
  1668  007726  0E3A               	movlw	58
  1669  007728  ECAC  F033         	call	_tftstWriteCommand
  1670  00772C                     
  1671                           ;./tftst.h: 226:     tftstWriteData(0x05);
  1672  00772C  0E05               	movlw	5
  1673  00772E  EC81  F033         	call	_tftstWriteData
  1674  007732                     
  1675                           ;./tftst.h: 228:     tftstWriteCommand(0x2A);
  1676  007732  0E2A               	movlw	42
  1677  007734  ECAC  F033         	call	_tftstWriteCommand
  1678  007738                     
  1679                           ;./tftst.h: 229:     tftstWriteData(0x00);
  1680  007738  0E00               	movlw	0
  1681  00773A  EC81  F033         	call	_tftstWriteData
  1682  00773E                     
  1683                           ;./tftst.h: 230:     tftstWriteData(0x00);
  1684  00773E  0E00               	movlw	0
  1685  007740  EC81  F033         	call	_tftstWriteData
  1686  007744                     
  1687                           ;./tftst.h: 231:     tftstWriteData(0x00);
  1688  007744  0E00               	movlw	0
  1689  007746  EC81  F033         	call	_tftstWriteData
  1690  00774A                     
  1691                           ;./tftst.h: 232:     tftstWriteData(0x7F);
  1692  00774A  0E7F               	movlw	127
  1693  00774C  EC81  F033         	call	_tftstWriteData
  1694  007750                     
  1695                           ;./tftst.h: 233:     tftstWriteCommand(0x2B);
  1696  007750  0E2B               	movlw	43
  1697  007752  ECAC  F033         	call	_tftstWriteCommand
  1698  007756                     
  1699                           ;./tftst.h: 234:     tftstWriteData(0x00);
  1700  007756  0E00               	movlw	0
  1701  007758  EC81  F033         	call	_tftstWriteData
  1702  00775C                     
  1703                           ;./tftst.h: 235:     tftstWriteData(0x00);
  1704  00775C  0E00               	movlw	0
  1705  00775E  EC81  F033         	call	_tftstWriteData
  1706  007762                     
  1707                           ;./tftst.h: 236:     tftstWriteData(0x00);
  1708  007762  0E00               	movlw	0
  1709  007764  EC81  F033         	call	_tftstWriteData
  1710  007768                     
  1711                           ;./tftst.h: 237:     tftstWriteData(0x9F);
  1712  007768  0E9F               	movlw	159
  1713  00776A  EC81  F033         	call	_tftstWriteData
  1714  00776E                     
  1715                           ;./tftst.h: 239:     tftstWriteCommand(0xE0);
  1716  00776E  0EE0               	movlw	224
  1717  007770  ECAC  F033         	call	_tftstWriteCommand
  1718  007774                     
  1719                           ;./tftst.h: 240:     tftstWriteData(0x02);
  1720  007774  0E02               	movlw	2
  1721  007776  EC81  F033         	call	_tftstWriteData
  1722  00777A                     
  1723                           ;./tftst.h: 241:     tftstWriteData(0x1C);
  1724  00777A  0E1C               	movlw	28
  1725  00777C  EC81  F033         	call	_tftstWriteData
  1726  007780                     
  1727                           ;./tftst.h: 242:     tftstWriteData(0x07);
  1728  007780  0E07               	movlw	7
  1729  007782  EC81  F033         	call	_tftstWriteData
  1730  007786                     
  1731                           ;./tftst.h: 243:     tftstWriteData(0x12);
  1732  007786  0E12               	movlw	18
  1733  007788  EC81  F033         	call	_tftstWriteData
  1734  00778C                     
  1735                           ;./tftst.h: 244:     tftstWriteData(0x37);
  1736  00778C  0E37               	movlw	55
  1737  00778E  EC81  F033         	call	_tftstWriteData
  1738  007792                     
  1739                           ;./tftst.h: 245:     tftstWriteData(0x32);
  1740  007792  0E32               	movlw	50
  1741  007794  EC81  F033         	call	_tftstWriteData
  1742  007798                     
  1743                           ;./tftst.h: 246:     tftstWriteData(0x29);
  1744  007798  0E29               	movlw	41
  1745  00779A  EC81  F033         	call	_tftstWriteData
  1746  00779E                     
  1747                           ;./tftst.h: 247:     tftstWriteData(0x2D);
  1748  00779E  0E2D               	movlw	45
  1749  0077A0  EC81  F033         	call	_tftstWriteData
  1750  0077A4                     
  1751                           ;./tftst.h: 248:     tftstWriteData(0x29);
  1752  0077A4  0E29               	movlw	41
  1753  0077A6  EC81  F033         	call	_tftstWriteData
  1754  0077AA                     
  1755                           ;./tftst.h: 249:     tftstWriteData(0x25);
  1756  0077AA  0E25               	movlw	37
  1757  0077AC  EC81  F033         	call	_tftstWriteData
  1758  0077B0                     
  1759                           ;./tftst.h: 250:     tftstWriteData(0x2B);
  1760  0077B0  0E2B               	movlw	43
  1761  0077B2  EC81  F033         	call	_tftstWriteData
  1762  0077B6                     
  1763                           ;./tftst.h: 251:     tftstWriteData(0x39);
  1764  0077B6  0E39               	movlw	57
  1765  0077B8  EC81  F033         	call	_tftstWriteData
  1766  0077BC                     
  1767                           ;./tftst.h: 252:     tftstWriteData(0x00);
  1768  0077BC  0E00               	movlw	0
  1769  0077BE  EC81  F033         	call	_tftstWriteData
  1770  0077C2                     
  1771                           ;./tftst.h: 253:     tftstWriteData(0x01);
  1772  0077C2  0E01               	movlw	1
  1773  0077C4  EC81  F033         	call	_tftstWriteData
  1774  0077C8                     
  1775                           ;./tftst.h: 254:     tftstWriteData(0x03);
  1776  0077C8  0E03               	movlw	3
  1777  0077CA  EC81  F033         	call	_tftstWriteData
  1778  0077CE                     
  1779                           ;./tftst.h: 255:     tftstWriteData(0x10);
  1780  0077CE  0E10               	movlw	16
  1781  0077D0  EC81  F033         	call	_tftstWriteData
  1782  0077D4                     
  1783                           ;./tftst.h: 256:     tftstWriteCommand(0xE1);
  1784  0077D4  0EE1               	movlw	225
  1785  0077D6  ECAC  F033         	call	_tftstWriteCommand
  1786  0077DA                     
  1787                           ;./tftst.h: 257:     tftstWriteData(0x03);
  1788  0077DA  0E03               	movlw	3
  1789  0077DC  EC81  F033         	call	_tftstWriteData
  1790  0077E0                     
  1791                           ;./tftst.h: 258:     tftstWriteData(0x1D);
  1792  0077E0  0E1D               	movlw	29
  1793  0077E2  EC81  F033         	call	_tftstWriteData
  1794  0077E6                     
  1795                           ;./tftst.h: 259:     tftstWriteData(0x07);
  1796  0077E6  0E07               	movlw	7
  1797  0077E8  EC81  F033         	call	_tftstWriteData
  1798  0077EC                     
  1799                           ;./tftst.h: 260:     tftstWriteData(0x06);
  1800  0077EC  0E06               	movlw	6
  1801  0077EE  EC81  F033         	call	_tftstWriteData
  1802  0077F2                     
  1803                           ;./tftst.h: 261:     tftstWriteData(0x2E);
  1804  0077F2  0E2E               	movlw	46
  1805  0077F4  EC81  F033         	call	_tftstWriteData
  1806  0077F8                     
  1807                           ;./tftst.h: 262:     tftstWriteData(0x2C);
  1808  0077F8  0E2C               	movlw	44
  1809  0077FA  EC81  F033         	call	_tftstWriteData
  1810  0077FE                     
  1811                           ;./tftst.h: 263:     tftstWriteData(0x29);
  1812  0077FE  0E29               	movlw	41
  1813  007800  EC81  F033         	call	_tftstWriteData
  1814  007804                     
  1815                           ;./tftst.h: 264:     tftstWriteData(0x2D);
  1816  007804  0E2D               	movlw	45
  1817  007806  EC81  F033         	call	_tftstWriteData
  1818  00780A                     
  1819                           ;./tftst.h: 265:     tftstWriteData(0x2E);
  1820  00780A  0E2E               	movlw	46
  1821  00780C  EC81  F033         	call	_tftstWriteData
  1822  007810                     
  1823                           ;./tftst.h: 266:     tftstWriteData(0x2E);
  1824  007810  0E2E               	movlw	46
  1825  007812  EC81  F033         	call	_tftstWriteData
  1826  007816                     
  1827                           ;./tftst.h: 267:     tftstWriteData(0x37);
  1828  007816  0E37               	movlw	55
  1829  007818  EC81  F033         	call	_tftstWriteData
  1830  00781C                     
  1831                           ;./tftst.h: 268:     tftstWriteData(0x3F);
  1832  00781C  0E3F               	movlw	63
  1833  00781E  EC81  F033         	call	_tftstWriteData
  1834  007822                     
  1835                           ;./tftst.h: 269:     tftstWriteData(0x00);
  1836  007822  0E00               	movlw	0
  1837  007824  EC81  F033         	call	_tftstWriteData
  1838  007828                     
  1839                           ;./tftst.h: 270:     tftstWriteData(0x00);
  1840  007828  0E00               	movlw	0
  1841  00782A  EC81  F033         	call	_tftstWriteData
  1842  00782E                     
  1843                           ;./tftst.h: 271:     tftstWriteData(0x02);
  1844  00782E  0E02               	movlw	2
  1845  007830  EC81  F033         	call	_tftstWriteData
  1846  007834                     
  1847                           ;./tftst.h: 272:     tftstWriteData(0x10);
  1848  007834  0E10               	movlw	16
  1849  007836  EC81  F033         	call	_tftstWriteData
  1850  00783A                     
  1851                           ;./tftst.h: 273:     tftstWriteCommand(0x13);
  1852  00783A  0E13               	movlw	19
  1853  00783C  ECAC  F033         	call	_tftstWriteCommand
  1854  007840                     
  1855                           ;./tftst.h: 274:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1856  007840  0ED0               	movlw	208
  1857  007842  6E03               	movwf	??_tftstInit^0,c
  1858  007844  0ECA               	movlw	202
  1859  007846                     u1627:
  1860  007846  2EE8               	decfsz	wreg,f,c
  1861  007848  D7FE               	bra	u1627
  1862  00784A  2E03               	decfsz	??_tftstInit^0,f,c
  1863  00784C  D7FC               	bra	u1627
  1864                           
  1865                           ;./tftst.h: 275:     tftstWriteCommand(0x29);
  1866  00784E  0E29               	movlw	41
  1867  007850  ECAC  F033         	call	_tftstWriteCommand
  1868  007854                     
  1869                           ;./tftst.h: 276:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1870  007854  0ED0               	movlw	208
  1871  007856  6E03               	movwf	??_tftstInit^0,c
  1872  007858  0ECA               	movlw	202
  1873  00785A                     u1637:
  1874  00785A  2EE8               	decfsz	wreg,f,c
  1875  00785C  D7FE               	bra	u1637
  1876  00785E  2E03               	decfsz	??_tftstInit^0,f,c
  1877  007860  D7FC               	bra	u1637
  1878  007862  8E8C               	bsf	140,7,c	;volatile
  1879  007864  0012               	return		;funcret
  1880  007866                     __end_of_tftstInit:
  1881                           	callstack 0
  1882                           
  1883 ;; *************** function _tftstFillScreen *****************
  1884 ;; Defined at:
  1885 ;;		line 79 in file "./tftst.h"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;  color           2    6[COMRAM] unsigned short 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  counter         2    8[COMRAM] unsigned short 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1899 ;;      Params:         2       0       0       0       0       0       0
  1900 ;;      Locals:         2       0       0       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0
  1902 ;;      Totals:         4       0       0       0       0       0       0
  1903 ;;Total ram usage:        4 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; Hardware stack levels required when called: 3
  1906 ;; This function calls:
  1907 ;;		_tftstSetWindow
  1908 ;;		_tftstWriteColor
  1909 ;; This function is called by:
  1910 ;;		_demo
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text4
  1915  006912                     __ptext4:
  1916                           	callstack 0
  1917  006912                     _tftstFillScreen:
  1918                           	callstack 26
  1919  006912                     
  1920                           ;./tftst.h: 80:     uint16_t counter = TFTST_PIXEL_COUNT;
  1921  006912  0E50               	movlw	80
  1922  006914  6E0A               	movwf	(tftstFillScreen@counter+1)^0,c
  1923  006916  0E00               	movlw	0
  1924  006918  6E09               	movwf	tftstFillScreen@counter^0,c
  1925  00691A                     
  1926                           ;./tftst.h: 81:     tftstSetWindow(0, TFTST_WIDTH, 0, TFTST_HEIGHT);
  1927  00691A  0EA0               	movlw	160
  1928  00691C  6E03               	movwf	tftstSetWindow@xEnd^0,c
  1929  00691E  0E00               	movlw	0
  1930  006920  6E04               	movwf	tftstSetWindow@yStart^0,c
  1931  006922  0E80               	movlw	128
  1932  006924  6E05               	movwf	tftstSetWindow@yEnd^0,c
  1933  006926  0E00               	movlw	0
  1934  006928  EC66  F034         	call	_tftstSetWindow
  1935                           
  1936                           ;./tftst.h: 82:     while (counter--) {
  1937  00692C  EF9E  F034         	goto	l2374
  1938  006930                     l2372:
  1939                           
  1940                           ;./tftst.h: 83:         tftstWriteColor(color);
  1941  006930  C007  F003         	movff	tftstFillScreen@color,tftstWriteColor@color
  1942  006934  C008  F004         	movff	tftstFillScreen@color+1,tftstWriteColor@color+1
  1943  006938  EC93  F033         	call	_tftstWriteColor	;wreg free
  1944  00693C                     l2374:
  1945                           
  1946                           ;./tftst.h: 82:     while (counter--) {
  1947  00693C  0609               	decf	tftstFillScreen@counter^0,f,c
  1948  00693E  A0D8               	btfss	status,0,c
  1949  006940  060A               	decf	(tftstFillScreen@counter+1)^0,f,c
  1950  006942  2809               	incf	tftstFillScreen@counter^0,w,c
  1951  006944  E106               	bnz	u1421
  1952  006946  280A               	incf	(tftstFillScreen@counter+1)^0,w,c
  1953  006948  A4D8               	btfss	status,2,c
  1954  00694A  EFA9  F034         	goto	u1421
  1955  00694E  EFAB  F034         	goto	u1420
  1956  006952                     u1421:
  1957  006952  EF98  F034         	goto	l2372
  1958  006956                     u1420:
  1959  006956  0012               	return		;funcret
  1960  006958                     __end_of_tftstFillScreen:
  1961                           	callstack 0
  1962                           
  1963 ;; *************** function _tftstDrawText *****************
  1964 ;; Defined at:
  1965 ;;		line 149 in file "./tftst.h"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  x               1    wreg     unsigned char 
  1968 ;;  y               1   33[COMRAM] unsigned char 
  1969 ;;  _text           2   34[COMRAM] PTR unsigned char 
  1970 ;;		 -> demo@idString(8), STR_1(13), 
  1971 ;;  color           2   36[COMRAM] unsigned short 
  1972 ;;  bg              2   38[COMRAM] unsigned short 
  1973 ;;  size            1   40[COMRAM] unsigned char 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  x               1   45[COMRAM] unsigned char 
  1976 ;;  i               2   46[COMRAM] unsigned short 
  1977 ;;  textsize        2   43[COMRAM] unsigned short 
  1978 ;;  cursor_x        1   49[COMRAM] unsigned char 
  1979 ;;  cursor_y        1   48[COMRAM] unsigned char 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1989 ;;      Params:         8       0       0       0       0       0       0
  1990 ;;      Locals:         7       0       0       0       0       0       0
  1991 ;;      Temps:          2       0       0       0       0       0       0
  1992 ;;      Totals:        17       0       0       0       0       0       0
  1993 ;;Total ram usage:       17 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; Hardware stack levels required when called: 5
  1996 ;; This function calls:
  1997 ;;		_strlen
  1998 ;;		_tftstDrawChar
  1999 ;; This function is called by:
  2000 ;;		_demo
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text5
  2005  006E1C                     __ptext5:
  2006                           	callstack 0
  2007  006E1C                     _tftstDrawText:
  2008                           	callstack 24
  2009                           
  2010                           ;incstack = 0
  2011                           ;tftstDrawText@x stored from wreg
  2012  006E1C  6E2E               	movwf	tftstDrawText@x^0,c
  2013  006E1E                     
  2014                           ;./tftst.h: 150:     uint8_t cursor_x, cursor_y;;./tftst.h: 151:     uint16_t textsize, 
      +                          i;;./tftst.h: 152:     cursor_x = x, cursor_y = y;
  2015  006E1E  C02E  F032         	movff	tftstDrawText@x,tftstDrawText@cursor_x
  2016  006E22  C022  F031         	movff	tftstDrawText@y,tftstDrawText@cursor_y
  2017  006E26                     
  2018                           ;./tftst.h: 153:     textsize = strlen(_text);
  2019  006E26  C023  F001         	movff	tftstDrawText@_text,strlen@s
  2020  006E2A  C024  F002         	movff	tftstDrawText@_text+1,strlen@s+1
  2021  006E2E  ECAC  F034         	call	_strlen	;wreg free
  2022  006E32  C001  F02C         	movff	?_strlen,tftstDrawText@textsize
  2023  006E36  C002  F02D         	movff	?_strlen+1,tftstDrawText@textsize+1
  2024  006E3A                     
  2025                           ;./tftst.h: 154:     for (i = 0; i < textsize; i++) {
  2026  006E3A  0E00               	movlw	0
  2027  006E3C  6E30               	movwf	(tftstDrawText@i+1)^0,c
  2028  006E3E  0E00               	movlw	0
  2029  006E40  6E2F               	movwf	tftstDrawText@i^0,c
  2030  006E42  EFA4  F037         	goto	l2416
  2031  006E46                     l2392:
  2032                           
  2033                           ;./tftst.h: 155:         if (((cursor_x + size * 5) > TFTST_WIDTH)) {
  2034  006E46  5029               	movf	tftstDrawText@size^0,w,c
  2035  006E48  0D05               	mullw	5
  2036  006E4A  CFF3 F02A          	movff	prodl,??_tftstDrawText
  2037  006E4E  CFF4 F02B          	movff	prodh,??_tftstDrawText+1
  2038  006E52  5032               	movf	tftstDrawText@cursor_x^0,w,c
  2039  006E54  262A               	addwf	??_tftstDrawText^0,f,c
  2040  006E56  0E00               	movlw	0
  2041  006E58  222B               	addwfc	(??_tftstDrawText+1)^0,f,c
  2042  006E5A  BE2B               	btfsc	(??_tftstDrawText+1)^0,7,c
  2043  006E5C  EF39  F037         	goto	u1441
  2044  006E60  502B               	movf	(??_tftstDrawText+1)^0,w,c
  2045  006E62  E109               	bnz	u1440
  2046  006E64  0EA1               	movlw	161
  2047  006E66  5C2A               	subwf	??_tftstDrawText^0,w,c
  2048  006E68  A0D8               	btfss	status,0,c
  2049  006E6A  EF39  F037         	goto	u1441
  2050  006E6E  EF3B  F037         	goto	u1440
  2051  006E72                     u1441:
  2052  006E72  EF6D  F037         	goto	l2406
  2053  006E76                     u1440:
  2054  006E76                     
  2055                           ;./tftst.h: 156:             cursor_x = 0;
  2056  006E76  0E00               	movlw	0
  2057  006E78  6E32               	movwf	tftstDrawText@cursor_x^0,c
  2058  006E7A                     
  2059                           ;./tftst.h: 157:             cursor_y = cursor_y + size * 7 + 3;
  2060  006E7A  5029               	movf	tftstDrawText@size^0,w,c
  2061  006E7C  0D07               	mullw	7
  2062  006E7E  50F3               	movf	243,w,c
  2063  006E80  2431               	addwf	tftstDrawText@cursor_y^0,w,c
  2064  006E82  0F03               	addlw	3
  2065  006E84  6E31               	movwf	tftstDrawText@cursor_y^0,c
  2066  006E86                     
  2067                           ;./tftst.h: 158:             if (cursor_y > TFTST_HEIGHT) cursor_y = TFTST_HEIGHT;
  2068  006E86  0E80               	movlw	128
  2069  006E88  6431               	cpfsgt	tftstDrawText@cursor_y^0,c
  2070  006E8A  EF49  F037         	goto	u1451
  2071  006E8E  EF4B  F037         	goto	u1450
  2072  006E92                     u1451:
  2073  006E92  EF4D  F037         	goto	l2402
  2074  006E96                     u1450:
  2075  006E96  0E80               	movlw	128
  2076  006E98  6E31               	movwf	tftstDrawText@cursor_y^0,c
  2077  006E9A                     l2402:
  2078                           
  2079                           ;./tftst.h: 159:             if (_text[i] == 0x20) goto _skip;
  2080  006E9A  502F               	movf	tftstDrawText@i^0,w,c
  2081  006E9C  2423               	addwf	tftstDrawText@_text^0,w,c
  2082  006E9E  6E2A               	movwf	??_tftstDrawText^0,c
  2083  006EA0  5030               	movf	(tftstDrawText@i+1)^0,w,c
  2084  006EA2  2024               	addwfc	(tftstDrawText@_text+1)^0,w,c
  2085  006EA4  6E2B               	movwf	(??_tftstDrawText+1)^0,c
  2086  006EA6  C02A  FFF6         	movff	??_tftstDrawText,tblptrl
  2087  006EAA  C02B  FFF7         	movff	??_tftstDrawText+1,tblptrh
  2088  006EAE  6AF8               	clrf	tblptru,c
  2089  006EB0  0E05               	movlw	(high __ramtop+-1)
  2090  006EB2  64F7               	cpfsgt	tblptrh,c
  2091  006EB4  D003               	bra	u1467
  2092  006EB6  0008               	tblrd		*
  2093  006EB8  50F5               	movf	tablat,w,c
  2094  006EBA  D005               	bra	u1460
  2095  006EBC                     u1467:
  2096  006EBC  CFF6 FFE1          	movff	tblptrl,fsr1l
  2097  006EC0  CFF7 FFE2          	movff	tblptrh,fsr1h
  2098  006EC4  50E7               	movf	indf1,w,c
  2099  006EC6                     u1460:
  2100  006EC6  0A20               	xorlw	32
  2101  006EC8  A4D8               	btfss	status,2,c
  2102  006ECA  EF69  F037         	goto	u1471
  2103  006ECE  EF6B  F037         	goto	u1470
  2104  006ED2                     u1471:
  2105  006ED2  EF6D  F037         	goto	l2406
  2106  006ED6                     u1470:
  2107  006ED6  EFA2  F037         	goto	l2414
  2108  006EDA                     l2406:
  2109                           
  2110                           ;./tftst.h: 161:         tftstDrawChar(cursor_x, cursor_y, _text[i], color, bg, size);
  2111  006EDA  C031  F011         	movff	tftstDrawText@cursor_y,tftstDrawChar@y
  2112  006EDE  502F               	movf	tftstDrawText@i^0,w,c
  2113  006EE0  2423               	addwf	tftstDrawText@_text^0,w,c
  2114  006EE2  6E2A               	movwf	??_tftstDrawText^0,c
  2115  006EE4  5030               	movf	(tftstDrawText@i+1)^0,w,c
  2116  006EE6  2024               	addwfc	(tftstDrawText@_text+1)^0,w,c
  2117  006EE8  6E2B               	movwf	(??_tftstDrawText+1)^0,c
  2118  006EEA  C02A  FFF6         	movff	??_tftstDrawText,tblptrl
  2119  006EEE  C02B  FFF7         	movff	??_tftstDrawText+1,tblptrh
  2120  006EF2  6AF8               	clrf	tblptru,c
  2121  006EF4  0E05               	movlw	(high __ramtop+-1)
  2122  006EF6  64F7               	cpfsgt	tblptrh,c
  2123  006EF8  D003               	bra	u1487
  2124  006EFA  0008               	tblrd		*
  2125  006EFC  50F5               	movf	tablat,w,c
  2126  006EFE  D005               	bra	u1480
  2127  006F00                     u1487:
  2128  006F00  CFF6 FFE1          	movff	tblptrl,fsr1l
  2129  006F04  CFF7 FFE2          	movff	tblptrh,fsr1h
  2130  006F08  50E7               	movf	indf1,w,c
  2131  006F0A                     u1480:
  2132  006F0A  6E12               	movwf	tftstDrawChar@c^0,c
  2133  006F0C  C025  F013         	movff	tftstDrawText@color,tftstDrawChar@color
  2134  006F10  C026  F014         	movff	tftstDrawText@color+1,tftstDrawChar@color+1
  2135  006F14  C027  F015         	movff	tftstDrawText@bg,tftstDrawChar@bg
  2136  006F18  C028  F016         	movff	tftstDrawText@bg+1,tftstDrawChar@bg+1
  2137  006F1C  C029  F017         	movff	tftstDrawText@size,tftstDrawChar@size
  2138  006F20  5032               	movf	tftstDrawText@cursor_x^0,w,c
  2139  006F22  EC00  F03A         	call	_tftstDrawChar
  2140  006F26                     
  2141                           ;./tftst.h: 162:         cursor_x = cursor_x + size * 6;
  2142  006F26  5029               	movf	tftstDrawText@size^0,w,c
  2143  006F28  0D06               	mullw	6
  2144  006F2A  50F3               	movf	243,w,c
  2145  006F2C  2432               	addwf	tftstDrawText@cursor_x^0,w,c
  2146  006F2E  6E32               	movwf	tftstDrawText@cursor_x^0,c
  2147  006F30                     
  2148                           ;./tftst.h: 163:         if (cursor_x > TFTST_WIDTH) cursor_x = TFTST_WIDTH;
  2149  006F30  0EA0               	movlw	160
  2150  006F32  6432               	cpfsgt	tftstDrawText@cursor_x^0,c
  2151  006F34  EF9E  F037         	goto	u1491
  2152  006F38  EFA0  F037         	goto	u1490
  2153  006F3C                     u1491:
  2154  006F3C  EFA2  F037         	goto	l2414
  2155  006F40                     u1490:
  2156  006F40  0EA0               	movlw	160
  2157  006F42  6E32               	movwf	tftstDrawText@cursor_x^0,c
  2158  006F44                     l2414:
  2159                           
  2160                           ;./tftst.h: 166:     }
  2161  006F44  4A2F               	infsnz	tftstDrawText@i^0,f,c
  2162  006F46  2A30               	incf	(tftstDrawText@i+1)^0,f,c
  2163  006F48                     l2416:
  2164  006F48  502C               	movf	tftstDrawText@textsize^0,w,c
  2165  006F4A  5C2F               	subwf	tftstDrawText@i^0,w,c
  2166  006F4C  502D               	movf	(tftstDrawText@textsize+1)^0,w,c
  2167  006F4E  5830               	subwfb	(tftstDrawText@i+1)^0,w,c
  2168  006F50  A0D8               	btfss	status,0,c
  2169  006F52  EFAD  F037         	goto	u1501
  2170  006F56  EFAF  F037         	goto	u1500
  2171  006F5A                     u1501:
  2172  006F5A  EF23  F037         	goto	l2392
  2173  006F5E                     u1500:
  2174  006F5E  0012               	return		;funcret
  2175  006F60                     __end_of_tftstDrawText:
  2176                           	callstack 0
  2177                           
  2178 ;; *************** function _tftstDrawChar *****************
  2179 ;; Defined at:
  2180 ;;		line 124 in file "./tftst.h"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  x               1    wreg     unsigned char 
  2183 ;;  y               1   16[COMRAM] unsigned char 
  2184 ;;  c               1   17[COMRAM] unsigned char 
  2185 ;;  color           2   18[COMRAM] unsigned short 
  2186 ;;  bg              2   20[COMRAM] unsigned short 
  2187 ;;  size            1   22[COMRAM] unsigned char 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  x               1   30[COMRAM] unsigned char 
  2190 ;;  line            1   29[COMRAM] unsigned char 
  2191 ;;  i               1   32[COMRAM] char 
  2192 ;;  j               1   31[COMRAM] char 
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2202 ;;      Params:         7       0       0       0       0       0       0
  2203 ;;      Locals:         4       0       0       0       0       0       0
  2204 ;;      Temps:          6       0       0       0       0       0       0
  2205 ;;      Totals:        17       0       0       0       0       0       0
  2206 ;;Total ram usage:       17 bytes
  2207 ;; Hardware stack levels used: 1
  2208 ;; Hardware stack levels required when called: 4
  2209 ;; This function calls:
  2210 ;;		_tftstDrawPixel
  2211 ;;		_tftstFillRect
  2212 ;; This function is called by:
  2213 ;;		_tftstDrawText
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text6
  2218  007400                     __ptext6:
  2219                           	callstack 0
  2220  007400                     _tftstDrawChar:
  2221                           	callstack 24
  2222                           
  2223                           ;incstack = 0
  2224                           ;tftstDrawChar@x stored from wreg
  2225  007400  6E1F               	movwf	tftstDrawChar@x^0,c
  2226  007402                     
  2227                           ;./tftst.h: 125:     int8_t i, j;;./tftst.h: 126:     if ((x >= TFTST_WIDTH) || (y >= TF
      +                          TST_HEIGHT))
  2228  007402  0EA0               	movlw	160
  2229  007404  601F               	cpfslt	tftstDrawChar@x^0,c
  2230  007406  EF07  F03A         	goto	u1281
  2231  00740A  EF09  F03A         	goto	u1280
  2232  00740E                     u1281:
  2233  00740E  EFFE  F03A         	goto	l255
  2234  007412                     u1280:
  2235  007412  0E7F               	movlw	127
  2236  007414  6411               	cpfsgt	tftstDrawChar@y^0,c
  2237  007416  EF0F  F03A         	goto	u1291
  2238  00741A  EF11  F03A         	goto	u1290
  2239  00741E                     u1291:
  2240  00741E  EF13  F03A         	goto	l2284
  2241  007422                     u1290:
  2242  007422  EFFE  F03A         	goto	l255
  2243  007426                     l2284:
  2244                           
  2245                           ;./tftst.h: 128:     if (size < 1) size = 1;
  2246  007426  5017               	movf	tftstDrawChar@size^0,w,c
  2247  007428  A4D8               	btfss	status,2,c
  2248  00742A  EF19  F03A         	goto	u1301
  2249  00742E  EF1B  F03A         	goto	u1300
  2250  007432                     u1301:
  2251  007432  EF1D  F03A         	goto	l2288
  2252  007436                     u1300:
  2253  007436  0E01               	movlw	1
  2254  007438  6E17               	movwf	tftstDrawChar@size^0,c
  2255  00743A                     l2288:
  2256                           
  2257                           ;./tftst.h: 129:     if ((c < ' ') || (c > '~'))
  2258  00743A  0E1F               	movlw	31
  2259  00743C  6412               	cpfsgt	tftstDrawChar@c^0,c
  2260  00743E  EF23  F03A         	goto	u1311
  2261  007442  EF25  F03A         	goto	u1310
  2262  007446                     u1311:
  2263  007446  EF2D  F03A         	goto	l2292
  2264  00744A                     u1310:
  2265  00744A  0E7E               	movlw	126
  2266  00744C  6412               	cpfsgt	tftstDrawChar@c^0,c
  2267  00744E  EF2B  F03A         	goto	u1321
  2268  007452  EF2D  F03A         	goto	u1320
  2269  007456                     u1321:
  2270  007456  EF2F  F03A         	goto	l257
  2271  00745A                     u1320:
  2272  00745A                     l2292:
  2273                           
  2274                           ;./tftst.h: 130:         c = '?';
  2275  00745A  0E3F               	movlw	63
  2276  00745C  6E12               	movwf	tftstDrawChar@c^0,c
  2277  00745E                     l257:
  2278                           
  2279                           ;./tftst.h: 131:     for (i = 0; i < 5; i++) {
  2280  00745E  0E00               	movlw	0
  2281  007460  6E21               	movwf	tftstDrawChar@i^0,c
  2282  007462                     l2298:
  2283                           
  2284                           ;./tftst.h: 132:         uint8_t line;;./tftst.h: 133:         if (c < 'S')
  2285  007462  0E53               	movlw	83
  2286  007464  6012               	cpfslt	tftstDrawChar@c^0,c
  2287  007466  EF37  F03A         	goto	u1331
  2288  00746A  EF39  F03A         	goto	u1330
  2289  00746E                     u1331:
  2290  00746E  EF5D  F03A         	goto	l2302
  2291  007472                     u1330:
  2292  007472                     
  2293                           ;./tftst.h: 134:             line = Font[(c - 32)*5 + i];
  2294  007472  0E60               	movlw	96
  2295  007474  6E18               	movwf	??_tftstDrawChar^0,c
  2296  007476  0EFF               	movlw	255
  2297  007478  6E19               	movwf	(??_tftstDrawChar+1)^0,c
  2298  00747A  C021  F01A         	movff	tftstDrawChar@i,??_tftstDrawChar+2
  2299  00747E  6A1B               	clrf	(??_tftstDrawChar+3)^0,c
  2300  007480  BE1A               	btfsc	(??_tftstDrawChar+2)^0,7,c
  2301  007482  061B               	decf	(??_tftstDrawChar+3)^0,f,c
  2302  007484  5012               	movf	tftstDrawChar@c^0,w,c
  2303  007486  0D05               	mullw	5
  2304  007488  0E49               	movlw	low _Font
  2305  00748A  6E1C               	movwf	(??_tftstDrawChar+4)^0,c
  2306  00748C  0E7B               	movlw	high _Font
  2307  00748E  6E1D               	movwf	(??_tftstDrawChar+5)^0,c
  2308  007490  50F3               	movf	243,w,c
  2309  007492  261C               	addwf	(??_tftstDrawChar+4)^0,f,c
  2310  007494  50F4               	movf	244,w,c
  2311  007496  221D               	addwfc	(??_tftstDrawChar+5)^0,f,c
  2312  007498  501A               	movf	(??_tftstDrawChar+2)^0,w,c
  2313  00749A  261C               	addwf	(??_tftstDrawChar+4)^0,f,c
  2314  00749C  501B               	movf	(??_tftstDrawChar+3)^0,w,c
  2315  00749E  221D               	addwfc	(??_tftstDrawChar+5)^0,f,c
  2316  0074A0  5018               	movf	??_tftstDrawChar^0,w,c
  2317  0074A2  261C               	addwf	(??_tftstDrawChar+4)^0,f,c
  2318  0074A4  5019               	movf	(??_tftstDrawChar+1)^0,w,c
  2319  0074A6  221D               	addwfc	(??_tftstDrawChar+5)^0,f,c
  2320  0074A8  C01C  FFF6         	movff	??_tftstDrawChar+4,tblptrl
  2321  0074AC  C01D  FFF7         	movff	??_tftstDrawChar+5,tblptrh
  2322  0074B0                     	if	0	;tblptru may be non-zero
  2323  0074B0                     	endif
  2324  0074B0                     	if	0	;tblptru may be non-zero
  2325  0074B0                     	endif
  2326  0074B0  0008               	tblrd		*
  2327  0074B2  CFF5 F01E          	movff	tablat,tftstDrawChar@line
  2328  0074B6  EF7F  F03A         	goto	l2304
  2329  0074BA                     l2302:
  2330                           
  2331                           ;./tftst.h: 136:             line = Font2[(c - 'S')*5 + i];
  2332  0074BA  0E61               	movlw	97
  2333  0074BC  6E18               	movwf	??_tftstDrawChar^0,c
  2334  0074BE  0EFE               	movlw	254
  2335  0074C0  6E19               	movwf	(??_tftstDrawChar+1)^0,c
  2336  0074C2  C021  F01A         	movff	tftstDrawChar@i,??_tftstDrawChar+2
  2337  0074C6  6A1B               	clrf	(??_tftstDrawChar+3)^0,c
  2338  0074C8  BE1A               	btfsc	(??_tftstDrawChar+2)^0,7,c
  2339  0074CA  061B               	decf	(??_tftstDrawChar+3)^0,f,c
  2340  0074CC  5012               	movf	tftstDrawChar@c^0,w,c
  2341  0074CE  0D05               	mullw	5
  2342  0074D0  0E48               	movlw	low _Font2
  2343  0074D2  6E1C               	movwf	(??_tftstDrawChar+4)^0,c
  2344  0074D4  0E7C               	movlw	high _Font2
  2345  0074D6  6E1D               	movwf	(??_tftstDrawChar+5)^0,c
  2346  0074D8  50F3               	movf	243,w,c
  2347  0074DA  261C               	addwf	(??_tftstDrawChar+4)^0,f,c
  2348  0074DC  50F4               	movf	244,w,c
  2349  0074DE  221D               	addwfc	(??_tftstDrawChar+5)^0,f,c
  2350  0074E0  501A               	movf	(??_tftstDrawChar+2)^0,w,c
  2351  0074E2  261C               	addwf	(??_tftstDrawChar+4)^0,f,c
  2352  0074E4  501B               	movf	(??_tftstDrawChar+3)^0,w,c
  2353  0074E6  221D               	addwfc	(??_tftstDrawChar+5)^0,f,c
  2354  0074E8  5018               	movf	??_tftstDrawChar^0,w,c
  2355  0074EA  261C               	addwf	(??_tftstDrawChar+4)^0,f,c
  2356  0074EC  5019               	movf	(??_tftstDrawChar+1)^0,w,c
  2357  0074EE  221D               	addwfc	(??_tftstDrawChar+5)^0,f,c
  2358  0074F0  C01C  FFF6         	movff	??_tftstDrawChar+4,tblptrl
  2359  0074F4  C01D  FFF7         	movff	??_tftstDrawChar+5,tblptrh
  2360  0074F8                     	if	0	;tblptru may be non-zero
  2361  0074F8                     	endif
  2362  0074F8                     	if	0	;tblptru may be non-zero
  2363  0074F8                     	endif
  2364  0074F8  0008               	tblrd		*
  2365  0074FA  CFF5 F01E          	movff	tablat,tftstDrawChar@line
  2366  0074FE                     l2304:
  2367                           
  2368                           ;./tftst.h: 137:         for (j = 0; j < 7; j++, line >>= 1) {
  2369  0074FE  0E00               	movlw	0
  2370  007500  6E20               	movwf	tftstDrawChar@j^0,c
  2371  007502                     l264:
  2372                           
  2373                           ;./tftst.h: 138:             if (line & 0x01) {
  2374  007502  A01E               	btfss	tftstDrawChar@line^0,0,c
  2375  007504  EF86  F03A         	goto	u1341
  2376  007508  EF88  F03A         	goto	u1340
  2377  00750C                     u1341:
  2378  00750C  EFB2  F03A         	goto	l2316
  2379  007510                     u1340:
  2380  007510                     
  2381                           ;./tftst.h: 139:                 if (size == 1) tftstDrawPixel(x + i, y + j, color);
  2382  007510  0417               	decf	tftstDrawChar@size^0,w,c
  2383  007512  A4D8               	btfss	status,2,c
  2384  007514  EF8E  F03A         	goto	u1351
  2385  007518  EF90  F03A         	goto	u1350
  2386  00751C                     u1351:
  2387  00751C  EF9D  F03A         	goto	l2314
  2388  007520                     u1350:
  2389  007520  5020               	movf	tftstDrawChar@j^0,w,c
  2390  007522  2411               	addwf	tftstDrawChar@y^0,w,c
  2391  007524  6E07               	movwf	tftstDrawPixel@y^0,c
  2392  007526  C013  F008         	movff	tftstDrawChar@color,tftstDrawPixel@color
  2393  00752A  C014  F009         	movff	tftstDrawChar@color+1,tftstDrawPixel@color+1
  2394  00752E  5021               	movf	tftstDrawChar@i^0,w,c
  2395  007530  241F               	addwf	tftstDrawChar@x^0,w,c
  2396  007532  ECDB  F033         	call	_tftstDrawPixel
  2397  007536  EFE6  F03A         	goto	l2324
  2398  00753A                     l2314:
  2399  00753A  5020               	movf	tftstDrawChar@j^0,w,c
  2400  00753C  0217               	mulwf	tftstDrawChar@size^0,c
  2401  00753E  50F3               	movf	243,w,c
  2402  007540  2411               	addwf	tftstDrawChar@y^0,w,c
  2403  007542  6E07               	movwf	tftstFillRect@y^0,c
  2404  007544  C017  F008         	movff	tftstDrawChar@size,tftstFillRect@w
  2405  007548  C017  F009         	movff	tftstDrawChar@size,tftstFillRect@h
  2406  00754C  C013  F00A         	movff	tftstDrawChar@color,tftstFillRect@color
  2407  007550  C014  F00B         	movff	tftstDrawChar@color+1,tftstFillRect@color+1
  2408  007554  5021               	movf	tftstDrawChar@i^0,w,c
  2409  007556  0217               	mulwf	tftstDrawChar@size^0,c
  2410  007558  50F3               	movf	243,w,c
  2411  00755A  241F               	addwf	tftstDrawChar@x^0,w,c
  2412  00755C  EC2D  F035         	call	_tftstFillRect
  2413  007560  EFE6  F03A         	goto	l2324
  2414  007564                     l2316:
  2415  007564  5013               	movf	tftstDrawChar@color^0,w,c
  2416  007566  1815               	xorwf	tftstDrawChar@bg^0,w,c
  2417  007568  E109               	bnz	u1360
  2418  00756A  5014               	movf	(tftstDrawChar@color+1)^0,w,c
  2419  00756C  1816               	xorwf	(tftstDrawChar@bg+1)^0,w,c
  2420  00756E  B4D8               	btfsc	status,2,c
  2421  007570  EFBC  F03A         	goto	u1361
  2422  007574  EFBE  F03A         	goto	u1360
  2423  007578                     u1361:
  2424  007578  EFE6  F03A         	goto	l2324
  2425  00757C                     u1360:
  2426  00757C                     
  2427                           ;./tftst.h: 142:                 if (size == 1) tftstDrawPixel(x + i, y + j, bg);
  2428  00757C  0417               	decf	tftstDrawChar@size^0,w,c
  2429  00757E  A4D8               	btfss	status,2,c
  2430  007580  EFC4  F03A         	goto	u1371
  2431  007584  EFC6  F03A         	goto	u1370
  2432  007588                     u1371:
  2433  007588  EFD3  F03A         	goto	l2322
  2434  00758C                     u1370:
  2435  00758C  5020               	movf	tftstDrawChar@j^0,w,c
  2436  00758E  2411               	addwf	tftstDrawChar@y^0,w,c
  2437  007590  6E07               	movwf	tftstDrawPixel@y^0,c
  2438  007592  C015  F008         	movff	tftstDrawChar@bg,tftstDrawPixel@color
  2439  007596  C016  F009         	movff	tftstDrawChar@bg+1,tftstDrawPixel@color+1
  2440  00759A  5021               	movf	tftstDrawChar@i^0,w,c
  2441  00759C  241F               	addwf	tftstDrawChar@x^0,w,c
  2442  00759E  ECDB  F033         	call	_tftstDrawPixel
  2443  0075A2  EFE6  F03A         	goto	l2324
  2444  0075A6                     l2322:
  2445  0075A6  5020               	movf	tftstDrawChar@j^0,w,c
  2446  0075A8  0217               	mulwf	tftstDrawChar@size^0,c
  2447  0075AA  50F3               	movf	243,w,c
  2448  0075AC  2411               	addwf	tftstDrawChar@y^0,w,c
  2449  0075AE  6E07               	movwf	tftstFillRect@y^0,c
  2450  0075B0  C017  F008         	movff	tftstDrawChar@size,tftstFillRect@w
  2451  0075B4  C017  F009         	movff	tftstDrawChar@size,tftstFillRect@h
  2452  0075B8  C015  F00A         	movff	tftstDrawChar@bg,tftstFillRect@color
  2453  0075BC  C016  F00B         	movff	tftstDrawChar@bg+1,tftstFillRect@color+1
  2454  0075C0  5021               	movf	tftstDrawChar@i^0,w,c
  2455  0075C2  0217               	mulwf	tftstDrawChar@size^0,c
  2456  0075C4  50F3               	movf	243,w,c
  2457  0075C6  241F               	addwf	tftstDrawChar@x^0,w,c
  2458  0075C8  EC2D  F035         	call	_tftstFillRect
  2459  0075CC                     l2324:
  2460                           
  2461                           ;./tftst.h: 145:         }
  2462  0075CC  2A20               	incf	tftstDrawChar@j^0,f,c
  2463  0075CE  90D8               	bcf	status,0,c
  2464  0075D0  321E               	rrcf	tftstDrawChar@line^0,f,c
  2465  0075D2  5020               	movf	tftstDrawChar@j^0,w,c
  2466  0075D4  0A80               	xorlw	128
  2467  0075D6  0F79               	addlw	-135
  2468  0075D8  A0D8               	btfss	status,0,c
  2469  0075DA  EFF1  F03A         	goto	u1381
  2470  0075DE  EFF3  F03A         	goto	u1380
  2471  0075E2                     u1381:
  2472  0075E2  EF81  F03A         	goto	l264
  2473  0075E6                     u1380:
  2474  0075E6                     
  2475                           ;./tftst.h: 146:     }
  2476  0075E6  2A21               	incf	tftstDrawChar@i^0,f,c
  2477  0075E8  5021               	movf	tftstDrawChar@i^0,w,c
  2478  0075EA  0A80               	xorlw	128
  2479  0075EC  0F7B               	addlw	-133
  2480  0075EE  A0D8               	btfss	status,0,c
  2481  0075F0  EFFC  F03A         	goto	u1391
  2482  0075F4  EFFE  F03A         	goto	u1390
  2483  0075F8                     u1391:
  2484  0075F8  EF31  F03A         	goto	l2298
  2485  0075FC                     u1390:
  2486  0075FC                     l255:
  2487  0075FC  0012               	return		;funcret
  2488  0075FE                     __end_of_tftstDrawChar:
  2489                           	callstack 0
  2490                           
  2491 ;; *************** function _tftstFillRect *****************
  2492 ;; Defined at:
  2493 ;;		line 108 in file "./tftst.h"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  x               1    wreg     unsigned char 
  2496 ;;  y               1    6[COMRAM] unsigned char 
  2497 ;;  w               1    7[COMRAM] unsigned char 
  2498 ;;  h               1    8[COMRAM] unsigned char 
  2499 ;;  color           2    9[COMRAM] unsigned short 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  x               1   15[COMRAM] unsigned char 
  2502 ;;  j               1   14[COMRAM] unsigned char 
  2503 ;;  i               1   13[COMRAM] unsigned char 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		wreg, status,2, status,0, cstack
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2513 ;;      Params:         5       0       0       0       0       0       0
  2514 ;;      Locals:         3       0       0       0       0       0       0
  2515 ;;      Temps:          2       0       0       0       0       0       0
  2516 ;;      Totals:        10       0       0       0       0       0       0
  2517 ;;Total ram usage:       10 bytes
  2518 ;; Hardware stack levels used: 1
  2519 ;; Hardware stack levels required when called: 3
  2520 ;; This function calls:
  2521 ;;		_tftstSetWindow
  2522 ;;		_tftstWriteColor
  2523 ;; This function is called by:
  2524 ;;		_tftstDrawChar
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text7
  2529  006A5A                     __ptext7:
  2530                           	callstack 0
  2531  006A5A                     _tftstFillRect:
  2532                           	callstack 24
  2533                           
  2534                           ;incstack = 0
  2535                           ;tftstFillRect@x stored from wreg
  2536  006A5A  6E10               	movwf	tftstFillRect@x^0,c
  2537  006A5C                     
  2538                           ;./tftst.h: 109:     tftstSetWindow(x, x + w - 1, y, y + h - 1);
  2539  006A5C  5010               	movf	tftstFillRect@x^0,w,c
  2540  006A5E  2408               	addwf	tftstFillRect@w^0,w,c
  2541  006A60  6E0C               	movwf	??_tftstFillRect^0,c
  2542  006A62  040C               	decf	??_tftstFillRect^0,w,c
  2543  006A64  6E03               	movwf	tftstSetWindow@xEnd^0,c
  2544  006A66  C007  F004         	movff	tftstFillRect@y,tftstSetWindow@yStart
  2545  006A6A  5007               	movf	tftstFillRect@y^0,w,c
  2546  006A6C  2409               	addwf	tftstFillRect@h^0,w,c
  2547  006A6E  6E0D               	movwf	(??_tftstFillRect+1)^0,c
  2548  006A70  040D               	decf	(??_tftstFillRect+1)^0,w,c
  2549  006A72  6E05               	movwf	tftstSetWindow@yEnd^0,c
  2550  006A74  5010               	movf	tftstFillRect@x^0,w,c
  2551  006A76  EC66  F034         	call	_tftstSetWindow
  2552  006A7A                     
  2553                           ;./tftst.h: 110:     for(uint8_t i = 0; i < w ; i++){
  2554  006A7A  0E00               	movlw	0
  2555  006A7C  6E0E               	movwf	tftstFillRect@i^0,c
  2556  006A7E  EF56  F035         	goto	l2236
  2557  006A82                     l2226:
  2558                           
  2559                           ;./tftst.h: 111:         for(uint8_t j = 0; j < h ; j++){
  2560  006A82  0E00               	movlw	0
  2561  006A84  6E0F               	movwf	tftstFillRect@j^0,c
  2562  006A86  EF4C  F035         	goto	l2232
  2563  006A8A                     l2228:
  2564                           
  2565                           ;./tftst.h: 112:             tftstWriteColor(color);
  2566  006A8A  C00A  F003         	movff	tftstFillRect@color,tftstWriteColor@color
  2567  006A8E  C00B  F004         	movff	tftstFillRect@color+1,tftstWriteColor@color+1
  2568  006A92  EC93  F033         	call	_tftstWriteColor	;wreg free
  2569  006A96                     
  2570                           ;./tftst.h: 113:         }
  2571  006A96  2A0F               	incf	tftstFillRect@j^0,f,c
  2572  006A98                     l2232:
  2573  006A98  5009               	movf	tftstFillRect@h^0,w,c
  2574  006A9A  5C0F               	subwf	tftstFillRect@j^0,w,c
  2575  006A9C  A0D8               	btfss	status,0,c
  2576  006A9E  EF53  F035         	goto	u1221
  2577  006AA2  EF55  F035         	goto	u1220
  2578  006AA6                     u1221:
  2579  006AA6  EF45  F035         	goto	l2228
  2580  006AAA                     u1220:
  2581  006AAA                     
  2582                           ;./tftst.h: 114:     }
  2583  006AAA  2A0E               	incf	tftstFillRect@i^0,f,c
  2584  006AAC                     l2236:
  2585  006AAC  5008               	movf	tftstFillRect@w^0,w,c
  2586  006AAE  5C0E               	subwf	tftstFillRect@i^0,w,c
  2587  006AB0  A0D8               	btfss	status,0,c
  2588  006AB2  EF5D  F035         	goto	u1231
  2589  006AB6  EF5F  F035         	goto	u1230
  2590  006ABA                     u1231:
  2591  006ABA  EF41  F035         	goto	l2226
  2592  006ABE                     u1230:
  2593  006ABE  0012               	return		;funcret
  2594  006AC0                     __end_of_tftstFillRect:
  2595                           	callstack 0
  2596                           
  2597 ;; *************** function _tftstDrawPixel *****************
  2598 ;; Defined at:
  2599 ;;		line 87 in file "./tftst.h"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  x               1    wreg     unsigned char 
  2602 ;;  y               1    6[COMRAM] unsigned char 
  2603 ;;  color           2    7[COMRAM] unsigned short 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  x               1    9[COMRAM] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2615 ;;      Params:         3       0       0       0       0       0       0
  2616 ;;      Locals:         1       0       0       0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0
  2618 ;;      Totals:         4       0       0       0       0       0       0
  2619 ;;Total ram usage:        4 bytes
  2620 ;; Hardware stack levels used: 1
  2621 ;; Hardware stack levels required when called: 3
  2622 ;; This function calls:
  2623 ;;		_tftstSetWindow
  2624 ;;		_tftstWriteColor
  2625 ;; This function is called by:
  2626 ;;		_tftstDrawChar
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text8
  2631  0067B6                     __ptext8:
  2632                           	callstack 0
  2633  0067B6                     _tftstDrawPixel:
  2634                           	callstack 24
  2635                           
  2636                           ;incstack = 0
  2637                           ;tftstDrawPixel@x stored from wreg
  2638  0067B6  6E0A               	movwf	tftstDrawPixel@x^0,c
  2639  0067B8                     
  2640                           ;./tftst.h: 88:     tftstSetWindow(x, x + 1, y, y + 1);
  2641  0067B8  280A               	incf	tftstDrawPixel@x^0,w,c
  2642  0067BA  6E03               	movwf	tftstSetWindow@xEnd^0,c
  2643  0067BC  C007  F004         	movff	tftstDrawPixel@y,tftstSetWindow@yStart
  2644  0067C0  2807               	incf	tftstDrawPixel@y^0,w,c
  2645  0067C2  6E05               	movwf	tftstSetWindow@yEnd^0,c
  2646  0067C4  500A               	movf	tftstDrawPixel@x^0,w,c
  2647  0067C6  EC66  F034         	call	_tftstSetWindow
  2648  0067CA                     
  2649                           ;./tftst.h: 89:     tftstWriteColor(color);
  2650  0067CA  C008  F003         	movff	tftstDrawPixel@color,tftstWriteColor@color
  2651  0067CE  C009  F004         	movff	tftstDrawPixel@color+1,tftstWriteColor@color+1
  2652  0067D2  EC93  F033         	call	_tftstWriteColor	;wreg free
  2653  0067D6  0012               	return		;funcret
  2654  0067D8                     __end_of_tftstDrawPixel:
  2655                           	callstack 0
  2656                           
  2657 ;; *************** function _tftstDrawHorizontalLine *****************
  2658 ;; Defined at:
  2659 ;;		line 92 in file "./tftst.h"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;  x               1    wreg     unsigned char 
  2662 ;;  y               1    6[COMRAM] unsigned char 
  2663 ;;  width           1    7[COMRAM] unsigned char 
  2664 ;;  color           2    8[COMRAM] unsigned short 
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;  x               1   11[COMRAM] unsigned char 
  2667 ;;  w               1   10[COMRAM] unsigned char 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  1    wreg      void 
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2677 ;;      Params:         4       0       0       0       0       0       0
  2678 ;;      Locals:         2       0       0       0       0       0       0
  2679 ;;      Temps:          0       0       0       0       0       0       0
  2680 ;;      Totals:         6       0       0       0       0       0       0
  2681 ;;Total ram usage:        6 bytes
  2682 ;; Hardware stack levels used: 1
  2683 ;; Hardware stack levels required when called: 3
  2684 ;; This function calls:
  2685 ;;		_tftstSetWindow
  2686 ;;		_tftstWriteColor
  2687 ;; This function is called by:
  2688 ;;		_demo
  2689 ;;		_tftstDrawRect
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text9
  2694  00680A                     __ptext9:
  2695                           	callstack 0
  2696  00680A                     _tftstDrawHorizontalLine:
  2697                           	callstack 26
  2698                           
  2699                           ;incstack = 0
  2700                           ;tftstDrawHorizontalLine@x stored from wreg
  2701  00680A  6E0C               	movwf	tftstDrawHorizontalLine@x^0,c
  2702  00680C                     
  2703                           ;./tftst.h: 93:     tftstSetWindow(x, x + width, y, y);
  2704  00680C  500C               	movf	tftstDrawHorizontalLine@x^0,w,c
  2705  00680E  2408               	addwf	tftstDrawHorizontalLine@width^0,w,c
  2706  006810  6E03               	movwf	tftstSetWindow@xEnd^0,c
  2707  006812  C007  F004         	movff	tftstDrawHorizontalLine@y,tftstSetWindow@yStart
  2708  006816  C007  F005         	movff	tftstDrawHorizontalLine@y,tftstSetWindow@yEnd
  2709  00681A  500C               	movf	tftstDrawHorizontalLine@x^0,w,c
  2710  00681C  EC66  F034         	call	_tftstSetWindow
  2711  006820                     
  2712                           ;./tftst.h: 94:     uint8_t w = width;
  2713  006820  C008  F00B         	movff	tftstDrawHorizontalLine@width,tftstDrawHorizontalLine@w
  2714                           
  2715                           ;./tftst.h: 95:     while (w--) {
  2716  006824  EF1A  F034         	goto	l2382
  2717  006828                     l2380:
  2718                           
  2719                           ;./tftst.h: 96:         tftstWriteColor(color);
  2720  006828  C009  F003         	movff	tftstDrawHorizontalLine@color,tftstWriteColor@color
  2721  00682C  C00A  F004         	movff	tftstDrawHorizontalLine@color+1,tftstWriteColor@color+1
  2722  006830  EC93  F033         	call	_tftstWriteColor	;wreg free
  2723  006834                     l2382:
  2724                           
  2725                           ;./tftst.h: 95:     while (w--) {
  2726  006834  060B               	decf	tftstDrawHorizontalLine@w^0,f,c
  2727  006836  280B               	incf	tftstDrawHorizontalLine@w^0,w,c
  2728  006838  A4D8               	btfss	status,2,c
  2729  00683A  EF21  F034         	goto	u1431
  2730  00683E  EF23  F034         	goto	u1430
  2731  006842                     u1431:
  2732  006842  EF14  F034         	goto	l2380
  2733  006846                     u1430:
  2734  006846  0012               	return		;funcret
  2735  006848                     __end_of_tftstDrawHorizontalLine:
  2736                           	callstack 0
  2737                           
  2738 ;; *************** function _tftstWriteColor *****************
  2739 ;; Defined at:
  2740 ;;		line 74 in file "./tftst.h"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  color           2    2[COMRAM] unsigned short 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;		None
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2754 ;;      Params:         2       0       0       0       0       0       0
  2755 ;;      Locals:         0       0       0       0       0       0       0
  2756 ;;      Temps:          0       0       0       0       0       0       0
  2757 ;;      Totals:         2       0       0       0       0       0       0
  2758 ;;Total ram usage:        2 bytes
  2759 ;; Hardware stack levels used: 1
  2760 ;; Hardware stack levels required when called: 2
  2761 ;; This function calls:
  2762 ;;		_tftstWriteData
  2763 ;; This function is called by:
  2764 ;;		_tftstFillScreen
  2765 ;;		_tftstDrawPixel
  2766 ;;		_tftstDrawHorizontalLine
  2767 ;;		_tftstFillRect
  2768 ;;		_tftstDrawVerticalLine
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text10
  2773  006726                     __ptext10:
  2774                           	callstack 0
  2775  006726                     _tftstWriteColor:
  2776                           	callstack 26
  2777  006726                     
  2778                           ;./tftst.h: 75:     tftstWriteData(color >> 8);
  2779  006726  5004               	movf	(tftstWriteColor@color+1)^0,w,c
  2780  006728  EC81  F033         	call	_tftstWriteData
  2781                           
  2782                           ;./tftst.h: 76:     tftstWriteData(color & 0xFF);
  2783  00672C  5003               	movf	tftstWriteColor@color^0,w,c
  2784  00672E  EC81  F033         	call	_tftstWriteData
  2785  006732  0012               	return		;funcret
  2786  006734                     __end_of_tftstWriteColor:
  2787                           	callstack 0
  2788                           
  2789 ;; *************** function _tftstSetWindow *****************
  2790 ;; Defined at:
  2791 ;;		line 60 in file "./tftst.h"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  xStart          1    wreg     unsigned char 
  2794 ;;  xEnd            1    2[COMRAM] unsigned char 
  2795 ;;  yStart          1    3[COMRAM] unsigned char 
  2796 ;;  yEnd            1    4[COMRAM] unsigned char 
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;  xStart          1    5[COMRAM] unsigned char 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2808 ;;      Params:         3       0       0       0       0       0       0
  2809 ;;      Locals:         1       0       0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0
  2811 ;;      Totals:         4       0       0       0       0       0       0
  2812 ;;Total ram usage:        4 bytes
  2813 ;; Hardware stack levels used: 1
  2814 ;; Hardware stack levels required when called: 2
  2815 ;; This function calls:
  2816 ;;		_tftstWriteCommand
  2817 ;;		_tftstWriteData
  2818 ;; This function is called by:
  2819 ;;		_tftstFillScreen
  2820 ;;		_tftstDrawPixel
  2821 ;;		_tftstDrawHorizontalLine
  2822 ;;		_tftstFillRect
  2823 ;;		_tftstDrawVerticalLine
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text11
  2828  0068CC                     __ptext11:
  2829                           	callstack 0
  2830  0068CC                     _tftstSetWindow:
  2831                           	callstack 26
  2832                           
  2833                           ;incstack = 0
  2834                           ;tftstSetWindow@xStart stored from wreg
  2835  0068CC  6E06               	movwf	tftstSetWindow@xStart^0,c
  2836  0068CE                     
  2837                           ;./tftst.h: 61:     tftstWriteCommand(0x2A);
  2838  0068CE  0E2A               	movlw	42
  2839  0068D0  ECAC  F033         	call	_tftstWriteCommand
  2840                           
  2841                           ;./tftst.h: 62:     tftstWriteData(0);
  2842  0068D4  0E00               	movlw	0
  2843  0068D6  EC81  F033         	call	_tftstWriteData
  2844                           
  2845                           ;./tftst.h: 63:     tftstWriteData(xStart);
  2846  0068DA  5006               	movf	tftstSetWindow@xStart^0,w,c
  2847  0068DC  EC81  F033         	call	_tftstWriteData
  2848                           
  2849                           ;./tftst.h: 64:     tftstWriteData(0);
  2850  0068E0  0E00               	movlw	0
  2851  0068E2  EC81  F033         	call	_tftstWriteData
  2852                           
  2853                           ;./tftst.h: 65:     tftstWriteData(xEnd);
  2854  0068E6  5003               	movf	tftstSetWindow@xEnd^0,w,c
  2855  0068E8  EC81  F033         	call	_tftstWriteData
  2856                           
  2857                           ;./tftst.h: 66:     tftstWriteCommand(0x2B);
  2858  0068EC  0E2B               	movlw	43
  2859  0068EE  ECAC  F033         	call	_tftstWriteCommand
  2860                           
  2861                           ;./tftst.h: 67:     tftstWriteData(0);
  2862  0068F2  0E00               	movlw	0
  2863  0068F4  EC81  F033         	call	_tftstWriteData
  2864                           
  2865                           ;./tftst.h: 68:     tftstWriteData(yStart);
  2866  0068F8  5004               	movf	tftstSetWindow@yStart^0,w,c
  2867  0068FA  EC81  F033         	call	_tftstWriteData
  2868                           
  2869                           ;./tftst.h: 69:     tftstWriteData(0);
  2870  0068FE  0E00               	movlw	0
  2871  006900  EC81  F033         	call	_tftstWriteData
  2872                           
  2873                           ;./tftst.h: 70:     tftstWriteData(yEnd);
  2874  006904  5005               	movf	tftstSetWindow@yEnd^0,w,c
  2875  006906  EC81  F033         	call	_tftstWriteData
  2876                           
  2877                           ;./tftst.h: 71:     tftstWriteCommand(0x2C);
  2878  00690A  0E2C               	movlw	44
  2879  00690C  ECAC  F033         	call	_tftstWriteCommand
  2880  006910  0012               	return		;funcret
  2881  006912                     __end_of_tftstSetWindow:
  2882                           	callstack 0
  2883                           
  2884 ;; *************** function _tftstWriteData *****************
  2885 ;; Defined at:
  2886 ;;		line 35 in file "./tftst.h"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  data_           1    wreg     unsigned char 
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;  data_           1    1[COMRAM] unsigned char 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2900 ;;      Params:         0       0       0       0       0       0       0
  2901 ;;      Locals:         1       0       0       0       0       0       0
  2902 ;;      Temps:          0       0       0       0       0       0       0
  2903 ;;      Totals:         1       0       0       0       0       0       0
  2904 ;;Total ram usage:        1 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; Hardware stack levels required when called: 1
  2907 ;; This function calls:
  2908 ;;		_SPI_ExchangeByte
  2909 ;; This function is called by:
  2910 ;;		_tftstReadId
  2911 ;;		_tftstSetWindow
  2912 ;;		_tftstWriteColor
  2913 ;;		_tftstInit
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text12
  2918  006702                     __ptext12:
  2919                           	callstack 0
  2920  006702                     _tftstWriteData:
  2921                           	callstack 27
  2922                           
  2923                           ;incstack = 0
  2924                           ;tftstWriteData@data_ stored from wreg
  2925  006702  6E02               	movwf	tftstWriteData@data_^0,c
  2926  006704                     
  2927                           ;./tftst.h: 36:     SPI_ExchangeByte(data_);
  2928  006704  5002               	movf	tftstWriteData@data_^0,w,c
  2929  006706  ECC1  F033         	call	_SPI_ExchangeByte
  2930  00670A  0012               	return		;funcret
  2931  00670C                     __end_of_tftstWriteData:
  2932                           	callstack 0
  2933                           
  2934 ;; *************** function _tftstWriteCommand *****************
  2935 ;; Defined at:
  2936 ;;		line 26 in file "./tftst.h"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  cmd_            1    wreg     unsigned char 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  cmd_            1    1[COMRAM] unsigned char 
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2950 ;;      Params:         0       0       0       0       0       0       0
  2951 ;;      Locals:         1       0       0       0       0       0       0
  2952 ;;      Temps:          0       0       0       0       0       0       0
  2953 ;;      Totals:         1       0       0       0       0       0       0
  2954 ;;Total ram usage:        1 bytes
  2955 ;; Hardware stack levels used: 1
  2956 ;; Hardware stack levels required when called: 1
  2957 ;; This function calls:
  2958 ;;		_SPI_ExchangeByte
  2959 ;; This function is called by:
  2960 ;;		_tftstSetWindow
  2961 ;;		_tftstInit
  2962 ;;		_tftstSleep
  2963 ;;		_tftstWakeUp
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           	psect	text13
  2968  006758                     __ptext13:
  2969                           	callstack 0
  2970  006758                     _tftstWriteCommand:
  2971                           	callstack 27
  2972                           
  2973                           ;incstack = 0
  2974                           ;tftstWriteCommand@cmd_ stored from wreg
  2975  006758  6E02               	movwf	tftstWriteCommand@cmd_^0,c
  2976  00675A  948C               	bcf	140,2,c	;volatile
  2977  00675C  908C               	bcf	140,0,c	;volatile
  2978  00675E                     
  2979                           ;./tftst.h: 29:     SPI_ExchangeByte(cmd_);
  2980  00675E  5002               	movf	tftstWriteCommand@cmd_^0,w,c
  2981  006760  ECC1  F033         	call	_SPI_ExchangeByte
  2982  006764  808C               	bsf	140,0,c	;volatile
  2983  006766  848C               	bsf	140,2,c	;volatile
  2984  006768  908C               	bcf	140,0,c	;volatile
  2985  00676A  0012               	return		;funcret
  2986  00676C                     __end_of_tftstWriteCommand:
  2987                           	callstack 0
  2988                           
  2989 ;; *************** function _SPI_ExchangeByte *****************
  2990 ;; Defined at:
  2991 ;;		line 92 in file "mcc_generated_files/spi.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;  data            1    wreg     unsigned char 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  data            1    0[COMRAM] unsigned char 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      unsigned char 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3005 ;;      Params:         0       0       0       0       0       0       0
  3006 ;;      Locals:         1       0       0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0
  3008 ;;      Totals:         1       0       0       0       0       0       0
  3009 ;;Total ram usage:        1 bytes
  3010 ;; Hardware stack levels used: 1
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_tftstWriteCommand
  3015 ;;		_tftstWriteData
  3016 ;;		_tftstReadId
  3017 ;;		_SPI_WriteBlock
  3018 ;;		_SPI_ReadBlock
  3019 ;;		_write_command
  3020 ;;		_write_data
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text14
  3025  006782                     __ptext14:
  3026                           	callstack 0
  3027  006782                     _SPI_ExchangeByte:
  3028                           	callstack 27
  3029                           
  3030                           ;incstack = 0
  3031                           ;SPI_ExchangeByte@data stored from wreg
  3032  006782  6E01               	movwf	SPI_ExchangeByte@data^0,c
  3033  006784                     
  3034                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
  3035  006784  C001  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
  3036  006788                     l85:
  3037  006788  A69E               	btfss	158,3,c	;volatile
  3038  00678A  EFC9  F033         	goto	u851
  3039  00678E  EFCB  F033         	goto	u850
  3040  006792                     u851:
  3041  006792  EFC4  F033         	goto	l85
  3042  006796                     u850:
  3043  006796                     
  3044                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
  3045  006796  969E               	bcf	158,3,c	;volatile
  3046                           
  3047                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
  3048  006798  50C9               	movf	201,w,c	;volatile
  3049  00679A  0012               	return		;funcret
  3050  00679C                     __end_of_SPI_ExchangeByte:
  3051                           	callstack 0
  3052                           
  3053 ;; *************** function _sprintf *****************
  3054 ;; Defined at:
  3055 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_sprintf.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  s               2   87[COMRAM] PTR unsigned char 
  3058 ;;		 -> demo@idString(8), 
  3059 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  3060 ;;		 -> STR_2(6), 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;  f              11    2[BANK0 ] struct _IO_FILE
  3063 ;;  ap              2    0[BANK0 ] PTR void [1]
  3064 ;;		 -> ?_sprintf(2), 
  3065 ;;  ret             2    0        int 
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  2   87[COMRAM] int 
  3068 ;; Registers used:
  3069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3075 ;;      Params:         6       0       0       0       0       0       0
  3076 ;;      Locals:         0      13       0       0       0       0       0
  3077 ;;      Temps:          0       0       0       0       0       0       0
  3078 ;;      Totals:         6      13       0       0       0       0       0
  3079 ;;Total ram usage:       19 bytes
  3080 ;; Hardware stack levels used: 1
  3081 ;; Hardware stack levels required when called: 7
  3082 ;; This function calls:
  3083 ;;		_vfprintf
  3084 ;; This function is called by:
  3085 ;;		_demo
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           	psect	text15
  3090  0069A6                     __ptext15:
  3091                           	callstack 0
  3092  0069A6                     _sprintf:
  3093                           	callstack 22
  3094  0069A6  0E5C               	movlw	low (?_sprintf+4)
  3095  0069A8  0100               	movlb	0	; () banked
  3096  0069AA  6F88               	movwf	sprintf@ap& (0+255),b
  3097  0069AC  0E00               	movlw	high (?_sprintf+4)
  3098  0069AE  6F89               	movwf	(sprintf@ap+1)& (0+255),b
  3099  0069B0  C058  F08A         	movff	sprintf@s,sprintf@f
  3100  0069B4  C059  F08B         	movff	sprintf@s+1,sprintf@f+1
  3101  0069B8                     
  3102                           ; BSR set to: 0
  3103  0069B8  0E00               	movlw	0
  3104  0069BA  6F8E               	movwf	(sprintf@f+4)& (0+255),b
  3105  0069BC  0E00               	movlw	0
  3106  0069BE  6F8D               	movwf	(sprintf@f+3)& (0+255),b
  3107  0069C0                     
  3108                           ; BSR set to: 0
  3109  0069C0  0E00               	movlw	0
  3110  0069C2  6F94               	movwf	(sprintf@f+10)& (0+255),b
  3111  0069C4  0E00               	movlw	0
  3112  0069C6  6F93               	movwf	(sprintf@f+9)& (0+255),b
  3113  0069C8                     
  3114                           ; BSR set to: 0
  3115  0069C8  0E8A               	movlw	low sprintf@f
  3116  0069CA  6E50               	movwf	vfprintf@fp^0,c
  3117  0069CC  0E00               	movlw	high sprintf@f
  3118  0069CE  6E51               	movwf	(vfprintf@fp+1)^0,c
  3119  0069D0  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  3120  0069D4  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3121  0069D8  0E88               	movlw	low sprintf@ap
  3122  0069DA  6E54               	movwf	vfprintf@ap^0,c
  3123  0069DC  0E00               	movlw	high sprintf@ap
  3124  0069DE  6E55               	movwf	(vfprintf@ap+1)^0,c
  3125  0069E0  ECFC  F034         	call	_vfprintf	;wreg free
  3126  0069E4  0100               	movlb	0	; () banked
  3127  0069E6  518D               	movf	(sprintf@f+3)& (0+255),w,b
  3128  0069E8  2458               	addwf	sprintf@s^0,w,c
  3129  0069EA  6ED9               	movwf	fsr2l,c
  3130  0069EC  518E               	movf	(sprintf@f+4)& (0+255),w,b
  3131  0069EE  2059               	addwfc	(sprintf@s+1)^0,w,c
  3132  0069F0  6EDA               	movwf	fsr2h,c
  3133  0069F2  0E00               	movlw	0
  3134  0069F4  6EDF               	movwf	indf2,c
  3135  0069F6                     
  3136                           ; BSR set to: 0
  3137  0069F6  0012               	return		;funcret
  3138  0069F8                     __end_of_sprintf:
  3139                           	callstack 0
  3140                           
  3141 ;; *************** function _vfprintf *****************
  3142 ;; Defined at:
  3143 ;;		line 1390 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  3146 ;;		 -> sprintf@f(11), 
  3147 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  3148 ;;		 -> STR_2(6), 
  3149 ;;  ap              2   83[COMRAM] PTR PTR void 
  3150 ;;		 -> sprintf@ap(2), 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  3153 ;;		 -> STR_2(6), 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  2   79[COMRAM] int 
  3156 ;; Registers used:
  3157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3163 ;;      Params:         6       0       0       0       0       0       0
  3164 ;;      Locals:         2       0       0       0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0
  3166 ;;      Totals:         8       0       0       0       0       0       0
  3167 ;;Total ram usage:        8 bytes
  3168 ;; Hardware stack levels used: 1
  3169 ;; Hardware stack levels required when called: 6
  3170 ;; This function calls:
  3171 ;;		_vfpfcnvrt
  3172 ;; This function is called by:
  3173 ;;		_sprintf
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text16
  3178  0069F8                     __ptext16:
  3179                           	callstack 0
  3180  0069F8                     _vfprintf:
  3181                           	callstack 22
  3182  0069F8                     
  3183                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  3184  0069F8  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  3185  0069FC  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3186  006A00                     
  3187                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  3188  006A00  0E00               	movlw	0
  3189  006A02  0100               	movlb	0	; () banked
  3190  006A04  6F61               	movwf	(_nout+1)& (0+255),b
  3191  006A06  0E00               	movlw	0
  3192  006A08  6F60               	movwf	_nout& (0+255),b
  3193                           
  3194                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  3195  006A0A  EF1A  F035         	goto	l2340
  3196  006A0E                     l2338:
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  3200  006A0E  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  3201  006A12  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3202  006A16  0E56               	movlw	low vfprintf@cfmt
  3203  006A18  6E42               	movwf	vfpfcnvrt@fmt^0,c
  3204  006A1A  0E00               	movlw	high vfprintf@cfmt
  3205  006A1C  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3206  006A1E  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  3207  006A22  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3208  006A26  EC26  F039         	call	_vfpfcnvrt	;wreg free
  3209  006A2A  5040               	movf	?_vfpfcnvrt^0,w,c
  3210  006A2C  0100               	movlb	0	; () banked
  3211  006A2E  2760               	addwf	_nout& (0+255),f,b
  3212  006A30  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  3213  006A32  2361               	addwfc	(_nout+1)& (0+255),f,b
  3214  006A34                     l2340:
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  3218  006A34  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  3219  006A38  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3220  006A3C                     	if	0	;tblptru may be non-zero
  3221  006A3C                     	endif
  3222  006A3C                     	if	0	;tblptru may be non-zero
  3223  006A3C                     	endif
  3224  006A3C  0008               	tblrd		*
  3225  006A3E  50F5               	movf	tablat,w,c
  3226  006A40  0900               	iorlw	0
  3227  006A42  A4D8               	btfss	status,2,c
  3228  006A44  EF26  F035         	goto	u1401
  3229  006A48  EF28  F035         	goto	u1400
  3230  006A4C                     u1401:
  3231  006A4C  EF07  F035         	goto	l2338
  3232  006A50                     u1400:
  3233  006A50                     
  3234                           ; BSR set to: 0
  3235                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  3236  006A50  C060  F050         	movff	_nout,?_vfprintf
  3237  006A54  C061  F051         	movff	_nout+1,?_vfprintf+1
  3238  006A58                     
  3239                           ; BSR set to: 0
  3240  006A58  0012               	return		;funcret
  3241  006A5A                     __end_of_vfprintf:
  3242                           	callstack 0
  3243                           
  3244 ;; *************** function _vfpfcnvrt *****************
  3245 ;; Defined at:
  3246 ;;		line 692 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  3249 ;;		 -> sprintf@f(11), 
  3250 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  3251 ;;		 -> vfprintf@cfmt(2), 
  3252 ;;  ap              2   67[COMRAM] PTR PTR void 
  3253 ;;		 -> sprintf@ap(2), 
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;  ll              8   71[COMRAM] long long 
  3256 ;;  llu             8    0        unsigned long long 
  3257 ;;  f               4    0        unsigned long long 
  3258 ;;  vp              3    0        PTR void 
  3259 ;;  ct              3    0        unsigned char [3]
  3260 ;;  cp              3    0        PTR unsigned char 
  3261 ;;  i               2    0        int 
  3262 ;;  done            2    0        int 
  3263 ;;  c               1    0        unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  2   63[COMRAM] int 
  3266 ;; Registers used:
  3267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3273 ;;      Params:         6       0       0       0       0       0       0
  3274 ;;      Locals:         8       0       0       0       0       0       0
  3275 ;;      Temps:          2       0       0       0       0       0       0
  3276 ;;      Totals:        16       0       0       0       0       0       0
  3277 ;;Total ram usage:       16 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; Hardware stack levels required when called: 5
  3280 ;; This function calls:
  3281 ;;		_dtoa
  3282 ;;		_fputc
  3283 ;; This function is called by:
  3284 ;;		_vfprintf
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text17
  3289  00724C                     __ptext17:
  3290                           	callstack 0
  3291  00724C                     _vfpfcnvrt:
  3292                           	callstack 22
  3293  00724C                     
  3294                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  3295  00724C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3296  007250  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3297  007254  CFDE FFF6          	movff	postinc2,tblptrl
  3298  007258  CFDD FFF7          	movff	postdec2,tblptrh
  3299  00725C                     	if	0	;tblptru may be non-zero
  3300  00725C                     	endif
  3301  00725C                     	if	0	;tblptru may be non-zero
  3302  00725C                     	endif
  3303  00725C  0008               	tblrd		*
  3304  00725E  50F5               	movf	tablat,w,c
  3305  007260  0A25               	xorlw	37
  3306  007262  A4D8               	btfss	status,2,c
  3307  007264  EF36  F039         	goto	u1241
  3308  007268  EF38  F039         	goto	u1240
  3309  00726C                     u1241:
  3310  00726C  EFE4  F039         	goto	l2272
  3311  007270                     u1240:
  3312  007270                     
  3313                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  3314  007270  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3315  007274  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3316  007278  2ADE               	incf	postinc2,f,c
  3317  00727A  0E00               	movlw	0
  3318  00727C  22DD               	addwfc	postdec2,f,c
  3319  00727E                     
  3320                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  3321  00727E  0E00               	movlw	0
  3322  007280  0100               	movlb	0	; () banked
  3323  007282  6F63               	movwf	(_width+1)& (0+255),b
  3324  007284  0E00               	movlw	0
  3325  007286  6F62               	movwf	_width& (0+255),b
  3326  007288  C062  F066         	movff	_width,_flags
  3327  00728C  C063  F067         	movff	_width+1,_flags+1
  3328  007290                     
  3329                           ; BSR set to: 0
  3330                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  3331  007290  6964               	setf	_prec& (0+255),b
  3332  007292  6965               	setf	(_prec+1)& (0+255),b
  3333  007294                     
  3334                           ; BSR set to: 0
  3335                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 847:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  3336  007294  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3337  007298  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3338  00729C  CFDE FFF6          	movff	postinc2,tblptrl
  3339  0072A0  CFDD FFF7          	movff	postdec2,tblptrh
  3340  0072A4                     	if	0	;tblptru may be non-zero
  3341  0072A4                     	endif
  3342  0072A4                     	if	0	;tblptru may be non-zero
  3343  0072A4                     	endif
  3344  0072A4  0008               	tblrd		*
  3345  0072A6  50F5               	movf	tablat,w,c
  3346  0072A8  0A64               	xorlw	100
  3347  0072AA  B4D8               	btfsc	status,2,c
  3348  0072AC  EF5A  F039         	goto	u1251
  3349  0072B0  EF5C  F039         	goto	u1250
  3350  0072B4                     u1251:
  3351  0072B4  EF6E  F039         	goto	l2250
  3352  0072B8                     u1250:
  3353  0072B8                     
  3354                           ; BSR set to: 0
  3355  0072B8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3356  0072BC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3357  0072C0  CFDE FFF6          	movff	postinc2,tblptrl
  3358  0072C4  CFDD FFF7          	movff	postdec2,tblptrh
  3359  0072C8                     	if	0	;tblptru may be non-zero
  3360  0072C8                     	endif
  3361  0072C8                     	if	0	;tblptru may be non-zero
  3362  0072C8                     	endif
  3363  0072C8  0008               	tblrd		*
  3364  0072CA  50F5               	movf	tablat,w,c
  3365  0072CC  0A69               	xorlw	105
  3366  0072CE  A4D8               	btfss	status,2,c
  3367  0072D0  EF6C  F039         	goto	u1261
  3368  0072D4  EF6E  F039         	goto	u1260
  3369  0072D8                     u1261:
  3370  0072D8  EFAE  F039         	goto	l2256
  3371  0072DC                     u1260:
  3372  0072DC                     l2250:
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 849:             ++*fmt;
  3376  0072DC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3377  0072E0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3378  0072E4  2ADE               	incf	postinc2,f,c
  3379  0072E6  0E00               	movlw	0
  3380  0072E8  22DD               	addwfc	postdec2,f,c
  3381                           
  3382                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 850:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  3383  0072EA  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3384  0072EE  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3385  0072F2  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3386  0072F6  0E02               	movlw	2
  3387  0072F8  26DE               	addwf	postinc2,f,c
  3388  0072FA  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3389  0072FE  0E00               	movlw	0
  3390  007300  22DD               	addwfc	postdec2,f,c
  3391  007302  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3392  007306  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3393  00730A  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  3394  00730E  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  3395  007312  0E00               	movlw	0
  3396  007314  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3397  007316  0EFF               	movlw	-1
  3398  007318  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  3399  00731A  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  3400  00731C  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  3401  00731E  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  3402  007320  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  3403  007322  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  3404  007324                     
  3405                           ; BSR set to: 0
  3406                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 852:             return dtoa(
      +                          fp, ll);
  3407  007324  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3408  007328  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3409  00732C  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3410  007330  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3411  007334  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3412  007338  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3413  00733C  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3414  007340  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3415  007344  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3416  007348  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3417  00734C  EC33  F03C         	call	_dtoa	;wreg free
  3418  007350  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  3419  007354  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3420  007358  EFFF  F039         	goto	l1099
  3421  00735C                     l2256:
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  3425  00735C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3426  007360  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3427  007364  CFDE FFF6          	movff	postinc2,tblptrl
  3428  007368  CFDD FFF7          	movff	postdec2,tblptrh
  3429  00736C                     	if	0	;tblptru may be non-zero
  3430  00736C                     	endif
  3431  00736C                     	if	0	;tblptru may be non-zero
  3432  00736C                     	endif
  3433  00736C  0008               	tblrd		*
  3434  00736E  50F5               	movf	tablat,w,c
  3435  007370  0A25               	xorlw	37
  3436  007372  A4D8               	btfss	status,2,c
  3437  007374  EFBE  F039         	goto	u1271
  3438  007378  EFC0  F039         	goto	u1270
  3439  00737C                     u1271:
  3440  00737C  EFD7  F039         	goto	l2266
  3441  007380                     u1270:
  3442  007380                     
  3443                           ; BSR set to: 0
  3444                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  3445  007380  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3446  007384  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3447  007388  2ADE               	incf	postinc2,f,c
  3448  00738A  0E00               	movlw	0
  3449  00738C  22DD               	addwfc	postdec2,f,c
  3450  00738E                     
  3451                           ; BSR set to: 0
  3452                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  3453  00738E  0E00               	movlw	0
  3454  007390  6E02               	movwf	(fputc@c+1)^0,c
  3455  007392  0E25               	movlw	37
  3456  007394  6E01               	movwf	fputc@c^0,c
  3457  007396  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3458  00739A  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3459  00739E  EC0F  F036         	call	_fputc	;wreg free
  3460  0073A2                     l2262:
  3461                           
  3462                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  3463  0073A2  0E00               	movlw	0
  3464  0073A4  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3465  0073A6  0E01               	movlw	1
  3466  0073A8  6E40               	movwf	?_vfpfcnvrt^0,c
  3467  0073AA  EFFF  F039         	goto	l1099
  3468  0073AE                     l2266:
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  3472  0073AE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3473  0073B2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3474  0073B6  2ADE               	incf	postinc2,f,c
  3475  0073B8  0E00               	movlw	0
  3476  0073BA  22DD               	addwfc	postdec2,f,c
  3477  0073BC                     
  3478                           ; BSR set to: 0
  3479                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  3480  0073BC  0E00               	movlw	0
  3481  0073BE  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3482  0073C0  0E00               	movlw	0
  3483  0073C2  6E40               	movwf	?_vfpfcnvrt^0,c
  3484  0073C4  EFFF  F039         	goto	l1099
  3485  0073C8                     l2272:
  3486                           
  3487                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  3488  0073C8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3489  0073CC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3490  0073D0  CFDE FFF6          	movff	postinc2,tblptrl
  3491  0073D4  CFDD FFF7          	movff	postdec2,tblptrh
  3492  0073D8                     	if	0	;tblptru may be non-zero
  3493  0073D8                     	endif
  3494  0073D8                     	if	0	;tblptru may be non-zero
  3495  0073D8                     	endif
  3496  0073D8  0008               	tblrd		*
  3497  0073DA  50F5               	movf	tablat,w,c
  3498  0073DC  6E01               	movwf	fputc@c^0,c
  3499  0073DE  6A02               	clrf	(fputc@c+1)^0,c
  3500  0073E0  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3501  0073E4  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3502  0073E8  EC0F  F036         	call	_fputc	;wreg free
  3503  0073EC                     
  3504                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  3505  0073EC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3506  0073F0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3507  0073F4  2ADE               	incf	postinc2,f,c
  3508  0073F6  0E00               	movlw	0
  3509  0073F8  22DD               	addwfc	postdec2,f,c
  3510  0073FA  EFD1  F039         	goto	l2262
  3511  0073FE                     l1099:
  3512  0073FE  0012               	return		;funcret
  3513  007400                     __end_of_vfpfcnvrt:
  3514                           	callstack 0
  3515                           
  3516 ;; *************** function _dtoa *****************
  3517 ;; Defined at:
  3518 ;;		line 287 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3521 ;;		 -> sprintf@f(11), 
  3522 ;;  d               8   29[COMRAM] long long 
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;  n               8   53[COMRAM] long long 
  3525 ;;  i               2   61[COMRAM] int 
  3526 ;;  s               2   51[COMRAM] int 
  3527 ;;  w               2   49[COMRAM] int 
  3528 ;;  p               2   47[COMRAM] int 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  2   27[COMRAM] int 
  3531 ;; Registers used:
  3532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3538 ;;      Params:        10       0       0       0       0       0       0
  3539 ;;      Locals:        18       0       0       0       0       0       0
  3540 ;;      Temps:          8       0       0       0       0       0       0
  3541 ;;      Totals:        36       0       0       0       0       0       0
  3542 ;;Total ram usage:       36 bytes
  3543 ;; Hardware stack levels used: 1
  3544 ;; Hardware stack levels required when called: 4
  3545 ;; This function calls:
  3546 ;;		___aodiv
  3547 ;;		___aomod
  3548 ;;		_abs
  3549 ;;		_pad
  3550 ;; This function is called by:
  3551 ;;		_vfpfcnvrt
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text18
  3556  007866                     __ptext18:
  3557                           	callstack 0
  3558  007866                     _dtoa:
  3559                           	callstack 22
  3560  007866                     
  3561                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 287: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 288: {;/opt/mic
      +                          rochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 289:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.36/pic/sources/c99/common/doprnt.c: 290:     long long n;;/opt/microchip/xc8/v2
      +                          .36/pic/sources/c99/common/doprnt.c: 293:     n = d;
  3562  007866  C01E  F036         	movff	dtoa@d,dtoa@n
  3563  00786A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  3564  00786E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  3565  007872  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  3566  007876  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  3567  00787A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  3568  00787E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  3569  007882  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  3570  007886                     
  3571                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ? 1 : 0;
  3572  007886  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  3573  007888  EF48  F03C         	goto	u1071
  3574  00788C  EF4B  F03C         	goto	u1070
  3575  007890                     u1071:
  3576  007890  0E01               	movlw	1
  3577  007892  EF4C  F03C         	goto	u1080
  3578  007896                     u1070:
  3579  007896  0E00               	movlw	0
  3580  007898                     u1080:
  3581  007898  6E34               	movwf	dtoa@s^0,c
  3582  00789A  6A35               	clrf	(dtoa@s+1)^0,c
  3583                           
  3584                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  3585  00789C  5034               	movf	dtoa@s^0,w,c
  3586  00789E  1035               	iorwf	(dtoa@s+1)^0,w,c
  3587  0078A0  B4D8               	btfsc	status,2,c
  3588  0078A2  EF55  F03C         	goto	u1091
  3589  0078A6  EF57  F03C         	goto	u1090
  3590  0078AA                     u1091:
  3591  0078AA  EF67  F03C         	goto	l2162
  3592  0078AE                     u1090:
  3593  0078AE                     
  3594                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  3595  0078AE  1E3D               	comf	(dtoa@n+7)^0,f,c
  3596  0078B0  1E3C               	comf	(dtoa@n+6)^0,f,c
  3597  0078B2  1E3B               	comf	(dtoa@n+5)^0,f,c
  3598  0078B4  1E3A               	comf	(dtoa@n+4)^0,f,c
  3599  0078B6  1E39               	comf	(dtoa@n+3)^0,f,c
  3600  0078B8  1E38               	comf	(dtoa@n+2)^0,f,c
  3601  0078BA  1E37               	comf	(dtoa@n+1)^0,f,c
  3602  0078BC  6C36               	negf	dtoa@n^0,c
  3603  0078BE  0E00               	movlw	0
  3604  0078C0  2237               	addwfc	(dtoa@n+1)^0,f,c
  3605  0078C2  2238               	addwfc	(dtoa@n+2)^0,f,c
  3606  0078C4  2239               	addwfc	(dtoa@n+3)^0,f,c
  3607  0078C6  223A               	addwfc	(dtoa@n+4)^0,f,c
  3608  0078C8  223B               	addwfc	(dtoa@n+5)^0,f,c
  3609  0078CA  223C               	addwfc	(dtoa@n+6)^0,f,c
  3610  0078CC  223D               	addwfc	(dtoa@n+7)^0,f,c
  3611  0078CE                     l2162:
  3612                           
  3613                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 300:     if (!(prec < 0)) {
  3614  0078CE  0100               	movlb	0	; () banked
  3615  0078D0  BF65               	btfsc	(_prec+1)& (0+255),7,b
  3616  0078D2  EF6D  F03C         	goto	u1101
  3617  0078D6  EF6F  F03C         	goto	u1100
  3618  0078DA                     u1101:
  3619  0078DA  EF70  F03C         	goto	l2166
  3620  0078DE                     u1100:
  3621  0078DE                     
  3622                           ; BSR set to: 0
  3623                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 301:         flags &= ~(1 << 
      +                          1);
  3624  0078DE  9366               	bcf	_flags& (0+255),1,b
  3625  0078E0                     l2166:
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 303:     p = (0 < prec) ? pre
      +                          c : 1;
  3629  0078E0  BF65               	btfsc	(_prec+1)& (0+255),7,b
  3630  0078E2  EF7D  F03C         	goto	u1110
  3631  0078E6  5165               	movf	(_prec+1)& (0+255),w,b
  3632  0078E8  E106               	bnz	u1111
  3633  0078EA  0564               	decf	_prec& (0+255),w,b
  3634  0078EC  B0D8               	btfsc	status,0,c
  3635  0078EE  EF7B  F03C         	goto	u1111
  3636  0078F2  EF7D  F03C         	goto	u1110
  3637  0078F6                     u1111:
  3638  0078F6  EF83  F03C         	goto	l1072
  3639  0078FA                     u1110:
  3640  0078FA                     
  3641                           ; BSR set to: 0
  3642  0078FA  0E00               	movlw	0
  3643  0078FC  6E31               	movwf	(dtoa@p+1)^0,c
  3644  0078FE  0E01               	movlw	1
  3645  007900  6E30               	movwf	dtoa@p^0,c
  3646  007902  EF87  F03C         	goto	l1074
  3647  007906                     l1072:
  3648                           
  3649                           ; BSR set to: 0
  3650  007906  C064  F030         	movff	_prec,dtoa@p
  3651  00790A  C065  F031         	movff	_prec+1,dtoa@p+1
  3652  00790E                     l1074:
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 304:     w = width;
  3656  00790E  C062  F032         	movff	_width,dtoa@w
  3657  007912  C063  F033         	movff	_width+1,dtoa@w+1
  3658  007916                     
  3659                           ; BSR set to: 0
  3660                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 305:     if (s || (flags & (1
      +                           << 2))) {
  3661  007916  5034               	movf	dtoa@s^0,w,c
  3662  007918  1035               	iorwf	(dtoa@s+1)^0,w,c
  3663  00791A  A4D8               	btfss	status,2,c
  3664  00791C  EF92  F03C         	goto	u1121
  3665  007920  EF94  F03C         	goto	u1120
  3666  007924                     u1121:
  3667  007924  EF9B  F03C         	goto	l2174
  3668  007928                     u1120:
  3669  007928                     
  3670                           ; BSR set to: 0
  3671  007928  A566               	btfss	_flags& (0+255),2,b
  3672  00792A  EF99  F03C         	goto	u1131
  3673  00792E  EF9B  F03C         	goto	u1130
  3674  007932                     u1131:
  3675  007932  EF9E  F03C         	goto	l2176
  3676  007936                     u1130:
  3677  007936                     l2174:
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 306:         --w;
  3681  007936  0632               	decf	dtoa@w^0,f,c
  3682  007938  A0D8               	btfss	status,0,c
  3683  00793A  0633               	decf	(dtoa@w+1)^0,f,c
  3684  00793C                     l2176:
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(dbuf) - 1
      +                          ;
  3688  00793C  0E00               	movlw	0
  3689  00793E  6E3F               	movwf	(dtoa@i+1)^0,c
  3690  007940  0E1F               	movlw	31
  3691  007942  6E3E               	movwf	dtoa@i^0,c
  3692  007944                     
  3693                           ; BSR set to: 0
  3694                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '\0';
  3695  007944  0E00               	movlw	0
  3696  007946  6F87               	movwf	(_dbuf+31)& (0+255),b
  3697                           
  3698                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3699  007948  EF22  F03D         	goto	l2190
  3700  00794C                     l2180:
  3701                           
  3702                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 313:         --i;
  3703  00794C  063E               	decf	dtoa@i^0,f,c
  3704  00794E  A0D8               	btfss	status,0,c
  3705  007950  063F               	decf	(dtoa@i+1)^0,f,c
  3706  007952                     
  3707                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 314:         dbuf[i] = (char)
      +                          ((int)'0' + abs(n % 10));
  3708  007952  0E68               	movlw	low _dbuf
  3709  007954  243E               	addwf	dtoa@i^0,w,c
  3710  007956  6ED9               	movwf	fsr2l,c
  3711  007958  0E00               	movlw	high _dbuf
  3712  00795A  203F               	addwfc	(dtoa@i+1)^0,w,c
  3713  00795C  6EDA               	movwf	fsr2h,c
  3714  00795E  C036  F001         	movff	dtoa@n,___aomod@dividend
  3715  007962  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3716  007966  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3717  00796A  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3718  00796E  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3719  007972  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3720  007976  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3721  00797A  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3722  00797E  0E0A               	movlw	10
  3723  007980  6E09               	movwf	___aomod@divisor^0,c
  3724  007982  0E00               	movlw	0
  3725  007984  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3726  007986  0E00               	movlw	0
  3727  007988  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3728  00798A  0E00               	movlw	0
  3729  00798C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3730  00798E  0E00               	movlw	0
  3731  007990  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3732  007992  0E00               	movlw	0
  3733  007994  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3734  007996  0E00               	movlw	0
  3735  007998  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3736  00799A  0E00               	movlw	0
  3737  00799C  6E10               	movwf	(___aomod@divisor+7)^0,c
  3738  00799E  ECB0  F037         	call	___aomod	;wreg free
  3739  0079A2  C001  F026         	movff	?___aomod,??_dtoa
  3740  0079A6  C002  F027         	movff	?___aomod+1,??_dtoa+1
  3741  0079AA  C003  F028         	movff	?___aomod+2,??_dtoa+2
  3742  0079AE  C004  F029         	movff	?___aomod+3,??_dtoa+3
  3743  0079B2  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  3744  0079B6  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  3745  0079BA  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  3746  0079BE  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  3747  0079C2  C026  F013         	movff	??_dtoa,abs@a
  3748  0079C6  C028  F014         	movff	??_dtoa+2,abs@a+1
  3749  0079CA  EC24  F034         	call	_abs	;wreg free
  3750  0079CE  5013               	movf	?_abs^0,w,c
  3751  0079D0  0F30               	addlw	48
  3752  0079D2  6EDF               	movwf	indf2,c
  3753  0079D4                     
  3754                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 315:         --p;
  3755  0079D4  0630               	decf	dtoa@p^0,f,c
  3756  0079D6  A0D8               	btfss	status,0,c
  3757  0079D8  0631               	decf	(dtoa@p+1)^0,f,c
  3758  0079DA                     
  3759                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 316:         --w;
  3760  0079DA  0632               	decf	dtoa@w^0,f,c
  3761  0079DC  A0D8               	btfss	status,0,c
  3762  0079DE  0633               	decf	(dtoa@w+1)^0,f,c
  3763  0079E0                     
  3764                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 317:         n = n / 10;
  3765  0079E0  C036  F001         	movff	dtoa@n,___aodiv@dividend
  3766  0079E4  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3767  0079E8  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3768  0079EC  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3769  0079F0  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3770  0079F4  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3771  0079F8  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3772  0079FC  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3773  007A00  0E0A               	movlw	10
  3774  007A02  6E09               	movwf	___aodiv@divisor^0,c
  3775  007A04  0E00               	movlw	0
  3776  007A06  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3777  007A08  0E00               	movlw	0
  3778  007A0A  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  3779  007A0C  0E00               	movlw	0
  3780  007A0E  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  3781  007A10  0E00               	movlw	0
  3782  007A12  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  3783  007A14  0E00               	movlw	0
  3784  007A16  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  3785  007A18  0E00               	movlw	0
  3786  007A1A  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  3787  007A1C  0E00               	movlw	0
  3788  007A1E  6E10               	movwf	(___aodiv@divisor+7)^0,c
  3789  007A20  EC62  F038         	call	___aodiv	;wreg free
  3790  007A24  C001  F036         	movff	?___aodiv,dtoa@n
  3791  007A28  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  3792  007A2C  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  3793  007A30  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  3794  007A34  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  3795  007A38  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  3796  007A3C  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  3797  007A40  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  3798  007A44                     l2190:
  3799                           
  3800                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3801  007A44  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  3802  007A46  EF2D  F03D         	goto	u1141
  3803  007A4A  503F               	movf	(dtoa@i+1)^0,w,c
  3804  007A4C  E108               	bnz	u1140
  3805  007A4E  043E               	decf	dtoa@i^0,w,c
  3806  007A50  A0D8               	btfss	status,0,c
  3807  007A52  EF2D  F03D         	goto	u1141
  3808  007A56  EF2F  F03D         	goto	u1140
  3809  007A5A                     u1141:
  3810  007A5A  EF60  F03D         	goto	l2200
  3811  007A5E                     u1140:
  3812  007A5E  5036               	movf	dtoa@n^0,w,c
  3813  007A60  1037               	iorwf	(dtoa@n+1)^0,w,c
  3814  007A62  1038               	iorwf	(dtoa@n+2)^0,w,c
  3815  007A64  1039               	iorwf	(dtoa@n+3)^0,w,c
  3816  007A66  103A               	iorwf	(dtoa@n+4)^0,w,c
  3817  007A68  103B               	iorwf	(dtoa@n+5)^0,w,c
  3818  007A6A  103C               	iorwf	(dtoa@n+6)^0,w,c
  3819  007A6C  103D               	iorwf	(dtoa@n+7)^0,w,c
  3820  007A6E  A4D8               	btfss	status,2,c
  3821  007A70  EF3C  F03D         	goto	u1151
  3822  007A74  EF3E  F03D         	goto	u1150
  3823  007A78                     u1151:
  3824  007A78  EFA6  F03C         	goto	l2180
  3825  007A7C                     u1150:
  3826  007A7C  BE31               	btfsc	(dtoa@p+1)^0,7,c
  3827  007A7E  EF4B  F03D         	goto	u1160
  3828  007A82  5031               	movf	(dtoa@p+1)^0,w,c
  3829  007A84  E106               	bnz	u1161
  3830  007A86  0430               	decf	dtoa@p^0,w,c
  3831  007A88  B0D8               	btfsc	status,0,c
  3832  007A8A  EF49  F03D         	goto	u1161
  3833  007A8E  EF4B  F03D         	goto	u1160
  3834  007A92                     u1161:
  3835  007A92  EFA6  F03C         	goto	l2180
  3836  007A96                     u1160:
  3837  007A96  BE33               	btfsc	(dtoa@w+1)^0,7,c
  3838  007A98  EF56  F03D         	goto	u1171
  3839  007A9C  5033               	movf	(dtoa@w+1)^0,w,c
  3840  007A9E  E108               	bnz	u1170
  3841  007AA0  0432               	decf	dtoa@w^0,w,c
  3842  007AA2  A0D8               	btfss	status,0,c
  3843  007AA4  EF56  F03D         	goto	u1171
  3844  007AA8  EF58  F03D         	goto	u1170
  3845  007AAC                     u1171:
  3846  007AAC  EF60  F03D         	goto	l2200
  3847  007AB0                     u1170:
  3848  007AB0  0100               	movlb	0	; () banked
  3849  007AB2  B366               	btfsc	_flags& (0+255),1,b
  3850  007AB4  EF5E  F03D         	goto	u1181
  3851  007AB8  EF60  F03D         	goto	u1180
  3852  007ABC                     u1181:
  3853  007ABC  EFA6  F03C         	goto	l2180
  3854  007AC0                     u1180:
  3855  007AC0                     l2200:
  3856                           
  3857                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 321:     if (s || (flags & (1
      +                           << 2))) {
  3858  007AC0  5034               	movf	dtoa@s^0,w,c
  3859  007AC2  1035               	iorwf	(dtoa@s+1)^0,w,c
  3860  007AC4  A4D8               	btfss	status,2,c
  3861  007AC6  EF67  F03D         	goto	u1191
  3862  007ACA  EF69  F03D         	goto	u1190
  3863  007ACE                     u1191:
  3864  007ACE  EF71  F03D         	goto	l2204
  3865  007AD2                     u1190:
  3866  007AD2  0100               	movlb	0	; () banked
  3867  007AD4  A566               	btfss	_flags& (0+255),2,b
  3868  007AD6  EF6F  F03D         	goto	u1201
  3869  007ADA  EF71  F03D         	goto	u1200
  3870  007ADE                     u1201:
  3871  007ADE  EF8F  F03D         	goto	l2214
  3872  007AE2                     u1200:
  3873  007AE2                     l2204:
  3874                           
  3875                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 322:         --i;
  3876  007AE2  063E               	decf	dtoa@i^0,f,c
  3877  007AE4  A0D8               	btfss	status,0,c
  3878  007AE6  063F               	decf	(dtoa@i+1)^0,f,c
  3879  007AE8                     
  3880                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 323:         dbuf[i] = s ? '-
      +                          ' : '+';
  3881  007AE8  5034               	movf	dtoa@s^0,w,c
  3882  007AEA  1035               	iorwf	(dtoa@s+1)^0,w,c
  3883  007AEC  A4D8               	btfss	status,2,c
  3884  007AEE  EF7B  F03D         	goto	u1211
  3885  007AF2  EF7D  F03D         	goto	u1210
  3886  007AF6                     u1211:
  3887  007AF6  EF83  F03D         	goto	l2210
  3888  007AFA                     u1210:
  3889  007AFA  0E00               	movlw	0
  3890  007AFC  6E2F               	movwf	(_dtoa$1102+1)^0,c
  3891  007AFE  0E2B               	movlw	43
  3892  007B00  6E2E               	movwf	_dtoa$1102^0,c
  3893  007B02  EF87  F03D         	goto	l2212
  3894  007B06                     l2210:
  3895  007B06  0E00               	movlw	0
  3896  007B08  6E2F               	movwf	(_dtoa$1102+1)^0,c
  3897  007B0A  0E2D               	movlw	45
  3898  007B0C  6E2E               	movwf	_dtoa$1102^0,c
  3899  007B0E                     l2212:
  3900  007B0E  0E68               	movlw	low _dbuf
  3901  007B10  243E               	addwf	dtoa@i^0,w,c
  3902  007B12  6ED9               	movwf	fsr2l,c
  3903  007B14  0E00               	movlw	high _dbuf
  3904  007B16  203F               	addwfc	(dtoa@i+1)^0,w,c
  3905  007B18  6EDA               	movwf	fsr2h,c
  3906  007B1A  C02E  FFDF         	movff	_dtoa$1102,indf2
  3907  007B1E                     l2214:
  3908                           
  3909                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 327:     return pad(fp, &dbuf
      +                          [i], w);
  3910  007B1E  C01C  F011         	movff	dtoa@fp,pad@fp
  3911  007B22  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  3912  007B26  0E68               	movlw	low _dbuf
  3913  007B28  243E               	addwf	dtoa@i^0,w,c
  3914  007B2A  6E13               	movwf	pad@buf^0,c
  3915  007B2C  0E00               	movlw	high _dbuf
  3916  007B2E  203F               	addwfc	(dtoa@i+1)^0,w,c
  3917  007B30  6E14               	movwf	(pad@buf+1)^0,c
  3918  007B32  C032  F015         	movff	dtoa@w,pad@p
  3919  007B36  C033  F016         	movff	dtoa@w+1,pad@p+1
  3920  007B3A  ECAC  F035         	call	_pad	;wreg free
  3921  007B3E  C011  F01C         	movff	?_pad,?_dtoa
  3922  007B42  C012  F01D         	movff	?_pad+1,?_dtoa+1
  3923  007B46  0012               	return		;funcret
  3924  007B48                     __end_of_dtoa:
  3925                           	callstack 0
  3926                           
  3927 ;; *************** function _pad *****************
  3928 ;; Defined at:
  3929 ;;		line 72 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3932 ;;		 -> sprintf@f(11), 
  3933 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3934 ;;		 -> dbuf(32), 
  3935 ;;  p               2   20[COMRAM] int 
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;  w               2   25[COMRAM] int 
  3938 ;;  i               2   23[COMRAM] int 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  2   16[COMRAM] int 
  3941 ;; Registers used:
  3942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3948 ;;      Params:         6       0       0       0       0       0       0
  3949 ;;      Locals:         4       0       0       0       0       0       0
  3950 ;;      Temps:          1       0       0       0       0       0       0
  3951 ;;      Totals:        11       0       0       0       0       0       0
  3952 ;;Total ram usage:       11 bytes
  3953 ;; Hardware stack levels used: 1
  3954 ;; Hardware stack levels required when called: 3
  3955 ;; This function calls:
  3956 ;;		_fputc
  3957 ;;		_fputs
  3958 ;;		_strlen
  3959 ;; This function is called by:
  3960 ;;		_dtoa
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964                           	psect	text19
  3965  006B58                     __ptext19:
  3966                           	callstack 0
  3967  006B58                     _pad:
  3968                           	callstack 22
  3969  006B58                     
  3970                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.36/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  3971  006B58  0100               	movlb	0	; () banked
  3972  006B5A  A166               	btfss	_flags& (0+255),0,b
  3973  006B5C  EFB2  F035         	goto	u1021
  3974  006B60  EFB4  F035         	goto	u1020
  3975  006B64                     u1021:
  3976  006B64  EFBE  F035         	goto	l2130
  3977  006B68                     u1020:
  3978  006B68                     
  3979                           ; BSR set to: 0
  3980                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  3981  006B68  C013  F00A         	movff	pad@buf,fputs@s
  3982  006B6C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3983  006B70  C011  F00C         	movff	pad@fp,fputs@fp
  3984  006B74  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3985  006B78  EC44  F034         	call	_fputs	;wreg free
  3986  006B7C                     l2130:
  3987                           
  3988                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  3989  006B7C  BE16               	btfsc	(pad@p+1)^0,7,c
  3990  006B7E  EFC3  F035         	goto	u1031
  3991  006B82  EFC5  F035         	goto	u1030
  3992  006B86                     u1031:
  3993  006B86  EFCB  F035         	goto	l2134
  3994  006B8A                     u1030:
  3995  006B8A  C015  F01A         	movff	pad@p,pad@w
  3996  006B8E  C016  F01B         	movff	pad@p+1,pad@w+1
  3997  006B92  EFCF  F035         	goto	l1061
  3998  006B96                     l2134:
  3999  006B96  0E00               	movlw	0
  4000  006B98  6E1B               	movwf	(pad@w+1)^0,c
  4001  006B9A  0E00               	movlw	0
  4002  006B9C  6E1A               	movwf	pad@w^0,c
  4003  006B9E                     l1061:
  4004                           
  4005                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  4006  006B9E  0E00               	movlw	0
  4007  006BA0  6E19               	movwf	(pad@i+1)^0,c
  4008  006BA2  0E00               	movlw	0
  4009  006BA4  6E18               	movwf	pad@i^0,c
  4010                           
  4011                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4012  006BA6  EFE1  F035         	goto	l2140
  4013  006BAA                     l2136:
  4014                           
  4015                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  4016  006BAA  0E00               	movlw	0
  4017  006BAC  6E02               	movwf	(fputc@c+1)^0,c
  4018  006BAE  0E20               	movlw	32
  4019  006BB0  6E01               	movwf	fputc@c^0,c
  4020  006BB2  C011  F003         	movff	pad@fp,fputc@fp
  4021  006BB6  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4022  006BBA  EC0F  F036         	call	_fputc	;wreg free
  4023  006BBE                     
  4024                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 86:         ++i;
  4025  006BBE  4A18               	infsnz	pad@i^0,f,c
  4026  006BC0  2A19               	incf	(pad@i+1)^0,f,c
  4027  006BC2                     l2140:
  4028                           
  4029                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4030  006BC2  501A               	movf	pad@w^0,w,c
  4031  006BC4  5C18               	subwf	pad@i^0,w,c
  4032  006BC6  5019               	movf	(pad@i+1)^0,w,c
  4033  006BC8  0A80               	xorlw	128
  4034  006BCA  6E17               	movwf	??_pad^0,c
  4035  006BCC  501B               	movf	(pad@w+1)^0,w,c
  4036  006BCE  0A80               	xorlw	128
  4037  006BD0  5817               	subwfb	??_pad^0,w,c
  4038  006BD2  A0D8               	btfss	status,0,c
  4039  006BD4  EFEE  F035         	goto	u1041
  4040  006BD8  EFF0  F035         	goto	u1040
  4041  006BDC                     u1041:
  4042  006BDC  EFD5  F035         	goto	l2136
  4043  006BE0                     u1040:
  4044  006BE0                     
  4045                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  4046  006BE0  0100               	movlb	0	; () banked
  4047  006BE2  B166               	btfsc	_flags& (0+255),0,b
  4048  006BE4  EFF6  F035         	goto	u1051
  4049  006BE8  EFF8  F035         	goto	u1050
  4050  006BEC                     u1051:
  4051  006BEC  EF02  F036         	goto	l2144
  4052  006BF0                     u1050:
  4053  006BF0                     
  4054                           ; BSR set to: 0
  4055                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  4056  006BF0  C013  F00A         	movff	pad@buf,fputs@s
  4057  006BF4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4058  006BF8  C011  F00C         	movff	pad@fp,fputs@fp
  4059  006BFC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4060  006C00  EC44  F034         	call	_fputs	;wreg free
  4061  006C04                     l2144:
  4062                           
  4063                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  4064  006C04  C013  F001         	movff	pad@buf,strlen@s
  4065  006C08  C014  F002         	movff	pad@buf+1,strlen@s+1
  4066  006C0C  ECAC  F034         	call	_strlen	;wreg free
  4067  006C10  501A               	movf	pad@w^0,w,c
  4068  006C12  2401               	addwf	?_strlen^0,w,c
  4069  006C14  6E11               	movwf	?_pad^0,c
  4070  006C16  501B               	movf	(pad@w+1)^0,w,c
  4071  006C18  2002               	addwfc	(?_strlen+1)^0,w,c
  4072  006C1A  6E12               	movwf	(?_pad+1)^0,c
  4073  006C1C  0012               	return		;funcret
  4074  006C1E                     __end_of_pad:
  4075                           	callstack 0
  4076                           
  4077 ;; *************** function _strlen *****************
  4078 ;; Defined at:
  4079 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strlen.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4082 ;;		 -> dbuf(32), demo@idString(8), STR_1(13), 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4085 ;;		 -> dbuf(32), demo@idString(8), STR_1(13), 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  2    0[COMRAM] unsigned int 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4095 ;;      Params:         2       0       0       0       0       0       0
  4096 ;;      Locals:         2       0       0       0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0       0       0
  4098 ;;      Totals:         4       0       0       0       0       0       0
  4099 ;;Total ram usage:        4 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_tftstDrawText
  4105 ;;		_pad
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           	psect	text20
  4110  006958                     __ptext20:
  4111                           	callstack 0
  4112  006958                     _strlen:
  4113                           	callstack 28
  4114  006958  C001  F003         	movff	strlen@s,strlen@a
  4115  00695C  C002  F004         	movff	strlen@s+1,strlen@a+1
  4116  006960  EFB4  F034         	goto	l2022
  4117  006964                     l2020:
  4118  006964  4A01               	infsnz	strlen@s^0,f,c
  4119  006966  2A02               	incf	(strlen@s+1)^0,f,c
  4120  006968                     l2022:
  4121  006968  C001  FFF6         	movff	strlen@s,tblptrl
  4122  00696C  C002  FFF7         	movff	strlen@s+1,tblptrh
  4123  006970  6AF8               	clrf	tblptru,c
  4124  006972  0E05               	movlw	(high __ramtop+-1)
  4125  006974  64F7               	cpfsgt	tblptrh,c
  4126  006976  D003               	bra	u867
  4127  006978  0008               	tblrd		*
  4128  00697A  50F5               	movf	tablat,w,c
  4129  00697C  D005               	bra	u860
  4130  00697E                     u867:
  4131  00697E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4132  006982  CFF7 FFE2          	movff	tblptrh,fsr1h
  4133  006986  50E7               	movf	indf1,w,c
  4134  006988                     u860:
  4135  006988  0900               	iorlw	0
  4136  00698A  A4D8               	btfss	status,2,c
  4137  00698C  EFCA  F034         	goto	u871
  4138  006990  EFCC  F034         	goto	u870
  4139  006994                     u871:
  4140  006994  EFB2  F034         	goto	l2020
  4141  006998                     u870:
  4142  006998  5003               	movf	strlen@a^0,w,c
  4143  00699A  5C01               	subwf	strlen@s^0,w,c
  4144  00699C  6E01               	movwf	?_strlen^0,c
  4145  00699E  5004               	movf	(strlen@a+1)^0,w,c
  4146  0069A0  5802               	subwfb	(strlen@s+1)^0,w,c
  4147  0069A2  6E02               	movwf	(?_strlen+1)^0,c
  4148  0069A4  0012               	return		;funcret
  4149  0069A6                     __end_of_strlen:
  4150                           	callstack 0
  4151                           
  4152 ;; *************** function _fputs *****************
  4153 ;; Defined at:
  4154 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputs.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4157 ;;		 -> dbuf(32), 
  4158 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4159 ;;		 -> sprintf@f(11), 
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;  i               2   14[COMRAM] int 
  4162 ;;  c               1   13[COMRAM] unsigned char 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  2    9[COMRAM] int 
  4165 ;; Registers used:
  4166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4172 ;;      Params:         4       0       0       0       0       0       0
  4173 ;;      Locals:         3       0       0       0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0       0
  4175 ;;      Totals:         7       0       0       0       0       0       0
  4176 ;;Total ram usage:        7 bytes
  4177 ;; Hardware stack levels used: 1
  4178 ;; Hardware stack levels required when called: 2
  4179 ;; This function calls:
  4180 ;;		_fputc
  4181 ;; This function is called by:
  4182 ;;		_pad
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text21
  4187  006888                     __ptext21:
  4188                           	callstack 0
  4189  006888                     _fputs:
  4190                           	callstack 22
  4191  006888  0E00               	movlw	0
  4192  00688A  6E10               	movwf	(fputs@i+1)^0,c
  4193  00688C  0E00               	movlw	0
  4194  00688E  6E0F               	movwf	fputs@i^0,c
  4195  006890  EF55  F034         	goto	l2034
  4196  006894                     l2030:
  4197  006894  C00E  F001         	movff	fputs@c,fputc@c
  4198  006898  6A02               	clrf	(fputc@c+1)^0,c
  4199  00689A  C00C  F003         	movff	fputs@fp,fputc@fp
  4200  00689E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4201  0068A2  EC0F  F036         	call	_fputc	;wreg free
  4202  0068A6  4A0F               	infsnz	fputs@i^0,f,c
  4203  0068A8  2A10               	incf	(fputs@i+1)^0,f,c
  4204  0068AA                     l2034:
  4205  0068AA  500F               	movf	fputs@i^0,w,c
  4206  0068AC  240A               	addwf	fputs@s^0,w,c
  4207  0068AE  6ED9               	movwf	fsr2l,c
  4208  0068B0  5010               	movf	(fputs@i+1)^0,w,c
  4209  0068B2  200B               	addwfc	(fputs@s+1)^0,w,c
  4210  0068B4  6EDA               	movwf	fsr2h,c
  4211  0068B6  50DF               	movf	indf2,w,c
  4212  0068B8  6E0E               	movwf	fputs@c^0,c
  4213  0068BA  500E               	movf	fputs@c^0,w,c
  4214  0068BC  A4D8               	btfss	status,2,c
  4215  0068BE  EF63  F034         	goto	u881
  4216  0068C2  EF65  F034         	goto	u880
  4217  0068C6                     u881:
  4218  0068C6  EF4A  F034         	goto	l2030
  4219  0068CA                     u880:
  4220  0068CA  0012               	return		;funcret
  4221  0068CC                     __end_of_fputs:
  4222                           	callstack 0
  4223                           
  4224 ;; *************** function _fputc *****************
  4225 ;; Defined at:
  4226 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputc.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  c               2    0[COMRAM] int 
  4229 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4230 ;;		 -> sprintf@f(11), 
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;		None
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  2    0[COMRAM] int 
  4235 ;; Registers used:
  4236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4242 ;;      Params:         4       0       0       0       0       0       0
  4243 ;;      Locals:         0       0       0       0       0       0       0
  4244 ;;      Temps:          5       0       0       0       0       0       0
  4245 ;;      Totals:         9       0       0       0       0       0       0
  4246 ;;Total ram usage:        9 bytes
  4247 ;; Hardware stack levels used: 1
  4248 ;; Hardware stack levels required when called: 1
  4249 ;; This function calls:
  4250 ;;		_putch
  4251 ;; This function is called by:
  4252 ;;		_pad
  4253 ;;		_vfpfcnvrt
  4254 ;;		_fputs
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text22
  4259  006C1E                     __ptext22:
  4260                           	callstack 0
  4261  006C1E                     _fputc:
  4262                           	callstack 25
  4263  006C1E  5003               	movf	fputc@fp^0,w,c
  4264  006C20  1004               	iorwf	(fputc@fp+1)^0,w,c
  4265  006C22  B4D8               	btfsc	status,2,c
  4266  006C24  EF16  F036         	goto	u811
  4267  006C28  EF18  F036         	goto	u810
  4268  006C2C                     u811:
  4269  006C2C  EF21  F036         	goto	l2006
  4270  006C30                     u810:
  4271  006C30  5003               	movf	fputc@fp^0,w,c
  4272  006C32  1004               	iorwf	(fputc@fp+1)^0,w,c
  4273  006C34  A4D8               	btfss	status,2,c
  4274  006C36  EF1F  F036         	goto	u821
  4275  006C3A  EF21  F036         	goto	u820
  4276  006C3E                     u821:
  4277  006C3E  EF26  F036         	goto	l2008
  4278  006C42                     u820:
  4279  006C42                     l2006:
  4280  006C42  5001               	movf	fputc@c^0,w,c
  4281  006C44  EC7B  F033         	call	_putch
  4282  006C48  EF73  F036         	goto	l1125
  4283  006C4C                     l2008:
  4284  006C4C  EE20 F009          	lfsr	2,9
  4285  006C50  5003               	movf	fputc@fp^0,w,c
  4286  006C52  26D9               	addwf	fsr2l,f,c
  4287  006C54  5004               	movf	(fputc@fp+1)^0,w,c
  4288  006C56  22DA               	addwfc	fsr2h,f,c
  4289  006C58  50DE               	movf	postinc2,w,c
  4290  006C5A  10DE               	iorwf	postinc2,w,c
  4291  006C5C  B4D8               	btfsc	status,2,c
  4292  006C5E  EF33  F036         	goto	u831
  4293  006C62  EF35  F036         	goto	u830
  4294  006C66                     u831:
  4295  006C66  EF50  F036         	goto	l2012
  4296  006C6A                     u830:
  4297  006C6A  EE20 F009          	lfsr	2,9
  4298  006C6E  5003               	movf	fputc@fp^0,w,c
  4299  006C70  26D9               	addwf	fsr2l,f,c
  4300  006C72  5004               	movf	(fputc@fp+1)^0,w,c
  4301  006C74  22DA               	addwfc	fsr2h,f,c
  4302  006C76  EE10 F003          	lfsr	1,3
  4303  006C7A  5003               	movf	fputc@fp^0,w,c
  4304  006C7C  26E1               	addwf	fsr1l,f,c
  4305  006C7E  5004               	movf	(fputc@fp+1)^0,w,c
  4306  006C80  22E2               	addwfc	fsr1h,f,c
  4307  006C82  50DE               	movf	postinc2,w,c
  4308  006C84  5CE6               	subwf	postinc1,w,c
  4309  006C86  50E6               	movf	postinc1,w,c
  4310  006C88  0A80               	xorlw	128
  4311  006C8A  6E09               	movwf	(??_fputc+4)^0,c
  4312  006C8C  50DE               	movf	postinc2,w,c
  4313  006C8E  0A80               	xorlw	128
  4314  006C90  5809               	subwfb	(??_fputc+4)^0,w,c
  4315  006C92  B0D8               	btfsc	status,0,c
  4316  006C94  EF4E  F036         	goto	u841
  4317  006C98  EF50  F036         	goto	u840
  4318  006C9C                     u841:
  4319  006C9C  EF73  F036         	goto	l1125
  4320  006CA0                     u840:
  4321  006CA0                     l2012:
  4322  006CA0  EE20 F003          	lfsr	2,3
  4323  006CA4  5003               	movf	fputc@fp^0,w,c
  4324  006CA6  26D9               	addwf	fsr2l,f,c
  4325  006CA8  5004               	movf	(fputc@fp+1)^0,w,c
  4326  006CAA  22DA               	addwfc	fsr2h,f,c
  4327  006CAC  CFDE F005          	movff	postinc2,??_fputc
  4328  006CB0  CFDD F006          	movff	postdec2,??_fputc+1
  4329  006CB4  C003  FFD9         	movff	fputc@fp,fsr2l
  4330  006CB8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4331  006CBC  CFDE F007          	movff	postinc2,??_fputc+2
  4332  006CC0  CFDD F008          	movff	postdec2,??_fputc+3
  4333  006CC4  5005               	movf	??_fputc^0,w,c
  4334  006CC6  2407               	addwf	(??_fputc+2)^0,w,c
  4335  006CC8  6ED9               	movwf	fsr2l,c
  4336  006CCA  5006               	movf	(??_fputc+1)^0,w,c
  4337  006CCC  2008               	addwfc	(??_fputc+3)^0,w,c
  4338  006CCE  6EDA               	movwf	fsr2h,c
  4339  006CD0  C001  FFDF         	movff	fputc@c,indf2
  4340  006CD4  EE20 F003          	lfsr	2,3
  4341  006CD8  5003               	movf	fputc@fp^0,w,c
  4342  006CDA  26D9               	addwf	fsr2l,f,c
  4343  006CDC  5004               	movf	(fputc@fp+1)^0,w,c
  4344  006CDE  22DA               	addwfc	fsr2h,f,c
  4345  006CE0  2ADE               	incf	postinc2,f,c
  4346  006CE2  0E00               	movlw	0
  4347  006CE4  22DD               	addwfc	postdec2,f,c
  4348  006CE6                     l1125:
  4349  006CE6  0012               	return		;funcret
  4350  006CE8                     __end_of_fputc:
  4351                           	callstack 0
  4352                           
  4353 ;; *************** function _putch *****************
  4354 ;; Defined at:
  4355 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/putch.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  c               1    wreg     unsigned char 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  c               1    0[COMRAM] unsigned char 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		wreg
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4369 ;;      Params:         0       0       0       0       0       0       0
  4370 ;;      Locals:         0       0       0       0       0       0       0
  4371 ;;      Temps:          0       0       0       0       0       0       0
  4372 ;;      Totals:         0       0       0       0       0       0       0
  4373 ;;Total ram usage:        0 bytes
  4374 ;; Hardware stack levels used: 1
  4375 ;; This function calls:
  4376 ;;		Nothing
  4377 ;; This function is called by:
  4378 ;;		_fputc
  4379 ;; This function uses a non-reentrant model
  4380 ;;
  4381                           
  4382                           	psect	text23
  4383  0066F6                     __ptext23:
  4384                           	callstack 0
  4385  0066F6                     _putch:
  4386                           	callstack 25
  4387  0066F6  0012               	return		;funcret
  4388  0066F8                     __end_of_putch:
  4389                           	callstack 0
  4390                           
  4391 ;; *************** function _abs *****************
  4392 ;; Defined at:
  4393 ;;		line 1 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/abs.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;  a               2   18[COMRAM] int 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;		None
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  2   18[COMRAM] int 
  4400 ;; Registers used:
  4401 ;;		wreg, status,2, status,0
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4407 ;;      Params:         2       0       0       0       0       0       0
  4408 ;;      Locals:         0       0       0       0       0       0       0
  4409 ;;      Temps:          2       0       0       0       0       0       0
  4410 ;;      Totals:         4       0       0       0       0       0       0
  4411 ;;Total ram usage:        4 bytes
  4412 ;; Hardware stack levels used: 1
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_dtoa
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text24
  4421  006848                     __ptext24:
  4422                           	callstack 0
  4423  006848                     _abs:
  4424                           	callstack 25
  4425  006848  BE14               	btfsc	(abs@a+1)^0,7,c
  4426  00684A  EF31  F034         	goto	u1060
  4427  00684E  5014               	movf	(abs@a+1)^0,w,c
  4428  006850  E106               	bnz	u1061
  4429  006852  0413               	decf	abs@a^0,w,c
  4430  006854  B0D8               	btfsc	status,0,c
  4431  006856  EF2F  F034         	goto	u1061
  4432  00685A  EF31  F034         	goto	u1060
  4433  00685E                     u1061:
  4434  00685E  EF3F  F034         	goto	l1110
  4435  006862                     u1060:
  4436  006862  C013  F015         	movff	abs@a,??_abs
  4437  006866  C014  F016         	movff	abs@a+1,??_abs+1
  4438  00686A  1E15               	comf	??_abs^0,f,c
  4439  00686C  1E16               	comf	(??_abs+1)^0,f,c
  4440  00686E  4A15               	infsnz	??_abs^0,f,c
  4441  006870  2A16               	incf	(??_abs+1)^0,f,c
  4442  006872  C015  F013         	movff	??_abs,?_abs
  4443  006876  C016  F014         	movff	??_abs+1,?_abs+1
  4444  00687A  EF43  F034         	goto	l1113
  4445  00687E                     l1110:
  4446  00687E  C013  F013         	movff	abs@a,?_abs
  4447  006882  C014  F014         	movff	abs@a+1,?_abs+1
  4448  006886                     l1113:
  4449  006886  0012               	return		;funcret
  4450  006888                     __end_of_abs:
  4451                           	callstack 0
  4452                           
  4453 ;; *************** function ___aomod *****************
  4454 ;; Defined at:
  4455 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/aomod.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  dividend        8    0[COMRAM] long long 
  4458 ;;  divisor         8    8[COMRAM] long long 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  sign            1   17[COMRAM] unsigned char 
  4461 ;;  counter         1   16[COMRAM] unsigned char 
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  8    0[COMRAM] long long 
  4464 ;; Registers used:
  4465 ;;		wreg, status,2, status,0
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4471 ;;      Params:        16       0       0       0       0       0       0
  4472 ;;      Locals:         2       0       0       0       0       0       0
  4473 ;;      Temps:          0       0       0       0       0       0       0
  4474 ;;      Totals:        18       0       0       0       0       0       0
  4475 ;;Total ram usage:       18 bytes
  4476 ;; Hardware stack levels used: 1
  4477 ;; This function calls:
  4478 ;;		Nothing
  4479 ;; This function is called by:
  4480 ;;		_dtoa
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           	psect	text25
  4485  006F60                     __ptext25:
  4486                           	callstack 0
  4487  006F60                     ___aomod:
  4488                           	callstack 25
  4489  006F60  0E00               	movlw	0
  4490  006F62  6E12               	movwf	___aomod@sign^0,c
  4491  006F64  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  4492  006F66  EFB9  F037         	goto	u960
  4493  006F6A  EFB7  F037         	goto	u961
  4494  006F6E                     u961:
  4495  006F6E  EFCB  F037         	goto	l2098
  4496  006F72                     u960:
  4497  006F72  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4498  006F74  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4499  006F76  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4500  006F78  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4501  006F7A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4502  006F7C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4503  006F7E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4504  006F80  6C01               	negf	___aomod@dividend^0,c
  4505  006F82  0E00               	movlw	0
  4506  006F84  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4507  006F86  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4508  006F88  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4509  006F8A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4510  006F8C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4511  006F8E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4512  006F90  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4513  006F92  0E01               	movlw	1
  4514  006F94  6E12               	movwf	___aomod@sign^0,c
  4515  006F96                     l2098:
  4516  006F96  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  4517  006F98  EFD2  F037         	goto	u970
  4518  006F9C  EFD0  F037         	goto	u971
  4519  006FA0                     u971:
  4520  006FA0  EFE2  F037         	goto	l2102
  4521  006FA4                     u970:
  4522  006FA4  1E10               	comf	(___aomod@divisor+7)^0,f,c
  4523  006FA6  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  4524  006FA8  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  4525  006FAA  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  4526  006FAC  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  4527  006FAE  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  4528  006FB0  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  4529  006FB2  6C09               	negf	___aomod@divisor^0,c
  4530  006FB4  0E00               	movlw	0
  4531  006FB6  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  4532  006FB8  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  4533  006FBA  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  4534  006FBC  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  4535  006FBE  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  4536  006FC0  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  4537  006FC2  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  4538  006FC4                     l2102:
  4539  006FC4  5009               	movf	___aomod@divisor^0,w,c
  4540  006FC6  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  4541  006FC8  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  4542  006FCA  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  4543  006FCC  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  4544  006FCE  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  4545  006FD0  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  4546  006FD2  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  4547  006FD4  B4D8               	btfsc	status,2,c
  4548  006FD6  EFEF  F037         	goto	u981
  4549  006FDA  EFF1  F037         	goto	u980
  4550  006FDE                     u981:
  4551  006FDE  EF39  F038         	goto	l2118
  4552  006FE2                     u980:
  4553  006FE2  0E01               	movlw	1
  4554  006FE4  6E11               	movwf	___aomod@counter^0,c
  4555  006FE6  EFFF  F037         	goto	l2108
  4556  006FEA                     l2106:
  4557  006FEA  90D8               	bcf	status,0,c
  4558  006FEC  3609               	rlcf	___aomod@divisor^0,f,c
  4559  006FEE  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  4560  006FF0  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  4561  006FF2  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  4562  006FF4  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  4563  006FF6  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  4564  006FF8  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  4565  006FFA  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  4566  006FFC  2A11               	incf	___aomod@counter^0,f,c
  4567  006FFE                     l2108:
  4568  006FFE  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  4569  007000  EF04  F038         	goto	u991
  4570  007004  EF06  F038         	goto	u990
  4571  007008                     u991:
  4572  007008  EFF5  F037         	goto	l2106
  4573  00700C                     u990:
  4574  00700C                     l2110:
  4575  00700C  5009               	movf	___aomod@divisor^0,w,c
  4576  00700E  5C01               	subwf	___aomod@dividend^0,w,c
  4577  007010  500A               	movf	(___aomod@divisor+1)^0,w,c
  4578  007012  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  4579  007014  500B               	movf	(___aomod@divisor+2)^0,w,c
  4580  007016  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  4581  007018  500C               	movf	(___aomod@divisor+3)^0,w,c
  4582  00701A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  4583  00701C  500D               	movf	(___aomod@divisor+4)^0,w,c
  4584  00701E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  4585  007020  500E               	movf	(___aomod@divisor+5)^0,w,c
  4586  007022  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  4587  007024  500F               	movf	(___aomod@divisor+6)^0,w,c
  4588  007026  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  4589  007028  5010               	movf	(___aomod@divisor+7)^0,w,c
  4590  00702A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  4591  00702C  A0D8               	btfss	status,0,c
  4592  00702E  EF1B  F038         	goto	u1001
  4593  007032  EF1D  F038         	goto	u1000
  4594  007036                     u1001:
  4595  007036  EF2D  F038         	goto	l2114
  4596  00703A                     u1000:
  4597  00703A  5009               	movf	___aomod@divisor^0,w,c
  4598  00703C  5E01               	subwf	___aomod@dividend^0,f,c
  4599  00703E  500A               	movf	(___aomod@divisor+1)^0,w,c
  4600  007040  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  4601  007042  500B               	movf	(___aomod@divisor+2)^0,w,c
  4602  007044  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  4603  007046  500C               	movf	(___aomod@divisor+3)^0,w,c
  4604  007048  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  4605  00704A  500D               	movf	(___aomod@divisor+4)^0,w,c
  4606  00704C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  4607  00704E  500E               	movf	(___aomod@divisor+5)^0,w,c
  4608  007050  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  4609  007052  500F               	movf	(___aomod@divisor+6)^0,w,c
  4610  007054  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  4611  007056  5010               	movf	(___aomod@divisor+7)^0,w,c
  4612  007058  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  4613  00705A                     l2114:
  4614  00705A  90D8               	bcf	status,0,c
  4615  00705C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  4616  00705E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  4617  007060  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  4618  007062  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  4619  007064  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  4620  007066  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  4621  007068  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  4622  00706A  3209               	rrcf	___aomod@divisor^0,f,c
  4623  00706C  2E11               	decfsz	___aomod@counter^0,f,c
  4624  00706E  EF06  F038         	goto	l2110
  4625  007072                     l2118:
  4626  007072  5012               	movf	___aomod@sign^0,w,c
  4627  007074  B4D8               	btfsc	status,2,c
  4628  007076  EF3F  F038         	goto	u1011
  4629  00707A  EF41  F038         	goto	u1010
  4630  00707E                     u1011:
  4631  00707E  EF51  F038         	goto	l2122
  4632  007082                     u1010:
  4633  007082  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4634  007084  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4635  007086  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4636  007088  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4637  00708A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4638  00708C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4639  00708E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4640  007090  6C01               	negf	___aomod@dividend^0,c
  4641  007092  0E00               	movlw	0
  4642  007094  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4643  007096  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4644  007098  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4645  00709A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4646  00709C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4647  00709E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4648  0070A0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4649  0070A2                     l2122:
  4650  0070A2  C001  F001         	movff	___aomod@dividend,?___aomod
  4651  0070A6  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  4652  0070AA  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  4653  0070AE  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  4654  0070B2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  4655  0070B6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  4656  0070BA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  4657  0070BE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  4658  0070C2  0012               	return		;funcret
  4659  0070C4                     __end_of___aomod:
  4660                           	callstack 0
  4661                           
  4662 ;; *************** function ___aodiv *****************
  4663 ;; Defined at:
  4664 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/aodiv.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  dividend        8    0[COMRAM] long long 
  4667 ;;  divisor         8    8[COMRAM] long long 
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;  quotient        8   18[COMRAM] long long 
  4670 ;;  sign            1   17[COMRAM] unsigned char 
  4671 ;;  counter         1   16[COMRAM] unsigned char 
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  8    0[COMRAM] long long 
  4674 ;; Registers used:
  4675 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4681 ;;      Params:        16       0       0       0       0       0       0
  4682 ;;      Locals:        10       0       0       0       0       0       0
  4683 ;;      Temps:          0       0       0       0       0       0       0
  4684 ;;      Totals:        26       0       0       0       0       0       0
  4685 ;;Total ram usage:       26 bytes
  4686 ;; Hardware stack levels used: 1
  4687 ;; This function calls:
  4688 ;;		Nothing
  4689 ;; This function is called by:
  4690 ;;		_dtoa
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694                           	psect	text26
  4695  0070C4                     __ptext26:
  4696                           	callstack 0
  4697  0070C4                     ___aodiv:
  4698                           	callstack 25
  4699  0070C4  0E00               	movlw	0
  4700  0070C6  6E12               	movwf	___aodiv@sign^0,c
  4701  0070C8  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  4702  0070CA  EF6B  F038         	goto	u890
  4703  0070CE  EF69  F038         	goto	u891
  4704  0070D2                     u891:
  4705  0070D2  EF7D  F038         	goto	l2054
  4706  0070D6                     u890:
  4707  0070D6  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  4708  0070D8  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  4709  0070DA  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  4710  0070DC  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  4711  0070DE  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  4712  0070E0  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  4713  0070E2  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  4714  0070E4  6C09               	negf	___aodiv@divisor^0,c
  4715  0070E6  0E00               	movlw	0
  4716  0070E8  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  4717  0070EA  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  4718  0070EC  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  4719  0070EE  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  4720  0070F0  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  4721  0070F2  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  4722  0070F4  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  4723  0070F6  0E01               	movlw	1
  4724  0070F8  6E12               	movwf	___aodiv@sign^0,c
  4725  0070FA                     l2054:
  4726  0070FA  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  4727  0070FC  EF84  F038         	goto	u900
  4728  007100  EF82  F038         	goto	u901
  4729  007104                     u901:
  4730  007104  EF96  F038         	goto	l2060
  4731  007108                     u900:
  4732  007108  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  4733  00710A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  4734  00710C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  4735  00710E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  4736  007110  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  4737  007112  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  4738  007114  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  4739  007116  6C01               	negf	___aodiv@dividend^0,c
  4740  007118  0E00               	movlw	0
  4741  00711A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  4742  00711C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  4743  00711E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  4744  007120  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  4745  007122  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  4746  007124  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  4747  007126  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  4748  007128  0E01               	movlw	1
  4749  00712A  1A12               	xorwf	___aodiv@sign^0,f,c
  4750  00712C                     l2060:
  4751  00712C  EE20  F013         	lfsr	2,___aodiv@quotient
  4752  007130  0E07               	movlw	7
  4753  007132                     u911:
  4754  007132  6ADE               	clrf	postinc2,c
  4755  007134  06E8               	decf	wreg,f,c
  4756  007136  E2FD               	bc	u911
  4757  007138  5009               	movf	___aodiv@divisor^0,w,c
  4758  00713A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  4759  00713C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  4760  00713E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  4761  007140  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  4762  007142  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  4763  007144  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  4764  007146  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  4765  007148  B4D8               	btfsc	status,2,c
  4766  00714A  EFA9  F038         	goto	u921
  4767  00714E  EFAB  F038         	goto	u920
  4768  007152                     u921:
  4769  007152  EFFD  F038         	goto	l2082
  4770  007156                     u920:
  4771  007156  0E01               	movlw	1
  4772  007158  6E11               	movwf	___aodiv@counter^0,c
  4773  00715A  EFB9  F038         	goto	l2068
  4774  00715E                     l2066:
  4775  00715E  90D8               	bcf	status,0,c
  4776  007160  3609               	rlcf	___aodiv@divisor^0,f,c
  4777  007162  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  4778  007164  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  4779  007166  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  4780  007168  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  4781  00716A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  4782  00716C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  4783  00716E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  4784  007170  2A11               	incf	___aodiv@counter^0,f,c
  4785  007172                     l2068:
  4786  007172  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  4787  007174  EFBE  F038         	goto	u931
  4788  007178  EFC0  F038         	goto	u930
  4789  00717C                     u931:
  4790  00717C  EFAF  F038         	goto	l2066
  4791  007180                     u930:
  4792  007180                     l2070:
  4793  007180  90D8               	bcf	status,0,c
  4794  007182  3613               	rlcf	___aodiv@quotient^0,f,c
  4795  007184  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  4796  007186  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  4797  007188  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  4798  00718A  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  4799  00718C  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  4800  00718E  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  4801  007190  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  4802  007192  5009               	movf	___aodiv@divisor^0,w,c
  4803  007194  5C01               	subwf	___aodiv@dividend^0,w,c
  4804  007196  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4805  007198  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  4806  00719A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4807  00719C  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  4808  00719E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4809  0071A0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  4810  0071A2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4811  0071A4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  4812  0071A6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4813  0071A8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  4814  0071AA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4815  0071AC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  4816  0071AE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4817  0071B0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  4818  0071B2  A0D8               	btfss	status,0,c
  4819  0071B4  EFDE  F038         	goto	u941
  4820  0071B8  EFE0  F038         	goto	u940
  4821  0071BC                     u941:
  4822  0071BC  EFF1  F038         	goto	l2078
  4823  0071C0                     u940:
  4824  0071C0  5009               	movf	___aodiv@divisor^0,w,c
  4825  0071C2  5E01               	subwf	___aodiv@dividend^0,f,c
  4826  0071C4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4827  0071C6  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  4828  0071C8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4829  0071CA  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  4830  0071CC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4831  0071CE  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  4832  0071D0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4833  0071D2  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  4834  0071D4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4835  0071D6  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  4836  0071D8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4837  0071DA  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  4838  0071DC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4839  0071DE  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  4840  0071E0  8013               	bsf	___aodiv@quotient^0,0,c
  4841  0071E2                     l2078:
  4842  0071E2  90D8               	bcf	status,0,c
  4843  0071E4  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  4844  0071E6  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  4845  0071E8  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  4846  0071EA  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  4847  0071EC  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  4848  0071EE  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  4849  0071F0  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  4850  0071F2  3209               	rrcf	___aodiv@divisor^0,f,c
  4851  0071F4  2E11               	decfsz	___aodiv@counter^0,f,c
  4852  0071F6  EFC0  F038         	goto	l2070
  4853  0071FA                     l2082:
  4854  0071FA  5012               	movf	___aodiv@sign^0,w,c
  4855  0071FC  B4D8               	btfsc	status,2,c
  4856  0071FE  EF03  F039         	goto	u951
  4857  007202  EF05  F039         	goto	u950
  4858  007206                     u951:
  4859  007206  EF15  F039         	goto	l2086
  4860  00720A                     u950:
  4861  00720A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  4862  00720C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  4863  00720E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  4864  007210  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  4865  007212  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  4866  007214  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  4867  007216  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  4868  007218  6C13               	negf	___aodiv@quotient^0,c
  4869  00721A  0E00               	movlw	0
  4870  00721C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  4871  00721E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  4872  007220  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  4873  007222  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  4874  007224  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  4875  007226  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  4876  007228  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  4877  00722A                     l2086:
  4878  00722A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4879  00722E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4880  007232  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4881  007236  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4882  00723A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4883  00723E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4884  007242  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4885  007246  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4886  00724A  0012               	return		;funcret
  4887  00724C                     __end_of___aodiv:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function _SPI_Open *****************
  4891 ;; Defined at:
  4892 ;;		line 72 in file "mcc_generated_files/spi.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  spiUniqueCon    1    wreg     enum E355
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;  spiUniqueCon    1    1[COMRAM] enum E355
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  1    wreg      _Bool 
  4899 ;; Registers used:
  4900 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4906 ;;      Params:         0       0       0       0       0       0       0
  4907 ;;      Locals:         1       0       0       0       0       0       0
  4908 ;;      Temps:          1       0       0       0       0       0       0
  4909 ;;      Totals:         2       0       0       0       0       0       0
  4910 ;;Total ram usage:        2 bytes
  4911 ;; Hardware stack levels used: 1
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_demo
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text27
  4920  006AC0                     __ptext27:
  4921                           	callstack 0
  4922  006AC0                     _SPI_Open:
  4923                           	callstack 29
  4924                           
  4925                           ;incstack = 0
  4926                           ;SPI_Open@spiUniqueConfiguration stored from wreg
  4927  006AC0  6E02               	movwf	SPI_Open@spiUniqueConfiguration^0,c
  4928  006AC2                     
  4929                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
  4930  006AC2  BAC6               	btfsc	198,5,c	;volatile
  4931  006AC4  EF66  F035         	goto	u1411
  4932  006AC8  EF68  F035         	goto	u1410
  4933  006ACC                     u1411:
  4934  006ACC  EFAB  F035         	goto	l79
  4935  006AD0                     u1410:
  4936  006AD0                     
  4937                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
  4938  006AD0  5002               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
  4939  006AD2  0D04               	mullw	4
  4940  006AD4  0E01               	movlw	1
  4941  006AD6  26F3               	addwf	243,f,c
  4942  006AD8  0E00               	movlw	0
  4943  006ADA  22F4               	addwfc	244,f,c
  4944  006ADC  0E24               	movlw	low _spi_configuration
  4945  006ADE  24F3               	addwf	243,w,c
  4946  006AE0  6EF6               	movwf	tblptrl,c
  4947  006AE2  0E7D               	movlw	high _spi_configuration
  4948  006AE4  20F4               	addwfc	244,w,c
  4949  006AE6  6EF7               	movwf	tblptrh,c
  4950  006AE8                     	if	0	;There are less than 3 active tblptr bytes
  4951  006AE8                     	endif
  4952  006AE8  0008               	tblrd		*
  4953  006AEA  CFF5 FFC7          	movff	tablat,4039	;volatile
  4954                           
  4955                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
  4956  006AEE  5002               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
  4957  006AF0  0D04               	mullw	4
  4958  006AF2  0E24               	movlw	low _spi_configuration
  4959  006AF4  24F3               	addwf	243,w,c
  4960  006AF6  6EF6               	movwf	tblptrl,c
  4961  006AF8  0E7D               	movlw	high _spi_configuration
  4962  006AFA  20F4               	addwfc	244,w,c
  4963  006AFC  6EF7               	movwf	tblptrh,c
  4964  006AFE                     	if	0	;There are less than 3 active tblptr bytes
  4965  006AFE                     	endif
  4966  006AFE  0008               	tblrd		*
  4967  006B00  CFF5 FFC6          	movff	tablat,4038	;volatile
  4968  006B04                     
  4969                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
  4970  006B04  0E00               	movlw	0
  4971  006B06  6EC5               	movwf	197,c	;volatile
  4972  006B08                     
  4973                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
  4974  006B08  5002               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
  4975  006B0A  0D04               	mullw	4
  4976  006B0C  0E02               	movlw	2
  4977  006B0E  26F3               	addwf	243,f,c
  4978  006B10  0E00               	movlw	0
  4979  006B12  22F4               	addwfc	244,f,c
  4980  006B14  0E24               	movlw	low _spi_configuration
  4981  006B16  24F3               	addwf	243,w,c
  4982  006B18  6EF6               	movwf	tblptrl,c
  4983  006B1A  0E7D               	movlw	high _spi_configuration
  4984  006B1C  20F4               	addwfc	244,w,c
  4985  006B1E  6EF7               	movwf	tblptrh,c
  4986  006B20                     	if	0	;There are less than 3 active tblptr bytes
  4987  006B20                     	endif
  4988  006B20  0008               	tblrd		*
  4989  006B22  CFF5 FFC8          	movff	tablat,4040	;volatile
  4990  006B26                     
  4991                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
  4992  006B26  5002               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
  4993  006B28  0D04               	mullw	4
  4994  006B2A  0E03               	movlw	3
  4995  006B2C  26F3               	addwf	243,f,c
  4996  006B2E  0E00               	movlw	0
  4997  006B30  22F4               	addwfc	244,f,c
  4998  006B32  0E24               	movlw	low _spi_configuration
  4999  006B34  24F3               	addwf	243,w,c
  5000  006B36  6EF6               	movwf	tblptrl,c
  5001  006B38  0E7D               	movlw	high _spi_configuration
  5002  006B3A  20F4               	addwfc	244,w,c
  5003  006B3C  6EF7               	movwf	tblptrh,c
  5004  006B3E                     	if	0	;There are less than 3 active tblptr bytes
  5005  006B3E                     	endif
  5006  006B3E  0008               	tblrd		*
  5007  006B40  CFF5 F001          	movff	tablat,??_SPI_Open
  5008  006B44  4601               	rlncf	??_SPI_Open^0,f,c
  5009  006B46  4601               	rlncf	??_SPI_Open^0,f,c
  5010  006B48  4601               	rlncf	??_SPI_Open^0,f,c
  5011  006B4A  5094               	movf	148,w,c	;volatile
  5012  006B4C  1801               	xorwf	??_SPI_Open^0,w,c
  5013  006B4E  0BF7               	andlw	-9
  5014  006B50  1801               	xorwf	??_SPI_Open^0,w,c
  5015  006B52  6E94               	movwf	148,c	;volatile
  5016  006B54                     
  5017                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
  5018  006B54  8AC6               	bsf	198,5,c	;volatile
  5019  006B56                     l79:
  5020  006B56  0012               	return		;funcret
  5021  006B58                     __end_of_SPI_Open:
  5022                           	callstack 0
  5023                           
  5024 ;; *************** function _SYSTEM_Initialize *****************
  5025 ;; Defined at:
  5026 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;		None
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;		None
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  1    wreg      void 
  5033 ;; Registers used:
  5034 ;;		wreg, status,2, cstack
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5040 ;;      Params:         0       0       0       0       0       0       0
  5041 ;;      Locals:         0       0       0       0       0       0       0
  5042 ;;      Temps:          0       0       0       0       0       0       0
  5043 ;;      Totals:         0       0       0       0       0       0       0
  5044 ;;Total ram usage:        0 bytes
  5045 ;; Hardware stack levels used: 1
  5046 ;; Hardware stack levels required when called: 1
  5047 ;; This function calls:
  5048 ;;		_OSCILLATOR_Initialize
  5049 ;;		_PIN_MANAGER_Initialize
  5050 ;;		_SPI_Initialize
  5051 ;;		_TMR2_Initialize
  5052 ;; This function is called by:
  5053 ;;		_main
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text28
  5058  006746                     __ptext28:
  5059                           	callstack 0
  5060  006746                     _SYSTEM_Initialize:
  5061                           	callstack 29
  5062  006746                     
  5063                           ;mcc_generated_files/mcc.c: 53:     SPI_Initialize();
  5064  006746  EC9A  F033         	call	_SPI_Initialize	;wreg free
  5065                           
  5066                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5067  00674A  ECEC  F033         	call	_PIN_MANAGER_Initialize	;wreg free
  5068                           
  5069                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5070  00674E  EC7C  F033         	call	_OSCILLATOR_Initialize	;wreg free
  5071                           
  5072                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  5073  006752  EC8C  F033         	call	_TMR2_Initialize	;wreg free
  5074  006756  0012               	return		;funcret
  5075  006758                     __end_of_SYSTEM_Initialize:
  5076                           	callstack 0
  5077                           
  5078 ;; *************** function _TMR2_Initialize *****************
  5079 ;; Defined at:
  5080 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;		None
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;		None
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  1    wreg      void 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5094 ;;      Params:         0       0       0       0       0       0       0
  5095 ;;      Locals:         0       0       0       0       0       0       0
  5096 ;;      Temps:          0       0       0       0       0       0       0
  5097 ;;      Totals:         0       0       0       0       0       0       0
  5098 ;;Total ram usage:        0 bytes
  5099 ;; Hardware stack levels used: 1
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_SYSTEM_Initialize
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text29
  5108  006718                     __ptext29:
  5109                           	callstack 0
  5110  006718                     _TMR2_Initialize:
  5111                           	callstack 29
  5112  006718                     
  5113                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  5114  006718  68CB               	setf	203,c	;volatile
  5115  00671A                     
  5116                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  5117  00671A  0E00               	movlw	0
  5118  00671C  6ECC               	movwf	204,c	;volatile
  5119  00671E                     
  5120                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  5121  00671E  929E               	bcf	158,1,c	;volatile
  5122                           
  5123                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x00;
  5124  006720  0E00               	movlw	0
  5125  006722  6ECA               	movwf	202,c	;volatile
  5126  006724  0012               	return		;funcret
  5127  006726                     __end_of_TMR2_Initialize:
  5128                           	callstack 0
  5129                           
  5130 ;; *************** function _SPI_Initialize *****************
  5131 ;; Defined at:
  5132 ;;		line 62 in file "mcc_generated_files/spi.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;		None
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;		None
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      void 
  5139 ;; Registers used:
  5140 ;;		wreg, status,2
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5146 ;;      Params:         0       0       0       0       0       0       0
  5147 ;;      Locals:         0       0       0       0       0       0       0
  5148 ;;      Temps:          0       0       0       0       0       0       0
  5149 ;;      Totals:         0       0       0       0       0       0       0
  5150 ;;Total ram usage:        0 bytes
  5151 ;; Hardware stack levels used: 1
  5152 ;; This function calls:
  5153 ;;		Nothing
  5154 ;; This function is called by:
  5155 ;;		_SYSTEM_Initialize
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           	psect	text30
  5160  006734                     __ptext30:
  5161                           	callstack 0
  5162  006734                     _SPI_Initialize:
  5163                           	callstack 29
  5164  006734                     
  5165                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
  5166  006734  0E40               	movlw	64
  5167  006736  6EC7               	movwf	199,c	;volatile
  5168                           
  5169                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x01;
  5170  006738  0E01               	movlw	1
  5171  00673A  6EC6               	movwf	198,c	;volatile
  5172                           
  5173                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
  5174  00673C  0E01               	movlw	1
  5175  00673E  6EC8               	movwf	200,c	;volatile
  5176  006740                     
  5177                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
  5178  006740  9694               	bcf	148,3,c	;volatile
  5179  006742                     
  5180                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
  5181  006742  9AC6               	bcf	198,5,c	;volatile
  5182  006744  0012               	return		;funcret
  5183  006746                     __end_of_SPI_Initialize:
  5184                           	callstack 0
  5185                           
  5186 ;; *************** function _PIN_MANAGER_Initialize *****************
  5187 ;; Defined at:
  5188 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;		None
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;		None
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      void 
  5195 ;; Registers used:
  5196 ;;		wreg, status,2
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5202 ;;      Params:         0       0       0       0       0       0       0
  5203 ;;      Locals:         0       0       0       0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0       0
  5205 ;;      Totals:         0       0       0       0       0       0       0
  5206 ;;Total ram usage:        0 bytes
  5207 ;; Hardware stack levels used: 1
  5208 ;; This function calls:
  5209 ;;		Nothing
  5210 ;; This function is called by:
  5211 ;;		_SYSTEM_Initialize
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           	psect	text31
  5216  0067D8                     __ptext31:
  5217                           	callstack 0
  5218  0067D8                     _PIN_MANAGER_Initialize:
  5219                           	callstack 29
  5220  0067D8                     
  5221                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  5222  0067D8  0E00               	movlw	0
  5223  0067DA  6E8D               	movwf	141,c	;volatile
  5224                           
  5225                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  5226  0067DC  0E00               	movlw	0
  5227  0067DE  6E8C               	movwf	140,c	;volatile
  5228                           
  5229                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  5230  0067E0  0E00               	movlw	0
  5231  0067E2  6E89               	movwf	137,c	;volatile
  5232                           
  5233                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  5234  0067E4  0E00               	movlw	0
  5235  0067E6  6E8A               	movwf	138,c	;volatile
  5236                           
  5237                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  5238  0067E8  0E00               	movlw	0
  5239  0067EA  6E8B               	movwf	139,c	;volatile
  5240                           
  5241                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  5242  0067EC  0E07               	movlw	7
  5243  0067EE  6E96               	movwf	150,c	;volatile
  5244  0067F0                     
  5245                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  5246  0067F0  6892               	setf	146,c	;volatile
  5247  0067F2                     
  5248                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  5249  0067F2  6893               	setf	147,c	;volatile
  5250                           
  5251                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xD7;
  5252  0067F4  0ED7               	movlw	215
  5253  0067F6  6E94               	movwf	148,c	;volatile
  5254                           
  5255                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x78;
  5256  0067F8  0E78               	movlw	120
  5257  0067FA  6E95               	movwf	149,c	;volatile
  5258  0067FC                     
  5259                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  5260  0067FC  687E               	setf	126,c	;volatile
  5261                           
  5262                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  5263  0067FE  0E1F               	movlw	31
  5264  006800  6E7F               	movwf	127,c	;volatile
  5265                           
  5266                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  5267  006802  0E00               	movlw	0
  5268  006804  6E7C               	movwf	124,c	;volatile
  5269  006806                     
  5270                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  5271  006806  8EF1               	bsf	241,7,c	;volatile
  5272  006808  0012               	return		;funcret
  5273  00680A                     __end_of_PIN_MANAGER_Initialize:
  5274                           	callstack 0
  5275                           
  5276 ;; *************** function _OSCILLATOR_Initialize *****************
  5277 ;; Defined at:
  5278 ;;		line 59 in file "mcc_generated_files/mcc.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;		None
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;		None
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg, status,2
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5292 ;;      Params:         0       0       0       0       0       0       0
  5293 ;;      Locals:         0       0       0       0       0       0       0
  5294 ;;      Temps:          0       0       0       0       0       0       0
  5295 ;;      Totals:         0       0       0       0       0       0       0
  5296 ;;Total ram usage:        0 bytes
  5297 ;; Hardware stack levels used: 1
  5298 ;; This function calls:
  5299 ;;		Nothing
  5300 ;; This function is called by:
  5301 ;;		_SYSTEM_Initialize
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text32
  5306  0066F8                     __ptext32:
  5307                           	callstack 0
  5308  0066F8                     _OSCILLATOR_Initialize:
  5309                           	callstack 29
  5310  0066F8                     
  5311                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  5312  0066F8  0E70               	movlw	112
  5313  0066FA  6ED3               	movwf	211,c	;volatile
  5314                           
  5315                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x40;
  5316  0066FC  0E40               	movlw	64
  5317  0066FE  6E9B               	movwf	155,c	;volatile
  5318  006700  0012               	return		;funcret
  5319  006702                     __end_of_OSCILLATOR_Initialize:
  5320                           	callstack 0
  5321                           
  5322                           	psect	rparam
  5323  0000                     
  5324                           	psect	idloc
  5325                           
  5326                           ;Config register IDLOC0 @ 0x200000
  5327                           ;	unspecified, using default values
  5328  200000                     	org	2097152
  5329  200000  FF                 	db	255
  5330                           
  5331                           ;Config register IDLOC1 @ 0x200001
  5332                           ;	unspecified, using default values
  5333  200001                     	org	2097153
  5334  200001  FF                 	db	255
  5335                           
  5336                           ;Config register IDLOC2 @ 0x200002
  5337                           ;	unspecified, using default values
  5338  200002                     	org	2097154
  5339  200002  FF                 	db	255
  5340                           
  5341                           ;Config register IDLOC3 @ 0x200003
  5342                           ;	unspecified, using default values
  5343  200003                     	org	2097155
  5344  200003  FF                 	db	255
  5345                           
  5346                           ;Config register IDLOC4 @ 0x200004
  5347                           ;	unspecified, using default values
  5348  200004                     	org	2097156
  5349  200004  FF                 	db	255
  5350                           
  5351                           ;Config register IDLOC5 @ 0x200005
  5352                           ;	unspecified, using default values
  5353  200005                     	org	2097157
  5354  200005  FF                 	db	255
  5355                           
  5356                           ;Config register IDLOC6 @ 0x200006
  5357                           ;	unspecified, using default values
  5358  200006                     	org	2097158
  5359  200006  FF                 	db	255
  5360                           
  5361                           ;Config register IDLOC7 @ 0x200007
  5362                           ;	unspecified, using default values
  5363  200007                     	org	2097159
  5364  200007  FF                 	db	255
  5365                           
  5366                           	psect	config
  5367                           
  5368                           ; Padding undefined space
  5369  300000                     	org	3145728
  5370  300000  FF                 	db	255
  5371                           
  5372                           ;Config register CONFIG1H @ 0x300001
  5373                           ;	Oscillator Selection bits
  5374                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  5375                           ;	Fail-Safe Clock Monitor Enable bit
  5376                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5377                           ;	Internal/External Oscillator Switchover bit
  5378                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5379  300001                     	org	3145729
  5380  300001  08                 	db	8
  5381                           
  5382                           ;Config register CONFIG2L @ 0x300002
  5383                           ;	Power-up Timer Enable bit
  5384                           ;	PWRT = OFF, PWRT disabled
  5385                           ;	Brown-out Reset Enable bits
  5386                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5387                           ;	Brown Out Reset Voltage bits
  5388                           ;	BORV = 18, VBOR set to 1.8 V nominal
  5389  300002                     	org	3145730
  5390  300002  1F                 	db	31
  5391                           
  5392                           ;Config register CONFIG2H @ 0x300003
  5393                           ;	Watchdog Timer Enable bit
  5394                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  5395                           ;	Watchdog Timer Postscale Select bits
  5396                           ;	WDTPS = 32768, 1:32768
  5397  300003                     	org	3145731
  5398  300003  1E                 	db	30
  5399                           
  5400                           ; Padding undefined space
  5401  300004                     	org	3145732
  5402  300004  FF                 	db	255
  5403                           
  5404                           ;Config register CONFIG3H @ 0x300005
  5405                           ;	CCP2 MUX bit
  5406                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5407                           ;	PORTB A/D Enable bit
  5408                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5409                           ;	Low-Power Timer1 Oscillator Enable bit
  5410                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5411                           ;	HFINTOSC Fast Start-up
  5412                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  5413                           ;	MCLR Pin Enable bit
  5414                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5415  300005                     	org	3145733
  5416  300005  0B                 	db	11
  5417                           
  5418                           ;Config register CONFIG4L @ 0x300006
  5419                           ;	Stack Full/Underflow Reset Enable bit
  5420                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5421                           ;	Single-Supply ICSP Enable bit
  5422                           ;	LVP = OFF, Single-Supply ICSP disabled
  5423                           ;	Extended Instruction Set Enable bit
  5424                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5425                           ;	Background Debugger Enable bit
  5426                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5427  300006                     	org	3145734
  5428  300006  81                 	db	129
  5429                           
  5430                           ; Padding undefined space
  5431  300007                     	org	3145735
  5432  300007  FF                 	db	255
  5433                           
  5434                           ;Config register CONFIG5L @ 0x300008
  5435                           ;	Code Protection Block 0
  5436                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5437                           ;	Code Protection Block 1
  5438                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5439                           ;	Code Protection Block 2
  5440                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5441                           ;	Code Protection Block 3
  5442                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5443  300008                     	org	3145736
  5444  300008  0F                 	db	15
  5445                           
  5446                           ;Config register CONFIG5H @ 0x300009
  5447                           ;	Boot Block Code Protection bit
  5448                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5449                           ;	Data EEPROM Code Protection bit
  5450                           ;	CPD = OFF, Data EEPROM not code-protected
  5451  300009                     	org	3145737
  5452  300009  C0                 	db	192
  5453                           
  5454                           ;Config register CONFIG6L @ 0x30000A
  5455                           ;	Write Protection Block 0
  5456                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5457                           ;	Write Protection Block 1
  5458                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5459                           ;	Write Protection Block 2
  5460                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5461                           ;	Write Protection Block 3
  5462                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5463  30000A                     	org	3145738
  5464  30000A  0F                 	db	15
  5465                           
  5466                           ;Config register CONFIG6H @ 0x30000B
  5467                           ;	Configuration Register Write Protection bit
  5468                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5469                           ;	Boot Block Write Protection bit
  5470                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5471                           ;	Data EEPROM Write Protection bit
  5472                           ;	WRTD = OFF, Data EEPROM not write-protected
  5473  30000B                     	org	3145739
  5474  30000B  E0                 	db	224
  5475                           
  5476                           ;Config register CONFIG7L @ 0x30000C
  5477                           ;	Table Read Protection Block 0
  5478                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5479                           ;	Table Read Protection Block 1
  5480                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5481                           ;	Table Read Protection Block 2
  5482                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5483                           ;	Table Read Protection Block 3
  5484                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5485  30000C                     	org	3145740
  5486  30000C  0F                 	db	15
  5487                           
  5488                           ;Config register CONFIG7H @ 0x30000D
  5489                           ;	Boot Block Table Read Protection bit
  5490                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5491  30000D                     	org	3145741
  5492  30000D  40                 	db	64
  5493                           tosu	equ	0xFFF
  5494                           tosh	equ	0xFFE
  5495                           tosl	equ	0xFFD
  5496                           stkptr	equ	0xFFC
  5497                           pclatu	equ	0xFFB
  5498                           pclath	equ	0xFFA
  5499                           pcl	equ	0xFF9
  5500                           tblptru	equ	0xFF8
  5501                           tblptrh	equ	0xFF7
  5502                           tblptrl	equ	0xFF6
  5503                           tablat	equ	0xFF5
  5504                           prodh	equ	0xFF4
  5505                           prodl	equ	0xFF3
  5506                           indf0	equ	0xFEF
  5507                           postinc0	equ	0xFEE
  5508                           postdec0	equ	0xFED
  5509                           preinc0	equ	0xFEC
  5510                           plusw0	equ	0xFEB
  5511                           fsr0h	equ	0xFEA
  5512                           fsr0l	equ	0xFE9
  5513                           wreg	equ	0xFE8
  5514                           indf1	equ	0xFE7
  5515                           postinc1	equ	0xFE6
  5516                           postdec1	equ	0xFE5
  5517                           preinc1	equ	0xFE4
  5518                           plusw1	equ	0xFE3
  5519                           fsr1h	equ	0xFE2
  5520                           fsr1l	equ	0xFE1
  5521                           bsr	equ	0xFE0
  5522                           indf2	equ	0xFDF
  5523                           postinc2	equ	0xFDE
  5524                           postdec2	equ	0xFDD
  5525                           preinc2	equ	0xFDC
  5526                           plusw2	equ	0xFDB
  5527                           fsr2h	equ	0xFDA
  5528                           fsr2l	equ	0xFD9
  5529                           status	equ	0xFD8

Data Sizes:
    Strings     19
    Constant    483
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     24      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), demo@idString(BANK0[8]), STR_1(CODE[13]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), demo@idString(BANK0[8]), STR_1(CODE[13]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> demo@idString(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1024$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1024$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    tftstDrawText@_text	PTR unsigned char  size(2) Largest target is 13
		 -> demo@idString(BANK0[8]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_demo
    _demo->_sprintf
    _tftstReadId->_tftstWriteData
    _tftstInit->_tftstWriteCommand
    _tftstInit->_tftstWriteData
    _tftstFillScreen->_tftstSetWindow
    _tftstDrawText->_tftstDrawChar
    _tftstDrawChar->_tftstFillRect
    _tftstFillRect->_tftstSetWindow
    _tftstDrawPixel->_tftstSetWindow
    _tftstDrawHorizontalLine->_tftstSetWindow
    _tftstWriteColor->_tftstWriteData
    _tftstSetWindow->_tftstWriteCommand
    _tftstSetWindow->_tftstWriteData
    _tftstWriteData->_SPI_ExchangeByte
    _tftstWriteCommand->_SPI_ExchangeByte
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod

Critical Paths under _main in BANK0

    _main->_demo
    _demo->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   19683
                  _SYSTEM_Initialize
                               _demo
 ---------------------------------------------------------------------------------
 (1) _demo                                                13    13      0   19683
                                             93 COMRAM     2     2      0
                                             13 BANK0     11    11      0
                           _SPI_Open
                            _sprintf
            _tftstDrawHorizontalLine
                      _tftstDrawText
                    _tftstFillScreen
                          _tftstInit
                        _tftstReadId
 ---------------------------------------------------------------------------------
 (2) _tftstReadId                                          1     1      0      89
                                              2 COMRAM     1     1      0
                   _SPI_ExchangeByte
                     _tftstWriteData
 ---------------------------------------------------------------------------------
 (2) _tftstInit                                            1     1      0      88
                                              2 COMRAM     1     1      0
                  _tftstWriteCommand
                     _tftstWriteData
 ---------------------------------------------------------------------------------
 (2) _tftstFillScreen                                      4     2      2    1981
                                              6 COMRAM     4     2      2
                     _tftstSetWindow
                    _tftstWriteColor
 ---------------------------------------------------------------------------------
 (2) _tftstDrawText                                       17     9      8    7755
                                             33 COMRAM    17     9      8
                             _strlen
                      _tftstDrawChar
 ---------------------------------------------------------------------------------
 (3) _tftstDrawChar                                       17    10      7    6259
                                             16 COMRAM    17    10      7
                     _tftstDrawPixel
                      _tftstFillRect
 ---------------------------------------------------------------------------------
 (4) _tftstFillRect                                       10     5      5    2638
                                              6 COMRAM    10     5      5
                     _tftstSetWindow
                    _tftstWriteColor
 ---------------------------------------------------------------------------------
 (4) _tftstDrawPixel                                       4     1      3    2198
                                              6 COMRAM     4     1      3
                     _tftstSetWindow
                    _tftstWriteColor
 ---------------------------------------------------------------------------------
 (2) _tftstDrawHorizontalLine                              6     2      4    2873
                                              6 COMRAM     6     2      4
                     _tftstSetWindow
                    _tftstWriteColor
 ---------------------------------------------------------------------------------
 (3) _tftstWriteColor                                      2     0      2     468
                                              2 COMRAM     2     0      2
                     _tftstWriteData
 ---------------------------------------------------------------------------------
 (3) _tftstSetWindow                                       4     1      3    1316
                                              2 COMRAM     4     1      3
                  _tftstWriteCommand
                     _tftstWriteData
 ---------------------------------------------------------------------------------
 (3) _tftstWriteData                                       1     1      0      44
                                              1 COMRAM     1     1      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _tftstWriteCommand                                    1     1      0      44
                                              1 COMRAM     1     1      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _SPI_ExchangeByte                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    6532
                                             87 COMRAM     6     0      6
                                              0 BANK0     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6181
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5827
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4434
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2785
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _SPI_Open                                             2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR2_Initialize
   _demo
     _SPI_Open
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
     _tftstDrawHorizontalLine
       _tftstSetWindow
         _tftstWriteCommand
           _SPI_ExchangeByte
         _tftstWriteData
           _SPI_ExchangeByte
       _tftstWriteColor
         _tftstWriteData
     _tftstDrawText
       _strlen
       _tftstDrawChar
         _tftstDrawPixel
           _tftstSetWindow
           _tftstWriteColor
         _tftstFillRect
           _tftstSetWindow
           _tftstWriteColor
     _tftstFillScreen
       _tftstSetWindow
       _tftstWriteColor
     _tftstInit
       _tftstWriteCommand
       _tftstWriteData
     _tftstReadId
       _SPI_ExchangeByte
       _tftstWriteData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      13        0.0%
BANK5               EF      0       0      14        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     18      40       4       40.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFR_1lh       26      0       0      21        0.0%
BITBIGSFRllll       1C      0       0      27        0.0%
BITBIGSFR_5h         9      0       0      15        0.0%
BITBIGSFRllh         9      0       0      25        0.0%
BITBIGSFR_1hh        6      0       0      20        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFRhh          4      0       0      23        0.0%
BITBIGSFRhll         4      0       0      24        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFRlllh        1      0       0      26        0.0%
BITBIGSFR_5l         1      0       0      16        0.0%
BITBIGSFR_1ll        1      0       0      22        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9F      28        0.0%
DATA                 0      0      9F      30        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Sep 30 12:34:45 2022

         __end_of_tftstDrawPixel 67D8                   _SPI_Initialize 6734  
                             l15 6756                               l18 6700  
                             l51 6808                               l75 6744  
                             l85 6788                               l79 6B56  
                             l87 6796                               l88 679A  
                            l200 67B4                              l213 6910  
                            l222 6956                              l231 6846  
                            l128 6724                              l216 6732  
                            l304 7864                              l225 67D6  
                            l246 6ABE                              l255 75FC  
                            l176 675A                              l264 7502  
                            l192 679C                              l257 745E  
                            l353 6714                              l186 676A  
                            l178 675C                              l283 6F5E  
                            l339 6CE8                              l189 670A  
                            l197 67A8                              l470 724A  
                            l296 75FE                              l483 70C2  
                            l299 7610                              _PR2 000FCB  
                            u810 6C30                              u811 6C2C  
                            u900 7108                              u820 6C42  
                            u901 7104                              u821 6C3E  
                            u830 6C6A                              u911 7132  
                            u831 6C66                              u920 7156  
                            u840 6CA0                              u921 7152  
                            u841 6C9C                              u930 7180  
                            u850 6796                              u931 717C  
                            u851 6792                              u940 71C0  
                            u860 6988                              u941 71BC  
                            u950 720A                              u870 6998  
                            u951 7206                              u871 6994  
                            u960 6F72                              u880 68CA  
                            u961 6F6E                              u881 68C6  
                            u890 70D6                              u970 6FA4  
                            u891 70D2                              u971 6FA0  
                            u867 697E                              u980 6FE2  
                            u981 6FDE                              u990 700C  
                            u991 7008                              _abs 6848  
                            _pad 6B58                  _TMR2_Initialize 6718  
                            wreg 000FE8                   _tftstWriteData 6702  
                 ?_tftstFillRect 0007                   ?_tftstDrawChar 0011  
                 ?_tftstDrawText 0022                             l1110 687E  
                           l1113 6886                             l1105 6A50  
                           l2010 6C6A                             l2002 6C1E  
                           l1106 6A58                             l1034 69F6  
                           ?_abs 0013                             l2100 6FA4  
                           l2012 6CA0                             l2004 6C30  
                           l2020 6964                             l1125 6CE6  
                           l1133 68CA                             l1061 6B9E  
                           l2110 700C                             l2102 6FC4  
                           l2006 6C42                             l2030 6894  
                           l1142 69A4                             l2022 6968  
                           l2120 7082                             l2112 703A  
                           l2104 6FE2                             l1136 66F6  
                           l2008 6C4C                             l2032 68A6  
                           l2024 6998                             l1064 6BE0  
                           l2200 7AC0                             l1072 7906  
                           l2016 6784                             l2040 6766  
                           l2050 70D6                             l2122 70A2  
                           l2114 705A                             l2106 6FEA  
                           l2034 68AA                             l2018 6958  
                           l1066 6C1C                             l2130 6B7C  
                           l2210 7B06                             l2202 7AD2  
                           l1074 790E                             l2042 6768  
                           l1500 66F8                             l2060 712C  
                           l2052 70F6                             l2116 706C  
                           l2108 6FFE                             l2028 6888  
                           l2140 6BC2                             l2132 6B8A  
                           l1092 7B46                             l2212 7B0E  
                           l2204 7AE2                             l2036 675E  
                           l2044 6704                             l2220 67CA  
                           l2300 7472                             l1502 6718  
                           l2070 7180                             l2062 7138  
                           l2054 70FA                             l2046 70C4  
                           l2118 7072                             l2150 6862  
                           l2142 6BF0                             l2134 6B96  
                           l2126 6B58                             l2206 7AE8  
                           l2214 7B1E                             l2038 6764  
                           l2230 6A96                             l2222 6A5C  
                           l2310 7510                             l2302 74BA  
                           l1504 671A                             l2080 71F4  
                           l2072 7192                             l2064 7156  
                           l2056 7108                             l2048 70C8  
                           l2144 6C04                             l2136 6BAA  
                           l2128 6B68                             l2208 7AFA  
                           l2160 78AE                             l2240 7270  
                           l2152 68CE                             l2232 6A98  
                           l2224 6A7A                             l2320 758C  
                           l2312 7520                             l2304 74FE  
                           l2400 6E96                             l1506 671E  
                           l2074 71C0                             l2066 715E  
                           l2082 71FA                             l2058 7128  
                           l2090 6F60                             l2138 6BBE  
                           l2170 7916                             l2162 78CE  
                           l2250 72DC                             l2242 727E  
                           l2154 6726                             l2218 67B8  
                           l2234 6AAA                             l2226 6A82  
                           l2330 75E6                             l2322 75A6  
                           l2314 753A                             l2410 6F30  
                           l2402 6E9A                             l1099 73FE  
                           l2084 720A                             l2076 71E0  
                           l2068 7172                             l2092 6F64  
                           l2148 6848                             l2180 794C  
                           l2172 7928                             l2164 78DE  
                           l2156 7866                             l2260 738E  
                           l2252 7324                             l2244 7290  
                           l2340 6A34                             l2228 6A8A  
                           l2236 6AAC                             l2332 75E8  
                           l2324 75CC                             l2316 7564  
                           l2412 6F40                             l2500 771A  
                           l2420 760E                             l2350 6B26  
                           l2342 6AC2                             l2086 722A  
                           l2078 71E2                             l2094 6F72  
                           l2182 7952                             l2190 7A44  
                           l2174 7936                             l2166 78E0  
                           l2158 7886                             l2262 73A2  
                           l2246 7294                             l2238 724C  
                           l2334 69F8                             l2326 75CE  
                           l2318 757C                             l2414 6F44  
                           l2406 6EDA                             l2510 7738  
                           l2502 7720                             l2430 7648  
                           l2422 761E                             l2352 6B54  
                           l2344 6AD0                             l2096 6F92  
                           l2192 7A5E                             l2184 79D4  
                           l2176 793C                             l2168 78FA  
                           l2256 735C                             l2248 72B8  
                           l2272 73C8                             l2336 6A00  
                           l2328 75D2                             l2280 7402  
                           l2408 6F26                             l2416 6F48  
                           l2600 7854                             l2520 7756  
                           l2512 773E                             l2504 7726  
                           l2440 7666                             l2432 764E  
                           l2424 7620                             l2360 67A6  
                           l1490 67D8                             l2346 6B04  
                           l2098 6F96                             l2194 7A7C  
                           l2186 79DA                             l2178 7944  
                           l2274 73EC                             l2258 7380  
                           l2266 73AE                             l2338 6A0E  
                           l2290 744A                             l2282 7412  
                           l2370 691A                             l2602 7862  
                           l2530 7774                             l2522 775C  
                           l2514 7744                             l2506 772C  
                           l2450 7684                             l2442 766C  
                           l2434 7654                             l2426 7626  
                           l2418 7600                             l2362 67B0  
                           l1492 67F0                             l1484 6734  
                           l2348 6B08                             l2196 7A96  
                           l2188 79E0                             l2268 73BC  
                           l2620 69C8                             l2380 6828  
                           l2292 745A                             l2284 7426  
                           l2372 6930                             l2540 7792  
                           l2532 777A                             l2524 7762  
                           l2516 774A                             l2508 7732  
                           l2460 76A2                             l2452 768A  
                           l2444 7672                             l2436 765A  
                           l2428 763A                             l2364 67B2  
                           l2356 679E                             l1494 67F2  
                           l1486 6740                             l2198 7AB0  
                           l2622 69E4                             l2614 69A6  
                           l2382 6834                             l2286 7436  
                           l2390 6E3A                             l2374 693C  
                           l2550 77B0                             l2542 7798  
                           l2534 7780                             l2526 7768  
                           l2518 7750                             l2470 76C0  
                           l2462 76A8                             l2454 7690  
                           l2446 7678                             l2438 7660  
                           l2358 67A4                             l1496 67FC  
                           l1488 6742                             l2616 69B8  
                           l2376 680C                             l2288 743A  
                           l2392 6E46                             l2384 6E1E  
                           l2368 6912                             l2560 77CE  
                           l2552 77B6                             l2544 779E  
                           l2536 7786                             l2528 776E  
                           l2480 76DE                             l2472 76C6  
                           l2464 76AE                             l2456 7696  
                           l2448 767E                             l1498 6806  
                           l2618 69C0                             l2378 6820  
                           l2298 7462                             l2394 6E76  
                           l2386 6E22                             l2570 77EC  
                           l2562 77D4                             l2554 77BC  
                           l2546 77A4                             l2538 778C  
                           l2490 76FC                             l2482 76E4  
                           l2474 76CC                             l2466 76B4  
                           l2458 769C                             l2730 6D0A  
                           l2396 6E7A                             l2388 6E26  
                           l2580 780A                             l2572 77F2  
                           l2564 77DA                             l2556 77C2  
                           l2548 77AA                             l2492 7702  
                           l2484 76EA                             l2476 76D2  
                           l2468 76BA                             l2740 6D3C  
                           l2732 6D0E                             l2398 6E86  
                           l2590 7828                             l2582 7810  
                           l2574 77F8                             l2566 77E0  
                           l2558 77C8                             l2494 7708  
                           l2486 76F0                             l2478 76D8  
                           l2750 6DA4                             l2742 6D62  
                           l2734 6D1A                             l2726 6CEA  
                           l1792 6746                             l2592 782E  
                           l2584 7816                             l2576 77FE  
                           l2568 77E6                             l2496 770E  
                           l2488 76F6                             l2760 6DF2  
                           l2752 6DA6                             l2744 6D7C  
                           l2736 6D20                             l2728 6CF0  
                           l2594 7834                             l2586 781C  
                           l2578 7804                             l2498 7714  
                           l2762 6E06                             l2754 6DAA  
                           l2746 6D82                             l2738 6D24  
                           l2596 783A                             l2588 7822  
                           l2764 6E0A                             l2756 6DB2  
                           l2748 6D92                             l2598 7840  
                           l2758 6DCC                             ?_pad 0011  
                           l2796 670C                             l2798 6710  
                           STR_1 7D2C                             STR_2 7D39  
                           u1000 703A                             u1001 7036  
                           u1010 7082                             u1011 707E  
                           u1020 6B68                             u1100 78DE  
                           u1021 6B64                             u1101 78DA  
                           u1030 6B8A                             u1110 78FA  
                           u1031 6B86                             u1111 78F6  
                           u1040 6BE0                             u1200 7AE2  
                           u1120 7928                             u1041 6BDC  
                           u1201 7ADE                             u1121 7924  
                           u1050 6BF0                             u1210 7AFA  
                           u1130 7936                             u1051 6BEC  
                           u1211 7AF6                             u1131 7932  
                           u1060 6862                             u1140 7A5E  
                           u1220 6AAA                             u1300 7436  
                           u1061 685E                             u1141 7A5A  
                           u1221 6AA6                             u1301 7432  
                           u1150 7A7C                             u1070 7896  
                           u1230 6ABE                             u1310 744A  
                           u1151 7A78                             u1071 7890  
                           u1231 6ABA                             u1311 7446  
                           u1160 7A96                             u1080 7898  
                           u1240 7270                             u1400 6A50  
                           u1320 745A                             u1161 7A92  
                           u1241 726C                             u1401 6A4C  
                           u1321 7456                             u1410 6AD0  
                           u1170 7AB0                             u1090 78AE  
                           u1250 72B8                             u1330 7472  
                           u1411 6ACC                             u1171 7AAC  
                           u1091 78AA                             u1251 72B4  
                           u1331 746E                             u1180 7AC0  
                           u1260 72DC                             u1340 7510  
                           u1500 6F5E                             u1420 6956  
                           u1181 7ABC                             u1261 72D8  
                           u1341 750C                             u1501 6F5A  
                           u1421 6952                             _LATA 000F89  
                           u1190 7AD2                             u1270 7380  
                           u1430 6846                             u1350 7520  
                           _LATB 000F8A                             u1191 7ACE  
                           u1271 737C                             u1431 6842  
                           u1351 751C                             _LATC 000F8B  
                           u1360 757C                             u1280 7412  
                           u1440 6E76                             u1520 6D92  
                           _LATD 000F8C                             u1361 7578  
                           u1281 740E                             u1441 6E72  
                           u1521 6D8E                             _LATE 000F8D  
                           u1370 758C                             u1290 7422  
                           u1450 6E96                             u1530 6DA4  
                           u1371 7588                             u1291 741E  
                           u1451 6E92                             u1531 6DA0  
                           u1380 75E6                             u1460 6EC6  
                           u1540 6E06                             u1381 75E2  
                           u1541 6E02                             u1390 75FC  
                           u1470 6ED6                             u1391 75F8  
                           u1471 6ED2                             u1607 762C  
                           u1480 6F0A                             u1617 7640  
                           u1490 6F40                             u1491 6F3C  
                           u1467 6EBC                             u1627 7846  
                           u1637 785A                             u1487 6F00  
                           u1577 6CFA                             u1587 7606  
                           u1597 7616                             _TMR2 000FCC  
                           _WPUB 000F7C                             _Font 7B49  
         __end_of_tftstSetWindow 6912                             abs@a 0013  
                           _dbuf 0068                             _demo 6CE8  
                           _main 670C                             _dtoa 7866  
                           _prec 0064                             _nout 0060  
                           pad@i 0018                             pad@p 0015  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001A  
                           fsr2l 000FD9                             prodh 000FF4  
                           prodl 000FF3                             start 0002  
         __end_of_SPI_Initialize 6746                  _tftstWriteColor 6726  
                   ___param_bank 000000                  ?_tftstDrawPixel 0007  
                          ??_abs 0015                            ??_pad 0017  
  __end_of_OSCILLATOR_Initialize 6702                            ?_demo 0001  
                __end_of___aodiv 724C                            ?_main 0001  
                          ?_dtoa 001C                  __end_of___aomod 70C4  
                          _ANSEL 000F7E                            _T2CON 000FCA  
         __end_of_tftstWriteData 670C                     vfpfcnvrt@fmt 0042  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                            _Font2 7C48  
                          _flags 0066                            _fputc 6C1E  
                          demo@y 009F                            _fputs 6888  
                          pad@fp 0011                            _width 0062  
                          _putch 66F6                            dtoa@d 001E  
                          dtoa@i 003E                            dtoa@n 0036  
                          dtoa@p 0030                            dtoa@s 0034  
                          dtoa@w 0032                 __end_of_SPI_Open 6B58  
                          tablat 000FF5                  ?_tftstSetWindow 0003  
                          status 000FD8                  __end_of_sprintf 69F8  
                ?_SPI_Initialize 0001                 ?_tftstFillScreen 0007  
                __initialization 676C                     __end_of_Font 7C48  
                   __end_of_demo 6E1C                     __end_of_main 6718  
                   __end_of_dtoa 7B48          __end_of_TMR2_Initialize 6726  
                         ??_demo 005E                           ??_main 0060  
                         ??_dtoa 0026                    __activetblptr 000002  
                ?_tftstWriteData 0001                  ??_tftstFillRect 000C  
                ??_tftstDrawChar 0018                  ??_tftstDrawText 002A  
       __end_of_SPI_ExchangeByte 679C                           ?_fputc 0001  
                         ?_fputs 000A                           ?_putch 0001  
                         _ANSELH 000F7F          __end_of_tftstWriteColor 6734  
                         _OSCCON 000FD3                           _SSPADD 000FC8  
                         _SSPBUF 000FC9                     vfprintf@cfmt 0056  
          tftstDrawText@cursor_x 0032            tftstDrawText@cursor_y 0031  
                      ??___aodiv 0011                        ??___aomod 0011  
                         demo@id 009D                           clear_0 6772  
                         isa$std 000001                           pad@buf 0013  
                         dtoa@fp 001C                           _strlen 6958  
                         fputc@c 0001                           fputs@c 000E  
                         fputs@i 000F                           fputs@s 000A  
          tftstDrawText@textsize 002C                     __mediumconst 7B48  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8     tftstDrawHorizontalLine@color 0009  
                         putch@c 0001                 __end_of_vfprintf 6A5A  
   tftstDrawHorizontalLine@width 0008                        ??_sprintf 005E  
              _SYSTEM_Initialize 6746                       __accesstop 0060  
        __end_of__initialization 6778               ?_SYSTEM_Initialize 0001  
                  ___rparam_used 000001                     ?_tftstReadId 0001  
              _tftstWriteCommand 6758                    __end_of_Font2 7D24  
                 __pcstackCOMRAM 0001               ?_tftstWriteCommand 0001  
            ??_SYSTEM_Initialize 0001                    __end_of_fputc 6CE8  
                  __end_of_fputs 68CC                    __end_of_putch 66F8  
               ?_TMR2_Initialize 0001                        ?_SPI_Open 0001  
            ??_tftstWriteCommand 0002          _tftstDrawHorizontalLine 680A  
                        ??_fputc 0005        __end_of_SYSTEM_Initialize 6758  
                        ??_fputs 000E              tftstWriteData@data_ 0002  
                        ??_putch 0001                       __pbssBANK0 0060  
              _TFTST_PIXEL_COUNT 7D28                 ?_tftstWriteColor 0003  
      __end_of_tftstWriteCommand 676C                 ??_tftstDrawPixel 000A  
             tftstSetWindow@xEnd 0003               tftstSetWindow@yEnd 0005  
       tftstDrawHorizontalLine@w 000B         tftstDrawHorizontalLine@x 000C  
       tftstDrawHorizontalLine@y 0007                       ??_SPI_Open 0001  
                        ?_strlen 0001             tftstSetWindow@xStart 0006  
           tftstSetWindow@yStart 0004                tftstDrawChar@line 001E  
              tftstDrawChar@size 0017                          _OSCTUNE 000F9B  
               ??_tftstSetWindow 0006                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5        __end_of_TFTST_PIXEL_COUNT 7D2A  
                        _SSPSTAT 000FC7                 ??_SPI_Initialize 0001  
                        __Hparam 0000                          __Lparam 0000  
                        ___aodiv 70C4                          ___aomod 6F60  
               ??_tftstWriteData 0002                        ?_vfprintf 0050  
                        __pcinit 676C                          __ramtop 0600  
                 tftstFillRect@h 0009                   tftstFillRect@i 000E  
                 tftstFillRect@j 000F                   tftstFillRect@w 0008  
                 tftstFillRect@x 0010                   tftstFillRect@y 0007  
                        __ptext0 670C                          __ptext1 6CE8  
                        __ptext2 679C                          __ptext3 75FE  
                        __ptext4 6912                          __ptext5 6E1C  
                        __ptext6 7400                          __ptext7 6A5A  
                        __ptext8 67B6                          __ptext9 680A  
                     demo@deltaY 009E                   tftstDrawChar@c 0012  
                 tftstDrawChar@i 0021                   tftstDrawChar@j 0020  
                 tftstDrawChar@x 001F                   tftstDrawChar@y 0011  
          _OSCILLATOR_Initialize 66F8                        _T2CONbits 000FCA  
      ??_tftstDrawHorizontalLine 000B         ??_PIN_MANAGER_Initialize 0001  
                 tftstDrawText@i 002F                   tftstDrawText@x 002E  
                 tftstDrawText@y 0022                          _sprintf 69A6  
              ?_SPI_ExchangeByte 0001             end_of_initialization 6778  
             ??_SPI_ExchangeByte 0001                          fputc@fp 0003  
              tftstDrawText@size 0029                    __Lmediumconst 7B48  
                        fputs@fp 000C                   tftstReadId@id1 0003  
              __end_of_vfpfcnvrt 7400                __end_of_tftstInit 7866  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
         tftstFillScreen@counter 0009                       ??_vfprintf 0056  
                        strlen@a 0003                          strlen@s 0001  
              _spi_configuration 7D24            tftstWriteCommand@cmd_ 0002  
          __end_of_tftstFillRect 6AC0                        _TRISCbits 000F94  
          __end_of_tftstDrawChar 75FE            __end_of_tftstDrawText 6F60  
__end_of_tftstDrawHorizontalLine 6848             SPI_ExchangeByte@data 0001  
      __end_of_spi_configuration 7D28                      vfpfcnvrt@ap 0044  
                    vfpfcnvrt@fp 0040                      vfpfcnvrt@ll 0048  
         ?_OSCILLATOR_Initialize 0001                   __end_of_strlen 69A6  
            start_initialization 676C                      __end_of_abs 6888  
                    __end_of_pad 6C1E   SPI_Open@spiUniqueConfiguration 0002  
                    vfprintf@fmt 0052                         ??_strlen 0003  
                  __pcstackBANK0 0088                 ___aodiv@dividend 0001  
              ??_tftstFillScreen 0009             __end_of_TFTST_HEIGHT 7D2B  
         _PIN_MANAGER_Initialize 67D8                        _dtoa$1102 002E  
                  __pmediumconst 7B48                         ?___aodiv 0001  
                       ?___aomod 0001                 ___aodiv@quotient 0013  
                   demo@idString 0095               tftstFillRect@color 000A  
                       ?_sprintf 0058               tftstDrawChar@color 0013  
                       _LATDbits 000F8C                         _PIR1bits 000F9E  
           tftstWriteColor@color 0003                        _vfpfcnvrt 724C  
                      _tftstInit 75FE                         _SPI_Open 6AC0  
            tftstDrawPixel@color 0008                      _INTCON2bits 000FF1  
              ??_TMR2_Initialize 0001                    ??_tftstReadId 0003  
                       __Hrparam 0000                       vfprintf@ap 0054  
                       __Lrparam 0000                       vfprintf@fp 0050  
        ??_OSCILLATOR_Initialize 0001                       ?_vfpfcnvrt 0040  
                     ?_tftstInit 0001         ?_tftstDrawHorizontalLine 0007  
                ___aodiv@divisor 0009                  ___aodiv@counter 0011  
              ??_tftstWriteColor 0005              __end_of_TFTST_WIDTH 7D2C  
                     sprintf@fmt 005A                         __ptext10 6726  
                       __ptext11 68CC                         __ptext20 6958  
                       __ptext12 6702                         __ptext21 6888  
                       __ptext13 6758                         __ptext30 6734  
                       __ptext22 6C1E                         __ptext14 6782  
                       __ptext31 67D8                         __ptext23 66F6  
                       __ptext15 69A6                         __ptext32 66F8  
                       __ptext24 6848                         __ptext16 69F8  
                       __ptext25 6F60                         __ptext17 724C  
                       __ptext26 70C4                         __ptext18 7866  
                       __ptext27 6AC0                         __ptext19 6B58  
                       __ptext28 6746                         __ptext29 6718  
                tftstDrawChar@bg 0015                  tftstDrawPixel@x 000A  
                tftstDrawPixel@y 0007                  tftstDrawText@bg 0027  
           tftstFillScreen@color 0007                         isa$xinst 000000  
                       _vfprintf 69F8              __end_of_tftstReadId 67B6  
                   _TFTST_HEIGHT 7D2A                  _tftstFillScreen 6912  
               ___aomod@dividend 0001                       _INTCONbits 000FF2  
             tftstDrawText@_text 0023               tftstDrawText@color 0025  
                      sprintf@ap 0088          ?_PIN_MANAGER_Initialize 0001  
               _SPI_ExchangeByte 6782                      _TFTST_WIDTH 7D2B  
                ___aomod@divisor 0009                   _tftstDrawPixel 67B6  
                    ??_vfpfcnvrt 0046                  ___aomod@counter 0011  
                    ??_tftstInit 0003                         sprintf@f 008A  
                       sprintf@s 0058                      _SSPCON1bits 000FC6  
                  _tftstFillRect 6A5A                    _tftstDrawChar 7400  
                  _tftstDrawText 6E1C                     ___aodiv@sign 0012  
 __end_of_PIN_MANAGER_Initialize 680A                   _tftstSetWindow 68CC  
                   ___aomod@sign 0012                      _tftstReadId 679C  
        __end_of_tftstFillScreen 6958  
